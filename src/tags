!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACK	../libapi/ltool.h	16;"	d
ADDCH_MODE_AFTER_STRING	../libapi/ltool.h	/^	ADDCH_MODE_AFTER_STRING,			\/**<往字符串后面加字符*\/$/;"	e	enum:EM_ADDCH_MODE
ADDCH_MODE_BEFORE_AFTER_STRING	../libapi/ltool.h	/^	ADDCH_MODE_BEFORE_AFTER_STRING		\/**<往字符串前后加字符*\/$/;"	e	enum:EM_ADDCH_MODE
ADDCH_MODE_BEFORE_STRING	../libapi/ltool.h	/^	ADDCH_MODE_BEFORE_STRING=0,			\/**<往字符串前面加字符*\/$/;"	e	enum:EM_ADDCH_MODE
ADM	../inc/posdef.h	7;"	d
ADMINOPER	../inc/oper.h	19;"	d
ADMINOPERPWDLEN	../src/oper.c	21;"	d	file:
ADMINPWD	../src/oper.c	11;"	d	file:
ALG_TDS_MODE_DEC	../env/NDK.h	/^	ALG_TDS_MODE_DEC = 1,		\/**< DES解密 *\/$/;"	e	enum:__anon22
ALG_TDS_MODE_DEC	../inc/NDK-bak.h	/^	ALG_TDS_MODE_DEC = 1,		\/**< DES decryption*\/$/;"	e	enum:__anon105
ALG_TDS_MODE_ENC	../env/NDK.h	/^	ALG_TDS_MODE_ENC = 0,		\/**< DES加密 *\/$/;"	e	enum:__anon22
ALG_TDS_MODE_ENC	../inc/NDK-bak.h	/^	ALG_TDS_MODE_ENC = 0,		\/**< DES encryption*\/$/;"	e	enum:__anon105
ALIGN_TYPE_LEFT	../libapi/ltool.h	/^    ALIGN_TYPE_LEFT   = 0,$/;"	e	enum:__anon179
ALIGN_TYPE_RIGHT	../libapi/ltool.h	/^    ALIGN_TYPE_RIGHT  = 1$/;"	e	enum:__anon179
APPINFO	../env/NDK.h	/^typedef struct APPINFO{$/;"	s
APPINFO	../inc/NDK-bak.h	/^typedef struct APPINFO{$/;"	s
APPINFO::nIsMaster	../env/NDK.h	/^    int		nIsMaster;									\/**<主控标志 *\/$/;"	m	struct:APPINFO	access:public
APPINFO::nIsMaster	../inc/NDK-bak.h	/^    int		nIsMaster;									\/**<master control symbol*\/$/;"	m	struct:APPINFO	access:public
APPINFO::nSeriNo	../env/NDK.h	/^    int		nSeriNo;									\/**<编号,V2版保留,但意义不同	*\/$/;"	m	struct:APPINFO	access:public
APPINFO::nSeriNo	../inc/NDK-bak.h	/^    int		nSeriNo;									\/**<Serial No. V2 reserves it, but the meaning differs	*\/$/;"	m	struct:APPINFO	access:public
APPINFO::sunReverse	../env/NDK.h	/^    uint	sunReverse[3];\/**<sunReverse[0]值为非0值表示该应用为测试版本*\/$/;"	m	struct:APPINFO	access:public
APPINFO::sunReverse	../inc/NDK-bak.h	/^    uint	sunReverse[3];$/;"	m	struct:APPINFO	access:public
APPINFO::szAppName	../env/NDK.h	/^    uchar 	szAppName[NDK_APP_NAME_MAX_LEN + 1];		\/**<用户程序名称*\/$/;"	m	struct:APPINFO	access:public
APPINFO::szAppName	../inc/NDK-bak.h	/^    uchar 	szAppName[NDK_APP_NAME_MAX_LEN + 1];		\/**<user program name*\/$/;"	m	struct:APPINFO	access:public
APPINFO::szBuildTime	../env/NDK.h	/^    uchar	szBuildTime[NDK_APP_BUILD_TIME_LEN + 1];	\/**<文件编译时间*\/$/;"	m	struct:APPINFO	access:public
APPINFO::szBuildTime	../inc/NDK-bak.h	/^    uchar	szBuildTime[NDK_APP_BUILD_TIME_LEN + 1];	\/**<when file is compiled*\/$/;"	m	struct:APPINFO	access:public
APPINFO::szVerBuf	../env/NDK.h	/^    uchar	szVerBuf[NDK_APP_VER_MAX_LEN + 1];			\/**<用户程序版本信息*\/$/;"	m	struct:APPINFO	access:public
APPINFO::szVerBuf	../inc/NDK-bak.h	/^    uchar	szVerBuf[NDK_APP_VER_MAX_LEN + 1];			\/**<user program version info*\/$/;"	m	struct:APPINFO	access:public
APP_FAIL	../libapi/ltool.h	25;"	d
APP_FAIL	../src/PSam.c	12;"	d	file:
APP_FUNCQUIT	../libapi/ltool.h	28;"	d
APP_NAME	../inc/posdef.h	57;"	d
APP_NAMEDESC	../inc/posdef.h	59;"	d
APP_QUIT	../libapi/ltool.h	26;"	d
APP_QUIT	../src/PSam.c	11;"	d	file:
APP_SERIAL	../inc/posdef.h	65;"	d
APP_SUCC	../libapi/ltool.h	24;"	d
APP_SUCC	../src/PSam.c	10;"	d	file:
APP_TIMEOUT	../libapi/ltool.h	27;"	d
APP_VERSION	../inc/posdef.h	63;"	d
AR	../build/Makefile	/^AR=$(CROSS_COMPILE)ar$/;"	m
AR	../src/Makefile	/^AR=$(CROSS_COMPILE)ar$/;"	m
ARR_SIZE	../inc/selftest.h	68;"	d
ASSERT	../inc/debug.h	41;"	d
ASSERT	../inc/debug.h	45;"	d
ASSERT_FAIL	../inc/debug.h	50;"	d
ASSERT_FAIL	../src/PSam.c	6;"	d	file:
ASSERT_HANGUP_FAIL	../inc/debug.h	69;"	d
ASSERT_HANGUP_QUIT	../inc/debug.h	62;"	d
ASSERT_QUIT	../inc/debug.h	56;"	d
AUX1	../inc/PriKeyDownload.h	66;"	d
AUX2	../inc/PriKeyDownload.h	67;"	d
AUX3	../inc/PriKeyDownload.h	68;"	d
AtCmdNo	../env/NDK.h	/^		EM_WLM_CMD AtCmdNo;		\/**<命令号*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
AtCmdNo	../inc/NDK-bak.h	/^		EM_WLM_CMD AtCmdNo;	\/**<command No.*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
AuxConflictCheck	../inc/Pri_DownloadApi.h	/^int AuxConflictCheck(void);$/;"	p	signature:(void)
AuxConflictCheck	../src/Pri_DownloadApi.c	/^int AuxConflictCheck(void)$/;"	f	signature:(void)
Auxautodetect	../src/PriKey_app.c	/^int Auxautodetect = 1;  \/\/正常下载时候的自动检测串口$/;"	v
BACKLIGHT_LOCKON	../env/NDK.h	/^	BACKLIGHT_LOCKON,		\/**<禁止液晶背光自动关闭*\/$/;"	e	enum:__anon3
BACKLIGHT_LOCKON	../inc/NDK-bak.h	/^	BACKLIGHT_LOCKON,		\/**<disable LCD backlit automatic OFF*\/$/;"	e	enum:__anon90
BACKLIGHT_OFF	../env/NDK.h	/^	BACKLIGHT_OFF ,			\/**<点亮液晶背光*\/$/;"	e	enum:__anon3
BACKLIGHT_OFF	../inc/NDK-bak.h	/^	BACKLIGHT_OFF ,			\/**<turn on LCD backlit*\/ $/;"	e	enum:__anon90
BACKLIGHT_ON	../env/NDK.h	/^	BACKLIGHT_ON,			\/**<关闭液晶*\/$/;"	e	enum:__anon3
BACKLIGHT_ON	../inc/NDK-bak.h	/^	BACKLIGHT_ON,			\/**<turn off LCD backlit*\/$/;"	e	enum:__anon90
BACKSPACE	../inc/PriKeyDownload.h	33;"	d
BASP	../inc/PriKeyDownload.h	32;"	d
BINDIR	../build/Makefile	/^BINDIR = .$/;"	m
BINDIR	../src/Makefile	/^BINDIR = .$/;"	m
BOOL	../libapi/ltool.h	/^typedef unsigned char BOOL;$/;"	t
BPS115200	../inc/selftest.h	51;"	d
BPS1200	../inc/selftest.h	43;"	d
BPS19200	../inc/selftest.h	48;"	d
BPS230400	../inc/selftest.h	52;"	d
BPS2400	../inc/selftest.h	44;"	d
BPS300	../inc/selftest.h	42;"	d
BPS38400	../inc/selftest.h	49;"	d
BPS4800	../inc/selftest.h	45;"	d
BPS57600	../inc/selftest.h	50;"	d
BPS7200	../inc/selftest.h	46;"	d
BPS9600	../inc/selftest.h	47;"	d
BUTTON_MID_HEIGHT	../inc/theme.h	18;"	d
BUTTON_MID_HEIGHT	../inc/theme.h	92;"	d
BUTTON_MIN_HEIGHT	../inc/theme.h	17;"	d
BUTTON_MIN_HEIGHT	../inc/theme.h	91;"	d
BakPsam_ChkRsp	../inc/PSam.h	/^int BakPsam_ChkRsp(int nResponse);$/;"	p	signature:(int nResponse)
BakPsam_ChkRsp	../src/PSam.c	/^int BakPsam_ChkRsp(int nResponse)$/;"	f	signature:(int nResponse)
BakPsam_CommWrite	../inc/PSam.h	/^int BakPsam_CommWrite(unsigned char *psSend, int nSendLen, unsigned char *psRecv, int *pnRecvLen);$/;"	p	signature:(unsigned char *psSend, int nSendLen, unsigned char *psRecv, int *pnRecvLen)
BakPsam_CommWrite	../src/PSam.c	/^int BakPsam_CommWrite(unsigned char *psSend, int nSendLen, unsigned char *psRecv, int *pnRecvLen)$/;"	f	signature:(unsigned char *psSend, int nSendLen, unsigned char *psRecv, int *pnRecvLen)
BakPsam_PIN_Operator	../inc/PSam.h	/^int BakPsam_PIN_Operator(char cMode);$/;"	p	signature:(char cMode)
BakPsam_PIN_Operator	../src/PSam.c	/^int BakPsam_PIN_Operator(char cMode)$/;"	f	signature:(char cMode)
BakPsam_PowerDown	../inc/PSam.h	/^int BakPsam_PowerDown(void);$/;"	p	signature:(void)
BakPsam_PowerDown	../src/PSam.c	/^int BakPsam_PowerDown(void)$/;"	f	signature:(void)
BakPsam_PowerUp	../inc/PSam.h	/^int BakPsam_PowerUp(void);$/;"	p	signature:(void)
BakPsam_PowerUp	../src/PSam.c	/^int BakPsam_PowerUp(void)$/;"	f	signature:(void)
BakPsam_ProICComm	../inc/PSam.h	/^int BakPsam_ProICComm(const char cCLA,const char cINS,const char cP1,const char cP2,const char cLc,const char *psInBuf,char cLe,char* psOutBuf,int * pnOutDataLen);$/;"	p	signature:(const char cCLA,const char cINS,const char cP1,const char cP2,const char cLc,const char *psInBuf,char cLe,char* psOutBuf,int * pnOutDataLen)
BakPsam_ProICComm	../src/PSam.c	/^int BakPsam_ProICComm(const char cCLA,const char cINS,const char cP1,const char cP2,const char cLc,const char *psInBuf,char cLe,char* psOutBuf,int * pnOutDataLen)$/;"	f	signature:(const char cCLA,const char cINS,const char cP1,const char cP2,const char cLc,const char *psInBuf,char cLe,char* psOutBuf,int * pnOutDataLen)
BakPsam_ProICComm	../src/PSam.c	/^int BakPsam_ProICComm(const char cCLA,const char cINS,const char cP1,const char cP2,const char cLc,const char *psInBuf,char cLe,char* psOutBuf,int * pnOutDataLen);$/;"	p	file:	signature:(const char cCLA,const char cINS,const char cP1,const char cP2,const char cLc,const char *psInBuf,char cLe,char* psOutBuf,int * pnOutDataLen)
BakPsam_Read_Binary	../inc/PSam.h	/^int BakPsam_Read_Binary(char cP1,char cP2,char* psResponse,int *pnDataLen,int nLen);$/;"	p	signature:(char cP1,char cP2,char* psResponse,int *pnDataLen,int nLen)
BakPsam_Read_Binary	../src/PSam.c	/^int BakPsam_Read_Binary(char cP1,char cP2,char* psResponse,int *pnDataLen,int nLen)$/;"	f	signature:(char cP1,char cP2,char* psResponse,int *pnDataLen,int nLen)
BakPsam_Read_Param	../inc/PSam.h	/^int BakPsam_Read_Param(char* psResponse, int *pnDataLen,int nLen);$/;"	p	signature:(char* psResponse, int *pnDataLen,int nLen)
BakPsam_Read_Param	../src/PSam.c	/^int BakPsam_Read_Param(char* psResponse, int *pnDataLen,int nLen)$/;"	f	signature:(char* psResponse, int *pnDataLen,int nLen)
BakPsam_Select_Aid	../inc/PSam.h	/^int BakPsam_Select_Aid(int nMode);$/;"	p	signature:(int nMode)
BakPsam_Select_Aid	../src/PSam.c	/^int BakPsam_Select_Aid(int nMode)$/;"	f	signature:(int nMode)
BakPsam_UpdateParam	../inc/PSam.h	/^int BakPsam_UpdateParam(const char* sParam, int nLen);$/;"	p	signature:(const char* sParam, int nLen)
BakPsam_UpdateParam	../src/PSam.c	/^int BakPsam_UpdateParam(const char* sParam, int nLen)$/;"	f	signature:(const char* sParam, int nLen)
BakPsam_Update_Binary	../inc/PSam.h	/^int BakPsam_Update_Binary(char cP1,char cP2,const char *psData,int nDatalen);$/;"	p	signature:(char cP1,char cP2,const char *psData,int nDatalen)
BakPsam_Update_Binary	../src/PSam.c	/^int BakPsam_Update_Binary(char cP1,char cP2,const char *psData,int nDatalen)$/;"	f	signature:(char cP1,char cP2,const char *psData,int nDatalen)
CARD_FUNCQUIT	../libapi/lposcard.h	21;"	d
CARD_INSERTIC	../libapi/lposcard.h	/^	CARD_INSERTIC = (1<<2),		\/**<插入IC卡*\/$/;"	e	enum:EM_CARDINPUTMODE
CARD_INSERTIC_RFCARD	../libapi/lposcard.h	/^	CARD_INSERTIC_RFCARD = CARD_INSERTIC|CARD_RFCARD$/;"	e	enum:EM_CARDINPUTMODE
CARD_KEYIN	../libapi/lposcard.h	/^	CARD_KEYIN = (1<<1),		\/**<手输卡号*\/$/;"	e	enum:EM_CARDINPUTMODE
CARD_KEYIN_INSERIC	../libapi/lposcard.h	/^	CARD_KEYIN_INSERIC = CARD_KEYIN|CARD_INSERTIC,$/;"	e	enum:EM_CARDINPUTMODE
CARD_KEYIN_INSERIC_RFCARD	../libapi/lposcard.h	/^	CARD_KEYIN_INSERIC_RFCARD = CARD_KEYIN_INSERIC|CARD_RFCARD,$/;"	e	enum:EM_CARDINPUTMODE
CARD_KEYIN_RFCARD	../libapi/lposcard.h	/^	CARD_KEYIN_RFCARD = CARD_KEYIN|CARD_RFCARD,$/;"	e	enum:EM_CARDINPUTMODE
CARD_RFCARD	../libapi/lposcard.h	/^	CARD_RFCARD = (1<<3),		\/**<挥非接卡*\/$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE	../libapi/lposcard.h	/^	CARD_STRIPE = (1<<0),		\/**<刷磁卡*\/$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_INSERTIC	../libapi/lposcard.h	/^	CARD_STRIPE_INSERTIC = CARD_STRIPE|CARD_INSERTIC,$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_INSERTIC_RFCARD	../libapi/lposcard.h	/^	CARD_STRIPE_INSERTIC_RFCARD = CARD_STRIPE_INSERTIC |CARD_RFCARD,$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_KEYIN	../libapi/lposcard.h	/^	CARD_STRIPE_KEYIN = CARD_STRIPE|CARD_KEYIN,$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_KEYIN_INSERTIC	../libapi/lposcard.h	/^	CARD_STRIPE_KEYIN_INSERTIC = CARD_STRIPE_KEYIN|CARD_INSERTIC,$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_KEYIN_INSERTIC_RFCARD	../libapi/lposcard.h	/^	CARD_STRIPE_KEYIN_INSERTIC_RFCARD = CARD_STRIPE_KEYIN_INSERTIC|CARD_RFCARD,$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_KEYIN_RFCARD	../libapi/lposcard.h	/^	CARD_STRIPE_KEYIN_RFCARD = CARD_STRIPE_KEYIN|CARD_RFCARD,$/;"	e	enum:EM_CARDINPUTMODE
CARD_STRIPE_RFCARD	../libapi/lposcard.h	/^	CARD_STRIPE_RFCARD = CARD_RFCARD|CARD_STRIPE,$/;"	e	enum:EM_CARDINPUTMODE
CA_CONFIG_FILE	../inc/PriKeyDownload.h	117;"	d
CA_DEFAULT_CONFIG_FILE	../inc/PriKeyDownload.h	116;"	d
CA_FILE	../inc/PriKeyDownload.h	118;"	d
CC	../build/Makefile	/^CC=$(CROSS_COMPILE)gcc$/;"	m
CC	../src/Makefile	/^CC=$(CROSS_COMPILE)gcc$/;"	m
CDMA_STATION	../env/NDK.h	/^	ST_CDMA_STATION_INFO CDMA_STATION;	\/**<CDMA基站*\/$/;"	m	union:__anon46	access:public
CERT_FILE	../inc/PriKeyDownload.h	110;"	d
CFG_BOOL	../inc/parsecfg.h	/^	CFG_BOOL,$/;"	e	enum:__anon155
CFG_BOOL_ERROR	../inc/parsecfg.h	/^	CFG_BOOL_ERROR,$/;"	e	enum:__anon153
CFG_CREATE_FAIL	../inc/parsecfg.h	/^	CFG_CREATE_FAIL,$/;"	e	enum:__anon153
CFG_DOUBLE	../inc/parsecfg.h	/^	CFG_DOUBLE$/;"	e	enum:__anon155
CFG_DOUBLE_QUOTE	../inc/parsecfg.h	/^	CFG_DOUBLE_QUOTE$/;"	e	enum:__anon157
CFG_END	../inc/parsecfg.h	/^	CFG_END,$/;"	e	enum:__anon155
CFG_FLOAT	../inc/parsecfg.h	/^	CFG_FLOAT,$/;"	e	enum:__anon155
CFG_INI	../inc/parsecfg.h	/^	CFG_INI$/;"	e	enum:__anon154
CFG_INT	../inc/parsecfg.h	/^	CFG_INT,$/;"	e	enum:__anon155
CFG_INTERNAL_ERROR	../inc/parsecfg.h	/^	CFG_INTERNAL_ERROR,$/;"	e	enum:__anon153
CFG_INVALID_NUMBER	../inc/parsecfg.h	/^	CFG_INVALID_NUMBER,$/;"	e	enum:__anon153
CFG_JUST_RETURN_WITHOUT_MSG	../inc/parsecfg.h	/^	CFG_JUST_RETURN_WITHOUT_MSG$/;"	e	enum:__anon153
CFG_LONG	../inc/parsecfg.h	/^	CFG_LONG,$/;"	e	enum:__anon155
CFG_MEM_ALLOC_FAIL	../inc/parsecfg.h	/^	CFG_MEM_ALLOC_FAIL,$/;"	e	enum:__anon153
CFG_NO_CLOSING_BRACE	../inc/parsecfg.h	/^	CFG_NO_CLOSING_BRACE,$/;"	e	enum:__anon153
CFG_NO_ERROR	../inc/parsecfg.h	/^	CFG_NO_ERROR,$/;"	e	enum:__anon153
CFG_NO_QUOTE	../inc/parsecfg.h	/^	CFG_NO_QUOTE,$/;"	e	enum:__anon157
CFG_OPEN_FAIL	../inc/parsecfg.h	/^	CFG_OPEN_FAIL,$/;"	e	enum:__anon153
CFG_OUT_OF_RANGE	../inc/parsecfg.h	/^	CFG_OUT_OF_RANGE,$/;"	e	enum:__anon153
CFG_PARAMETER	../inc/parsecfg.h	/^	CFG_PARAMETER,$/;"	e	enum:__anon156
CFG_SECTION	../inc/parsecfg.h	/^	CFG_SECTION$/;"	e	enum:__anon156
CFG_SIMPLE	../inc/parsecfg.h	/^	CFG_SIMPLE,$/;"	e	enum:__anon154
CFG_SINGLE_QUOTE	../inc/parsecfg.h	/^	CFG_SINGLE_QUOTE,$/;"	e	enum:__anon157
CFG_STRING	../inc/parsecfg.h	/^	CFG_STRING,$/;"	e	enum:__anon155
CFG_STRING_LIST	../inc/parsecfg.h	/^	CFG_STRING_LIST,$/;"	e	enum:__anon155
CFG_SYNTAX_ERROR	../inc/parsecfg.h	/^	CFG_SYNTAX_ERROR,$/;"	e	enum:__anon153
CFG_UINT	../inc/parsecfg.h	/^	CFG_UINT,$/;"	e	enum:__anon155
CFG_ULONG	../inc/parsecfg.h	/^	CFG_ULONG,$/;"	e	enum:__anon155
CFG_USED_SECTION	../inc/parsecfg.h	/^	CFG_USED_SECTION,$/;"	e	enum:__anon153
CFG_VALUE	../inc/parsecfg.h	/^	CFG_VALUE,$/;"	e	enum:__anon156
CFG_WRONG_PARAMETER	../inc/parsecfg.h	/^	CFG_WRONG_PARAMETER,$/;"	e	enum:__anon153
CHECK_PIN	../src/PSam.c	19;"	d	file:
CHKVALUELEN	../inc/key.h	27;"	d
CHOOSE_IME_MODE_ENGLISH	../libapi/lui.h	/^	CHOOSE_IME_MODE_ENGLISH ,			\/**<选择英文*\/$/;"	e	enum:__anon189
CHOOSE_IME_MODE_IME_BIHUA	../libapi/lui.h	/^	CHOOSE_IME_MODE_IME_BIHUA,		\/**<笔画*\/$/;"	e	enum:__anon189
CHOOSE_IME_MODE_IME_NUM	../libapi/lui.h	/^	CHOOSE_IME_MODE_IME_NUM,    		\/**<数字*\/$/;"	e	enum:__anon189
CHOOSE_IME_MODE_NUMPY	../libapi/lui.h	/^	CHOOSE_IME_MODE_NUMPY,			\/**<选择数拼*\/$/;"	e	enum:__anon189
CHOOSE_IME_MODE_QUWEI	../libapi/lui.h	/^	CHOOSE_IME_MODE_QUWEI				\/**<选择区位*\/$/;"	e	enum:__anon189
CLOSELINE	../src/main.c	33;"	d	file:
COMBO_EDGE	../inc/theme.h	112;"	d
COMBO_EDGE	../inc/theme.h	38;"	d
COMBO_INNER	../inc/theme.h	111;"	d
COMBO_INNER	../inc/theme.h	37;"	d
COMBO_LIST_EDGE	../inc/theme.h	110;"	d
COMBO_LIST_EDGE	../inc/theme.h	36;"	d
COMBO_MIN_HEIGHT	../inc/theme.h	109;"	d
COMBO_MIN_HEIGHT	../inc/theme.h	35;"	d
COMM_TYPE_BTH	../env/NDK.h	/^                COMM_TYPE_BTH,                  \/**<蓝牙*\/$/;"	e	enum:__anon51
COMM_TYPE_ETH	../env/NDK.h	/^                COMM_TYPE_ETH,                  \/**<以太网*\/$/;"	e	enum:__anon51
COMM_TYPE_PPP	../env/NDK.h	/^                COMM_TYPE_PPP,                  \/**<PPP*\/$/;"	e	enum:__anon51
COMM_TYPE_UNKNOW	../env/NDK.h	/^                COMM_TYPE_UNKNOW,          \/**<未知*\/$/;"	e	enum:__anon51
COMM_TYPE_WIFI	../env/NDK.h	/^                COMM_TYPE_WIFI,                 \/**<WIFI*\/$/;"	e	enum:__anon51
CONFIG_ERR_FILE_IO	../inc/libconfig.h	/^  CONFIG_ERR_FILE_IO = 1,$/;"	e	enum:__anon84
CONFIG_ERR_FILE_IO	../libapi/libconfig.h	/^  CONFIG_ERR_FILE_IO = 1,$/;"	e	enum:__anon168
CONFIG_ERR_NONE	../inc/libconfig.h	/^  CONFIG_ERR_NONE = 0,$/;"	e	enum:__anon84
CONFIG_ERR_NONE	../libapi/libconfig.h	/^  CONFIG_ERR_NONE = 0,$/;"	e	enum:__anon168
CONFIG_ERR_PARSE	../inc/libconfig.h	/^  CONFIG_ERR_PARSE = 2$/;"	e	enum:__anon84
CONFIG_ERR_PARSE	../libapi/libconfig.h	/^  CONFIG_ERR_PARSE = 2$/;"	e	enum:__anon168
CONFIG_FALSE	../inc/libconfig.h	64;"	d
CONFIG_FALSE	../libapi/libconfig.h	64;"	d
CONFIG_FORMAT_DEFAULT	../inc/libconfig.h	58;"	d
CONFIG_FORMAT_DEFAULT	../libapi/libconfig.h	58;"	d
CONFIG_FORMAT_HEX	../inc/libconfig.h	59;"	d
CONFIG_FORMAT_HEX	../libapi/libconfig.h	59;"	d
CONFIG_GROUP	../inc/libconfig.h	/^    CONFIG_GROUP,$/;"	e	enum:__anon85
CONFIG_GROUP	../libapi/libconfig.h	/^    CONFIG_GROUP,$/;"	e	enum:__anon169
CONFIG_LIST	../inc/libconfig.h	/^    CONFIG_LIST$/;"	e	enum:__anon85
CONFIG_LIST	../libapi/libconfig.h	/^    CONFIG_LIST$/;"	e	enum:__anon169
CONFIG_OPTION_AUTOCONVERT	../inc/libconfig.h	61;"	d
CONFIG_OPTION_AUTOCONVERT	../libapi/libconfig.h	61;"	d
CONFIG_STRING	../inc/libconfig.h	/^	CONFIG_STRING,$/;"	e	enum:__anon85
CONFIG_STRING	../libapi/libconfig.h	/^	CONFIG_STRING,$/;"	e	enum:__anon169
CONFIG_TRUE	../inc/libconfig.h	63;"	d
CONFIG_TRUE	../libapi/libconfig.h	63;"	d
CONFIG_TYPE_ARRAY	../inc/libconfig.h	55;"	d
CONFIG_TYPE_ARRAY	../libapi/libconfig.h	55;"	d
CONFIG_TYPE_BOOL	../inc/libconfig.h	54;"	d
CONFIG_TYPE_BOOL	../libapi/libconfig.h	54;"	d
CONFIG_TYPE_FLOAT	../inc/libconfig.h	52;"	d
CONFIG_TYPE_FLOAT	../libapi/libconfig.h	52;"	d
CONFIG_TYPE_GROUP	../inc/libconfig.h	49;"	d
CONFIG_TYPE_GROUP	../libapi/libconfig.h	49;"	d
CONFIG_TYPE_INT	../inc/libconfig.h	50;"	d
CONFIG_TYPE_INT	../libapi/libconfig.h	50;"	d
CONFIG_TYPE_INT64	../inc/libconfig.h	51;"	d
CONFIG_TYPE_INT64	../libapi/libconfig.h	51;"	d
CONFIG_TYPE_LIST	../inc/libconfig.h	56;"	d
CONFIG_TYPE_LIST	../libapi/libconfig.h	56;"	d
CONFIG_TYPE_NONE	../inc/libconfig.h	48;"	d
CONFIG_TYPE_NONE	../libapi/libconfig.h	48;"	d
CONFIG_TYPE_STRING	../inc/libconfig.h	53;"	d
CONFIG_TYPE_STRING	../libapi/libconfig.h	53;"	d
CP	../build/Makefile	/^CP=cp$/;"	m
CP	../src/Makefile	/^CP=cp$/;"	m
CR	../inc/PriKeyDownload.h	34;"	d
CROSS_COMPILE	../build/Makefile	/^CROSS_COMPILE=arm-unknown-linux-gnu-$/;"	m
CROSS_COMPILE	../src/Makefile	/^CROSS_COMPILE=arm-unknown-linux-gnu-$/;"	m
CSR_CONFIG_FILE	../inc/PriKeyDownload.h	112;"	d
CSR_DEFAULT_CONFIG_FILE	../inc/PriKeyDownload.h	111;"	d
CSR_FILE	../inc/PriKeyDownload.h	109;"	d
CSR_SIGN_FILE	../inc/PriKeyDownload.h	114;"	d
CallbackMock	../env/NDK.h	/^typedef int (*CallbackMock)(int, void *,int,void *,int *);$/;"	t
CallbackMock	../inc/NDK-bak.h	/^typedef int (*CallbackMock)(int, void *,int,void **,int *);$/;"	t
Chg_KEKBranch	../src/main.c	/^static int Chg_KEKBranch(int id)$/;"	f	file:	signature:(int id)
Chg_KEKBranch	../src/main.c	/^static int Chg_KEKBranch(int id);$/;"	p	file:	signature:(int id)
CommInitConfig	../inc/key.h	/^extern int CommInitConfig(void);$/;"	p	signature:(void)
CommInitConfig	../src/Pri_DownloadTool.c	/^int CommInitConfig(void)$/;"	f	signature:(void)
ConflictOperate	../inc/Pri_DownloadApi.h	/^int ConflictOperate(void);$/;"	p	signature:(void)
ConflictOperate	../src/Pri_DownloadApi.c	/^int ConflictOperate(void)$/;"	f	signature:(void)
DEBUG	../inc/PriKeyDownload.h	9;"	d
DEBUG	../inc/selftest.h	18;"	d
DEFAULT	../inc/theme.h	/^    DEFAULT = 0,$/;"	e	enum:__anon164
DEFAULT_PAGE_MAX	../src/PriKey_app.c	1302;"	d	file:
DEF_EDGE	../inc/theme.h	15;"	d
DEF_EDGE	../inc/theme.h	89;"	d
DES	../src/main.c	30;"	d	file:
DES3_KEY_LEN	../inc/tr31_format.h	23;"	d
DESTYPE	../inc/key.h	22;"	d
DEV_MAIN_NUM	../inc/NDK-bak.h	/^    DEV_MAIN_NUM	\/**<The main equipment*\/$/;"	e	enum:__anon134
DFUNCKEY_DOWN	../inc/selftest.h	62;"	d
DFUNCKEY_LEFT	../inc/selftest.h	63;"	d
DFUNCKEY_RIGHT	../inc/selftest.h	64;"	d
DFUNCKEY_UP	../inc/selftest.h	61;"	d
DIGIT_2MSB	../inc/emvnn.h	43;"	d
DIGIT_MSB	../inc/emvnn.h	42;"	d
DISABLE	../inc/theme.h	/^    DISABLE = 1,$/;"	e	enum:__anon164
DISKDRIVERLOADFAIL	../env/NDK.h	/^	DISKDRIVERLOADFAIL=3,    \/**<U盘或Sd卡驱动加载失败*\/$/;"	e	enum:__anon70
DISKDRIVERLOADFAIL	../inc/NDK-bak.h	/^	DISKDRIVERLOADFAIL=3,    \/**<U disk or SD card drive load failure*\/$/;"	e	enum:__anon145
DISKMOUNTING	../env/NDK.h	/^	DISKMOUNTING=4,          \/**<U盘或Sd卡正在加载中*\/$/;"	e	enum:__anon70
DISKMOUNTING	../inc/NDK-bak.h	/^	DISKMOUNTING=4,          \/**<U disk or Sd card is being loaded*\/$/;"	e	enum:__anon145
DISKMOUNTSUCC	../env/NDK.h	/^	DISKMOUNTSUCC=1,         \/**<U盘或Sd卡可用*\/$/;"	e	enum:__anon70
DISKMOUNTSUCC	../inc/NDK-bak.h	/^	DISKMOUNTSUCC=1,         \/**<U disk or Sd card is available*\/$/;"	e	enum:__anon145
DISKNOEXIT	../env/NDK.h	/^	DISKNOEXIT=5,	         \/**<未检测到SD卡*\/$/;"	e	enum:__anon70
DISKNOEXIT	../inc/NDK-bak.h	/^	DISKNOEXIT=5,	         \/**<SD card not detected*\/$/;"	e	enum:__anon145
DISKNOTOPEN	../env/NDK.h	/^	DISKNOTOPEN=2,           \/**<U盘或Sd卡未打开*\/$/;"	e	enum:__anon70
DISKNOTOPEN	../inc/NDK-bak.h	/^	DISKNOTOPEN=2,           \/**<U disk or Sd card is not open*\/$/;"	e	enum:__anon145
DISKTIMEOUT	../env/NDK.h	/^	DISKTIMEOUT=6            \/**<检测SD卡超时*\/$/;"	e	enum:__anon70
DISKTIMEOUT	../inc/NDK-bak.h	/^	DISKTIMEOUT=6            \/**<Detection of SD card timeout*\/$/;"	e	enum:__anon145
DISPFONT_CUSTOM	../env/NDK.h	/^	DISPFONT_CUSTOM,			\/**<系统默认的显示字体,小*\/$/;"	e	enum:__anon4
DISPFONT_CUSTOM	../inc/NDK-bak.h	/^	DISPFONT_CUSTOM,			\/**<system default display font*\/$/;"	e	enum:__anon91
DISPFONT_EXTRA	../env/NDK.h	/^	DISPFONT_EXTRA,				\/**<额外尺寸的显示字体，中*\/$/;"	e	enum:__anon4
DISPFONT_EXTRA	../inc/NDK-bak.h	/^	DISPFONT_EXTRA,			\/**<extra sized display font*\/$/;"	e	enum:__anon91
DISPFONT_EXTRA_LARGE	../env/NDK.h	/^	DISPFONT_EXTRA_LARGE,		\/**<额外尺寸的显示字体，大*\/$/;"	e	enum:__anon4
DISPFONT_USER	../env/NDK.h	/^	DISPFONT_USER,				\/**<用户自定义字体*\/$/;"	e	enum:__anon4
DISPFONT_USER	../inc/NDK-bak.h	/^	DISPFONT_USER,				\/**<customized font*\/$/;"	e	enum:__anon91
DISPLAY_ALIGN_BIGFONT	../libapi/lui.h	/^	DISPLAY_ALIGN_BIGFONT	=0,			\/**<按大字体排列对齐*\/$/;"	e	enum:__anon183
DISPLAY_ALIGN_SMALLFONT	../libapi/lui.h	/^	DISPLAY_ALIGN_SMALLFONT			\/**<按小字体排列对齐*\/$/;"	e	enum:__anon183
DISPLAY_MODE_CENTER	../libapi/lui.h	/^	DISPLAY_MODE_CENTER=4,			\/**<靠右显示*\/$/;"	e	enum:__anon182
DISPLAY_MODE_CLEARLINE	../libapi/lui.h	/^	DISPLAY_MODE_CLEARLINE=1,			\/**<显示前清行*\/$/;"	e	enum:__anon182
DISPLAY_MODE_LEFT	../libapi/lui.h	/^	DISPLAY_MODE_LEFT=2,				\/**<靠左显示*\/$/;"	e	enum:__anon182
DISPLAY_MODE_NORMAL	../libapi/lui.h	/^	DISPLAY_MODE_NORMAL=0,			\/**<显示前不清行*\/$/;"	e	enum:__anon182
DISPLAY_MODE_RIGHT	../libapi/lui.h	/^	DISPLAY_MODE_RIGHT=8,				\/**<居中显示*\/$/;"	e	enum:__anon182
DLE	../libapi/ltool.h	17;"	d
DL_CMD_BATCH	../inc/PriKeyDownload.h	105;"	d
DL_CMD_END	../inc/PriKeyDownload.h	106;"	d
DL_CMD_ENQ	../inc/PriKeyDownload.h	81;"	d
DL_CMD_FILELEN	../inc/PriKeyDownload.h	156;"	d
DL_CMD_FILENAME	../inc/PriKeyDownload.h	155;"	d
DL_CMD_FILENAME	../inc/PriKeyDownload.h	85;"	d
DL_CMD_FILENAMELEN	../inc/PriKeyDownload.h	154;"	d
DL_CMD_FILENAMELEN	../inc/PriKeyDownload.h	84;"	d
DL_CMD_FILEOWER	../inc/PriKeyDownload.h	86;"	d
DL_CMD_FILEVER	../inc/PriKeyDownload.h	89;"	d
DL_CMD_KEEPOPER	../inc/PriKeyDownload.h	104;"	d
DL_CMD_PASSWORD	../inc/PriKeyDownload.h	83;"	d
DL_CMD_RECEIVE_OK	../inc/PriKeyDownload.h	157;"	d
DL_CMD_RECEIVE_OK	../inc/PriKeyDownload.h	87;"	d
DL_CMD_RESEND	../inc/PriKeyDownload.h	158;"	d
DL_CMD_RESEND	../inc/PriKeyDownload.h	88;"	d
DL_CMD_SENDCERT	../inc/PriKeyDownload.h	159;"	d
DL_CMD_TYPE	../inc/PriKeyDownload.h	82;"	d
DL_ENQ_TYPE	../inc/PriKeyDownload.h	92;"	d
DL_PROC_AUTH	../inc/PriKeyDownload.h	100;"	d
DL_PROC_DEL	../inc/PriKeyDownload.h	95;"	d
DL_PROC_DOWN	../inc/PriKeyDownload.h	94;"	d
DL_PROC_GETINFO	../inc/PriKeyDownload.h	101;"	d
DL_PROC_KEY_LOAD	../inc/PriKeyDownload.h	166;"	d
DL_PROC_MUTUAL_AUTH	../inc/PriKeyDownload.h	167;"	d
DL_PROC_PRIKEY	../inc/PriKeyDownload.h	96;"	d
DL_PROC_PUBKEY	../inc/PriKeyDownload.h	97;"	d
DL_PROC_SET_DATETIME_HARD	../inc/PriKeyDownload.h	170;"	d
DL_PROC_SET_DATETIME_SOFT	../inc/PriKeyDownload.h	169;"	d
DL_PROC_SET_OWNER	../inc/PriKeyDownload.h	168;"	d
DL_PROC_UPT	../inc/PriKeyDownload.h	93;"	d
DOT	../inc/PriKeyDownload.h	38;"	d
DOWN	../inc/PriKeyDownload.h	29;"	d
DOWNLOAD_CFG_FILE	../src/Pri_DownloadTool.c	517;"	d	file:
DOWNLOAD_DIR	../src/PriKey_app.c	17;"	d	file:
DOWNLOAD_PORT	../inc/PriKeyDownload.h	70;"	d
DRAG_LENG	../inc/theme.h	145;"	d
DRAG_LENG	../inc/theme.h	73;"	d
DUKPT_KSN_LEN	../inc/tr31_format.h	38;"	d
Debug	../inc/debug.h	/^extern int Debug(const int nRes, const char *pszFile, const int nLine);$/;"	p	signature:(const int nRes, const char *pszFile, const int nLine)
Debug	../src/debug.c	/^int Debug(const int nRes, const char *pszFile, const int nLine)$/;"	f	signature:(const int nRes, const char *pszFile, const int nLine)
DebugBufToAux	../inc/debug.h	/^extern int DebugBufToAux(const char *pszBuf);$/;"	p	signature:(const char *pszBuf)
DebugData	../inc/PSam.h	/^void DebugData(char *title,char *buf,int len);$/;"	p	signature:(char *title,char *buf,int len)
DebugData	../src/PSam.c	/^void DebugData(char *title,char *buf,int len)$/;"	f	signature:(char *title,char *buf,int len)
DetectedPortType	../src/PriKey_app.c	/^int DetectedPortType = PORT_NONE;   \/\/检测到的当前通讯口类型:PORT_AUX \/ PORT_USB$/;"	v
DispMsg_exit	../inc/Pri_DownloadTool.h	/^void DispMsg_exit(char *s);$/;"	p	signature:(char *s)
DispMsg_exit	../src/Pri_DownloadTool.c	/^void DispMsg_exit(char *s)$/;"	f	signature:(char *s)
DispTrace	../src/debug.c	/^void DispTrace(char* lpszFormat, ...)$/;"	f	signature:(char* lpszFormat, ...)
DoExtTest	../inc/selftest.h	/^extern int DoExtTest(const char *pszPath, const char *pszFileName, const char *pszTitle);$/;"	p	signature:(const char *pszPath, const char *pszFileName, const char *pszTitle)
EDITBOX_DEF_LINE_MAX	../inc/theme.h	25;"	d
EDITBOX_DEF_LINE_MAX	../inc/theme.h	99;"	d
EDITBOX_EDGE	../inc/theme.h	24;"	d
EDITBOX_EDGE	../inc/theme.h	98;"	d
EDITBOX_INNER	../inc/theme.h	100;"	d
EDITBOX_INNER	../inc/theme.h	26;"	d
EIGHT	../inc/PriKeyDownload.h	48;"	d
EM_ADDCH_MODE	../libapi/ltool.h	/^enum EM_ADDCH_MODE$/;"	g
EM_ADDR_TYPE	../env/NDK.h	/^}EM_ADDR_TYPE;$/;"	t	typeref:enum:__anon68
EM_ADDR_TYPE	../inc/NDK-bak.h	/^}EM_ADDR_TYPE;$/;"	t	typeref:enum:__anon143
EM_ALG_TDS_MODE	../env/NDK.h	/^}EM_ALG_TDS_MODE;$/;"	t	typeref:enum:__anon22
EM_ALG_TDS_MODE	../inc/NDK-bak.h	/^}EM_ALG_TDS_MODE;$/;"	t	typeref:enum:__anon105
EM_ALIGN_TYPE	../libapi/ltool.h	/^}EM_ALIGN_TYPE;$/;"	t	typeref:enum:__anon179
EM_BACKLIGHT	../env/NDK.h	/^}EM_BACKLIGHT;$/;"	t	typeref:enum:__anon3
EM_BACKLIGHT	../inc/NDK-bak.h	/^}EM_BACKLIGHT;$/;"	t	typeref:enum:__anon90
EM_BLOCK_OPT	../env/NDK.h	/^}EM_BLOCK_OPT;$/;"	t	typeref:enum:__anon62
EM_BLOCK_OPT	../inc/NDK-bak.h	/^}EM_BLOCK_OPT;$/;"	t	typeref:enum:__anon137
EM_CARDINPUTMODE	../libapi/lposcard.h	/^enum EM_CARDINPUTMODE$/;"	g
EM_CARD_RF_CPU	../libapi/lposcard.h	/^	EM_CARD_RF_CPU = 0x02		\/**<cpu*\/$/;"	e	enum:__anon172
EM_CARD_RF_M1	../libapi/lposcard.h	/^	EM_CARD_RF_M1  = 0x01,		\/**<mifare one*\/$/;"	e	enum:__anon172
EM_CHOOSE_IME_MODE	../libapi/lui.h	/^}EM_CHOOSE_IME_MODE;$/;"	t	typeref:enum:__anon189
EM_COMM_TYPE	../env/NDK.h	/^}EM_COMM_TYPE;$/;"	t	typeref:enum:__anon51
EM_DISKSTATE	../env/NDK.h	/^}EM_DISKSTATE;$/;"	t	typeref:enum:__anon70
EM_DISKSTATE	../inc/NDK-bak.h	/^}EM_DISKSTATE;$/;"	t	typeref:enum:__anon145
EM_DISKTYPE	../env/NDK.h	/^}EM_DISKTYPE;$/;"	t	typeref:enum:__anon69
EM_DISKTYPE	../inc/NDK-bak.h	/^}EM_DISKTYPE;$/;"	t	typeref:enum:__anon144
EM_DISPFONT	../env/NDK.h	/^}EM_DISPFONT;$/;"	t	typeref:enum:__anon4
EM_DISPFONT	../inc/NDK-bak.h	/^}EM_DISPFONT;$/;"	t	typeref:enum:__anon91
EM_DISPLAY_ALIGN	../libapi/lui.h	/^}EM_DISPLAY_ALIGN;$/;"	t	typeref:enum:__anon183
EM_DISPLAY_MODE	../libapi/lui.h	/^}EM_DISPLAY_MODE;$/;"	t	typeref:enum:__anon182
EM_FONTCOLOR	../env/NDK.h	/^}EM_FONTCOLOR;$/;"	t	typeref:enum:__anon5
EM_FONTCOLOR	../inc/NDK-bak.h	/^}EM_FONTCOLOR;$/;"	t	typeref:enum:__anon92
EM_HARDWARE_GET	../libapi/ltool.h	/^enum EM_HARDWARE_GET$/;"	g
EM_HARDWARE_SUPPORT	../libapi/ltool.h	/^enum EM_HARDWARE_SUPPORT$/;"	g
EM_ICTYPE	../env/NDK.h	/^}EM_ICTYPE;$/;"	t	typeref:enum:__anon52
EM_ICTYPE	../inc/NDK-bak.h	/^}EM_ICTYPE;$/;"	t	typeref:enum:__anon128
EM_IME	../env/NDK.h	/^}EM_IME;$/;"	t	typeref:enum:__anon10
EM_IME	../inc/NDK-bak.h	/^}EM_IME;$/;"	t	typeref:enum:__anon96
EM_INPUTDISP	../env/NDK.h	/^}EM_INPUTDISP;$/;"	t	typeref:enum:__anon9
EM_INPUTDISP	../inc/NDK-bak.h	/^}EM_INPUTDISP;$/;"	t	typeref:enum:__anon95
EM_INPUT_AMOUNT_MODE	../libapi/lui.h	/^}EM_INPUT_AMOUNT_MODE;$/;"	t	typeref:enum:__anon188
EM_INPUT_CONTRL	../env/NDK.h	/^}EM_INPUT_CONTRL;$/;"	t	typeref:enum:__anon8
EM_INPUT_CONTRL	../inc/NDK-bak.h	/^}EM_INPUT_CONTRL;$/;"	t	typeref:enum:__anon94
EM_INPUT_DATE_MODE	../libapi/lui.h	/^}EM_INPUT_DATE_MODE;$/;"	t	typeref:enum:__anon187
EM_INPUT_MODE	../libapi/lui.h	/^}EM_INPUT_MODE;$/;"	t	typeref:enum:__anon186
EM_LED	../env/NDK.h	/^} EM_LED;$/;"	t	typeref:enum:__anon57
EM_LED	../inc/NDK-bak.h	/^} EM_LED;$/;"	t	typeref:enum:__anon133
EM_LENGTH_TYPE	../libapi/ltool.h	/^} EM_LENGTH_TYPE;$/;"	t	typeref:enum:__anon180
EM_MAINTK	../libapi/lposcard.h	/^enum EM_MAINTK$/;"	g
EM_MDMSTATUS	../env/NDK.h	/^}EM_MDMSTATUS;$/;"	t	typeref:enum:MDM_STATUS
EM_MDMSTATUS	../inc/NDK-bak.h	/^}EM_MDMSTATUS;$/;"	t	typeref:enum:MDM_STATUS
EM_MDM_PatchType	../env/NDK.h	/^}EM_MDM_PatchType;$/;"	t	typeref:enum:MDM_Patchtype
EM_MDM_PatchType	../inc/NDK-bak.h	/^}EM_MDM_PatchType;$/;"	t	typeref:enum:MDM_Patchtype
EM_MENU_MODE	../libapi/lui.h	/^}EM_MENU_MODE;$/;"	t	typeref:enum:__anon185
EM_MENU_TITLE	../libapi/lui.h	/^}EM_MENU_TITLE;$/;"	t	typeref:enum:__anon181
EM_MODULE_TYPE	../env/NDK.h	/^}EM_MODULE_TYPE;$/;"	t	typeref:enum:__anon47
EM_NDK_ERR	../env/NDK.h	/^}EM_NDK_ERR;$/;"	t	typeref:enum:__anon1
EM_NDK_ERR	../inc/NDK-bak.h	/^}EM_NDK_ERR;$/;"	t	typeref:enum:__anon88
EM_PADSTATE	../env/NDK.h	/^}EM_PADSTATE;$/;"	t	typeref:enum:__anon11
EM_PORT_NUM	../env/NDK.h	/^} EM_PORT_NUM;$/;"	t	typeref:enum:__anon40
EM_PORT_NUM	../inc/NDK-bak.h	/^} EM_PORT_NUM;$/;"	t	typeref:enum:__anon123
EM_PPP_STATUS	../env/NDK.h	/^} EM_PPP_STATUS;$/;"	t	typeref:enum:__anon49
EM_PPP_STATUS	../inc/NDK-bak.h	/^} EM_PPP_STATUS;$/;"	t	typeref:enum:__anon126
EM_PRN_CHANELNUM	../env/NDK.h	/^}EM_PRN_CHANELNUM;$/;"	t	typeref:enum:__anon15
EM_PRN_FEEDPAPER	../env/NDK.h	/^}EM_PRN_FEEDPAPER;$/;"	t	typeref:enum:__anon21
EM_PRN_HZ_FONT	../env/NDK.h	/^}EM_PRN_HZ_FONT;$/;"	t	typeref:enum:__anon12
EM_PRN_HZ_FONT	../inc/NDK-bak.h	/^}EM_PRN_HZ_FONT;$/;"	t	typeref:enum:__anon97
EM_PRN_MODE	../env/NDK.h	/^}EM_PRN_MODE;$/;"	t	typeref:enum:__anon17
EM_PRN_MODE	../inc/NDK-bak.h	/^}EM_PRN_MODE;$/;"	t	typeref:enum:__anon101
EM_PRN_STATUS	../env/NDK.h	/^}EM_PRN_STATUS;$/;"	t	typeref:enum:__anon14
EM_PRN_STATUS	../inc/NDK-bak.h	/^}EM_PRN_STATUS;$/;"	t	typeref:enum:__anon99
EM_PRN_TYPE	../env/NDK.h	/^}EM_PRN_TYPE;$/;"	t	typeref:enum:__anon16
EM_PRN_TYPE	../inc/NDK-bak.h	/^}EM_PRN_TYPE;$/;"	t	typeref:enum:__anon100
EM_PRN_UNDERLINE_STATUS	../env/NDK.h	/^}EM_PRN_UNDERLINE_STATUS;$/;"	t	typeref:enum:__anon18
EM_PRN_UNDERLINE_STATUS	../inc/NDK-bak.h	/^}EM_PRN_UNDERLINE_STATUS;$/;"	t	typeref:enum:__anon102
EM_PRN_ZM_FONT	../env/NDK.h	/^}EM_PRN_ZM_FONT;$/;"	t	typeref:enum:__anon13
EM_PRN_ZM_FONT	../inc/NDK-bak.h	/^}EM_PRN_ZM_FONT;$/;"	t	typeref:enum:__anon98
EM_RECT_PATTERNS	../env/NDK.h	/^}EM_RECT_PATTERNS;$/;"	t	typeref:enum:__anon6
EM_RECT_PATTERNS	../inc/NDK-bak.h	/^}EM_RECT_PATTERNS;$/;"	t	typeref:enum:__anon93
EM_RFID	../env/NDK.h	/^}EM_RFID;$/;"	t	typeref:enum:__anon53
EM_RFID	../inc/NDK-bak.h	/^}EM_RFID;$/;"	t	typeref:enum:__anon129
EM_RF_AKEY	../libapi/lposcard.h	/^	EM_RF_AKEY  = 0x00,        	\/**<A Key*\/$/;"	e	enum:__anon174
EM_RF_BKEY	../libapi/lposcard.h	/^	EM_RF_BKEY = 0x01			\/**<B Key*\/$/;"	e	enum:__anon174
EM_RF_INSIDE	../libapi/lposcard.h	/^	EM_RF_INSIDE  = 0x01,		\/**<POS内置射频读卡模块*\/$/;"	e	enum:__anon171
EM_RF_OUTSIDE	../libapi/lposcard.h	/^	EM_RF_OUTSIDE = 0x02		\/**<POS外接射频读卡模块*\/$/;"	e	enum:__anon171
EM_RSA_EXP	../env/NDK.h	/^}EM_RSA_EXP;$/;"	t	typeref:enum:__anon24
EM_RSA_EXP	../inc/NDK-bak.h	/^}EM_RSA_EXP;$/;"	t	typeref:enum:__anon107
EM_RSA_KEY_LEN	../env/NDK.h	/^}EM_RSA_KEY_LEN;$/;"	t	typeref:enum:__anon23
EM_RSA_KEY_LEN	../inc/NDK-bak.h	/^}EM_RSA_KEY_LEN;$/;"	t	typeref:enum:__anon106
EM_SCAN_SETTYPE	../env/NDK.h	/^}EM_SCAN_SETTYPE;$/;"	t	typeref:enum:__anon77
EM_SEC_DES	../env/NDK.h	/^}EM_SEC_DES;$/;"	t	typeref:enum:__anon31
EM_SEC_DES	../inc/NDK-bak.h	/^}EM_SEC_DES;$/;"	t	typeref:enum:__anon114
EM_SEC_KCV	../env/NDK.h	/^}EM_SEC_KCV;$/;"	t	typeref:enum:__anon28
EM_SEC_KCV	../inc/NDK-bak.h	/^}EM_SEC_KCV;$/;"	t	typeref:enum:__anon111
EM_SEC_KEY_TYPE	../env/NDK.h	/^}EM_SEC_KEY_TYPE;$/;"	t	typeref:enum:__anon27
EM_SEC_KEY_TYPE	../inc/NDK-bak.h	/^}EM_SEC_KEY_TYPE;$/;"	t	typeref:enum:__anon110
EM_SEC_MAC	../env/NDK.h	/^}EM_SEC_MAC;$/;"	t	typeref:enum:__anon29
EM_SEC_MAC	../inc/NDK-bak.h	/^}EM_SEC_MAC;$/;"	t	typeref:enum:__anon112
EM_SEC_PIN	../env/NDK.h	/^}EM_SEC_PIN;$/;"	t	typeref:enum:__anon30
EM_SEC_PIN	../inc/NDK-bak.h	/^}EM_SEC_PIN;$/;"	t	typeref:enum:__anon113
EM_SEC_TAMPER_STATUS	../env/NDK.h	/^}EM_SEC_TAMPER_STATUS;$/;"	t	typeref:enum:__anon34
EM_SEC_TAMPER_STATUS	../inc/NDK-bak.h	/^}EM_SEC_TAMPER_STATUS;$/;"	t	typeref:enum:__anon117
EM_SEC_VPP_KEY	../env/NDK.h	/^}EM_SEC_VPP_KEY;$/;"	t	typeref:enum:__anon32
EM_SEC_VPP_KEY	../inc/NDK-bak.h	/^}EM_SEC_VPP_KEY;$/;"	t	typeref:enum:__anon115
EM_SSL_AUTH_OPT	../env/NDK.h	/^}EM_SSL_AUTH_OPT;$/;"	t	typeref:enum:__anon64
EM_SSL_AUTH_OPT	../inc/NDK-bak.h	/^}EM_SSL_AUTH_OPT;$/;"	t	typeref:enum:__anon139
EM_SSL_CIPHER_OPT	../env/NDK.h	/^}EM_SSL_CIPHER_OPT;$/;"	t	typeref:enum:__anon65
EM_SSL_CIPHER_OPT	../inc/NDK-bak.h	/^}EM_SSL_CIPHER_OPT;$/;"	t	typeref:enum:__anon140
EM_SSL_CONNECTION_STATE	../env/NDK.h	/^}EM_SSL_CONNECTION_STATE;$/;"	t	typeref:enum:__anon66
EM_SSL_CONNECTION_STATE	../inc/NDK-bak.h	/^}EM_SSL_CONNECTION_STATE;$/;"	t	typeref:enum:__anon141
EM_SSL_FILE_FORMAT	../env/NDK.h	/^}EM_SSL_FILE_FORMAT;$/;"	t	typeref:enum:__anon67
EM_SSL_FILE_FORMAT	../inc/NDK-bak.h	/^}EM_SSL_FILE_FORMAT;$/;"	t	typeref:enum:__anon142
EM_SSL_HANDSHAKE_OPT	../env/NDK.h	/^}EM_SSL_HANDSHAKE_OPT;$/;"	t	typeref:enum:__anon63
EM_SSL_HANDSHAKE_OPT	../inc/NDK-bak.h	/^}EM_SSL_HANDSHAKE_OPT;$/;"	t	typeref:enum:__anon138
EM_SS_DEVID	../inc/NDK-bak.h	/^}EM_SS_DEVID;$/;"	t	typeref:enum:__anon135
EM_SS_DEVMAINID	../inc/NDK-bak.h	/^} EM_SS_DEVMAINID;$/;"	t	typeref:enum:__anon134
EM_SS_DEV_ID	../env/NDK.h	/^}EM_SS_DEV_ID;$/;"	t	typeref:enum:__anon59
EM_SS_TYPE	../env/NDK.h	/^} EM_SS_TYPE;$/;"	t	typeref:enum:__anon58
EM_STATUSBAR	../env/NDK.h	/^}EM_STATUSBAR;$/;"	t	typeref:enum:__anon7
EM_SYS_CONFIG	../env/NDK.h	/^} EM_SYS_CONFIG;$/;"	t	typeref:enum:__anon55
EM_SYS_CONFIG	../inc/NDK-bak.h	/^} EM_SYS_CONFIG;$/;"	t	typeref:enum:__anon131
EM_SYS_FWINFO	../env/NDK.h	/^} EM_SYS_FWINFO;$/;"	t	typeref:enum:__anon60
EM_SYS_FWINFO	../inc/NDK-bak.h	/^} EM_SYS_FWINFO;$/;"	t	typeref:enum:__anon136
EM_SYS_HWINFO	../env/NDK.h	/^} EM_SYS_HWINFO;$/;"	t	typeref:enum:__anon54
EM_SYS_HWINFO	../inc/NDK-bak.h	/^} EM_SYS_HWINFO;$/;"	t	typeref:enum:__anon130
EM_SYS_HWTYPE	../env/NDK.h	/^} EM_SYS_HWTYPE;$/;"	t	typeref:enum:__anon56
EM_SYS_HWTYPE	../inc/NDK-bak.h	/^} EM_SYS_HWTYPE;$/;"	t	typeref:enum:__anon132
EM_TEXT_ATTRIBUTE	../env/NDK.h	/^}EM_TEXT_ATTRIBUTE;$/;"	t	typeref:enum:__anon2
EM_TEXT_ATTRIBUTE	../inc/NDK-bak.h	/^}EM_TEXT_ATTRIBUTE;$/;"	t	typeref:enum:__anon89
EM_THREAD_STATE	../env/NDK.h	/^} EM_THREAD_STATE;$/;"	t	typeref:enum:ndk_thread_state
EM_THREAD_STATE	../inc/NDK-bak.h	/^} EM_THREAD_STATE;$/;"	t	typeref:enum:ndk_thread_state
EM_TIME_MODE	../libapi/lui.h	/^}EM_TIME_MODE;$/;"	t	typeref:enum:__anon184
EM_VOICE_CTRL	../env/NDK.h	/^}EM_VOICE_CTRL;$/;"	t	typeref:enum:__anon78
EM_WIFI_KEY_TYPE	../env/NDK.h	/^}EM_WIFI_KEY_TYPE;$/;"	t	typeref:enum:__anon73
EM_WIFI_KEY_TYPE	../inc/NDK-bak.h	/^}EM_WIFI_KEY_TYPE;$/;"	t	typeref:enum:__anon148
EM_WIFI_NET_SEC	../env/NDK.h	/^} EM_WIFI_NET_SEC;$/;"	t	typeref:enum:__anon72
EM_WIFI_NET_SEC	../inc/NDK-bak.h	/^} EM_WIFI_NET_SEC;$/;"	t	typeref:enum:__anon147
EM_WLM_CMD	../env/NDK.h	/^} EM_WLM_CMD;$/;"	t	typeref:enum:__anon41
EM_WLM_CMD	../inc/NDK-bak.h	/^} EM_WLM_CMD;$/;"	t	typeref:enum:__anon124
EM_WLM_STATUS	../env/NDK.h	/^}EM_WLM_STATUS;$/;"	t	typeref:enum:__anon42
EM_WLM_STATUS	../inc/NDK-bak.h	/^}EM_WLM_STATUS;$/;"	t	typeref:enum:__anon125
EM_WLM_TYPE_INFO	../env/NDK.h	/^}EM_WLM_TYPE_INFO;$/;"	t	typeref:enum:__anon43
EM_WPA_CONSTATE	../env/NDK.h	/^} EM_WPA_CONSTATE;$/;"	t	typeref:enum:__anon75
EM_WPA_CONSTATE	../inc/NDK-bak.h	/^} EM_WPA_CONSTATE;$/;"	t	typeref:enum:__anon150
ENM_CARDTYPE	../libapi/lposcard.h	/^}ENM_CARDTYPE;				\/**<POS读卡器内置或外接标记*\/$/;"	t	typeref:enum:__anon172
ENM_INOROUTFLAG	../libapi/lposcard.h	/^}ENM_INOROUTFLAG;			\/**<POS读卡器内置或外接标记*\/$/;"	t	typeref:enum:__anon171
ENM_READERSHOW	../libapi/lposcard.h	/^}ENM_READERSHOW;$/;"	t	typeref:enum:__anon175
ENM_RFIDCARDTYPE	../libapi/lposcard.h	/^}ENM_RFIDCARDTYPE;			\/**<非接卡类型标记*\/$/;"	t	typeref:enum:__anon173
ENM_RFIDM1KEYMODE	../libapi/lposcard.h	/^}ENM_RFIDM1KEYMODE;		\/**<M1卡 Key类型*\/$/;"	t	typeref:enum:__anon174
ENM_RFREADERTYPE	../libapi/lposcard.h	/^}ENM_RFREADERTYPE;			\/**<非接读卡器类型*\/$/;"	t	typeref:enum:__anon170
ENQ	../inc/PriKeyDownload.h	78;"	d
ENQ	../libapi/ltool.h	15;"	d
ENTER	../inc/PriKeyDownload.h	35;"	d
EOT	../libapi/ltool.h	14;"	d
ESC	../inc/PriKeyDownload.h	36;"	d
ESC	../inc/PriKeyDownload.h	53;"	d
ETB	../libapi/ltool.h	19;"	d
ETX	../inc/PriKeyDownload.h	62;"	d
ETX	../libapi/ltool.h	13;"	d
EchoError	../inc/key.h	/^int EchoError(char *s);$/;"	p	signature:(char *s)
EchoError	../src/tools.c	/^int EchoError(char *s)$/;"	f	signature:(char *s)
EnterNewDownload	../inc/PriKeyDownload.h	/^int EnterNewDownload(R_RSA_PRIVATE_KEY *prikey);$/;"	p	signature:(R_RSA_PRIVATE_KEY *prikey)
EnterNewDownload	../src/PriKey_app.c	/^int EnterNewDownload(R_RSA_PRIVATE_KEY *prikey)$/;"	f	signature:(R_RSA_PRIVATE_KEY *prikey)
F1	../inc/PriKeyDownload.h	17;"	d
F2	../inc/PriKeyDownload.h	18;"	d
F3	../inc/PriKeyDownload.h	19;"	d
F4	../inc/PriKeyDownload.h	20;"	d
F5	../inc/PriKeyDownload.h	21;"	d
F6	../inc/PriKeyDownload.h	22;"	d
F7	../inc/PriKeyDownload.h	23;"	d
F8	../inc/PriKeyDownload.h	24;"	d
F9	../inc/PriKeyDownload.h	25;"	d
FAIL	../inc/PriKeyDownload.h	54;"	d
FAIL	../inc/selftest.h	28;"	d
FALSE	../inc/PriKeyDownload.h	51;"	d
FALSE	../inc/selftest.h	30;"	d
FALSE	../libapi/ltool.h	21;"	d
FIELD_LENGTH_GET	../libapi/ltool.h	/^typedef void (*FIELD_LENGTH_GET) (STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount);$/;"	t
FIELD_LENGTH_SET	../libapi/ltool.h	/^typedef void (*FIELD_LENGTH_SET) (STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount);$/;"	t
FIELD_PACKAGER_PACK	../libapi/ltool.h	/^typedef int (*FIELD_PACKAGER_PACK) (STISO_FIELD_DEF *pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	t
FIELD_PACKAGER_UNPACK	../libapi/ltool.h	/^typedef int (*FIELD_PACKAGER_UNPACK) (STISO_FIELD_DEF *pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	t
FILELEN	../inc/PriKeyDownload.h	6;"	d
FILE_CREATEINDEX	../libapi/ltool.h	31;"	d
FILE_NOCREATEINDEX	../libapi/ltool.h	30;"	d
FILE_OPER	../inc/oper.h	25;"	d
FIRST_FILE	../src/PSam.c	18;"	d	file:
FIVE	../inc/PriKeyDownload.h	45;"	d
FL	../inc/PriKeyDownload.h	153;"	d
FL	../inc/PriKeyDownload.h	64;"	d
FONTCOLOR_BG_REVERSE	../env/NDK.h	/^	FONTCOLOR_BG_REVERSE,				\/**<字体反向显示时背景颜色*\/$/;"	e	enum:__anon5
FONTCOLOR_BG_REVERSE	../inc/NDK-bak.h	/^	FONTCOLOR_BG_REVERSE,				\/**<background color when font  reversely displayed*\/$/;"	e	enum:__anon92
FONTCOLOR_NORMAL	../env/NDK.h	/^	FONTCOLOR_NORMAL,				\/**<字体正常显示时字体颜色*\/$/;"	e	enum:__anon5
FONTCOLOR_NORMAL	../inc/NDK-bak.h	/^	FONTCOLOR_NORMAL,				\/**<font color when font normally displayed*\/$/;"	e	enum:__anon92
FONTCOLOR_REVERSE	../env/NDK.h	/^	FONTCOLOR_REVERSE,				\/**<字体反向显示时字体颜色*\/$/;"	e	enum:__anon5
FONTCOLOR_REVERSE	../inc/NDK-bak.h	/^	FONTCOLOR_REVERSE,				\/**<font color when font reversely displayed*\/$/;"	e	enum:__anon92
FOUR	../inc/PriKeyDownload.h	44;"	d
FSFAIL	../inc/PriKeyDownload.h	56;"	d
FSSUCC	../inc/PriKeyDownload.h	59;"	d
FUNCKEY_CNT	../inc/selftest.h	27;"	d
FUNCQUIT	../inc/PriKeyDownload.h	58;"	d
FindOper	../src/oper.c	/^int FindOper( int nRole, STOPER_RECORD *pstOperRec, int *pnOperRecNum )$/;"	f	signature:( int nRole, STOPER_RECORD *pstOperRec, int *pnOperRecNum )
GETAPPLIST	../inc/PriKeyDownload.h	163;"	d
GPRS_STATION	../env/NDK.h	/^	ST_GPRS_STATION_INFO GPRS_STATION;	\/**<GPRS基站*\/$/;"	m	union:__anon46	access:public
GetCSRFile	../src/PriKey_app.c	/^int GetCSRFile()$/;"	f
GetCheckSum	../src/Pri_DownloadTool.c	/^unsigned char GetCheckSum(char *pbuf,int len)$/;"	f	signature:(char *pbuf,int len)
GetCheckValue	../src/main.c	/^static void GetCheckValue(char* key, char* checkValue, char cType);$/;"	p	file:	signature:(char* key, char* checkValue, char cType)
GetCheckValue	../src/main.c	/^void GetCheckValue(char* key, char* checkValue, char cType)$/;"	f	signature:(char* key, char* checkValue, char cType)
GetDownloadPortType	../inc/Pri_DownloadTool.h	/^int GetDownloadPortType(void);$/;"	p	signature:(void)
GetDownloadPortType	../src/Pri_DownloadTool.c	/^int GetDownloadPortType(void)$/;"	f	signature:(void)
GetNum	../inc/PriKeyDownload.h	/^int GetNum(char *filename);$/;"	p	signature:(char *filename)
GetNum	../src/PriKey_app.c	/^int GetNum(char *filename)$/;"	f	signature:(char *filename)
GetPriKeyFile	../inc/PriKeyDownload.h	/^int GetPriKeyFile();$/;"	p	signature:()
GetPriKeyFile	../src/PriKey_app.c	/^int GetPriKeyFile()$/;"	f
HANDSHAKE_SSLv2	../env/NDK.h	/^    HANDSHAKE_SSLv2,	  \/\/!< 仅SSLv2$/;"	e	enum:__anon63
HANDSHAKE_SSLv2	../inc/NDK-bak.h	/^    HANDSHAKE_SSLv2,	\/\/!< SSLv2 only$/;"	e	enum:__anon138
HANDSHAKE_SSLv23	../env/NDK.h	/^    HANDSHAKE_SSLv23, 	\/\/!< SSLv3 SSLv2$/;"	e	enum:__anon63
HANDSHAKE_SSLv23	../inc/NDK-bak.h	/^    HANDSHAKE_SSLv23, 	\/\/!< SSLv3 with fallback to SSLv2$/;"	e	enum:__anon138
HANDSHAKE_SSLv3	../env/NDK.h	/^    HANDSHAKE_SSLv3,	  \/\/!< 仅SSLv3$/;"	e	enum:__anon63
HANDSHAKE_SSLv3	../inc/NDK-bak.h	/^    HANDSHAKE_SSLv3,	\/\/!< SSLv3 only$/;"	e	enum:__anon138
HANDSHAKE_TLSv1	../env/NDK.h	/^    HANDSHAKE_TLSv1,	  \/\/!< TLSv1$/;"	e	enum:__anon63
HANDSHAKE_TLSv1	../inc/NDK-bak.h	/^    HANDSHAKE_TLSv1,	\/\/!< TLSv1$/;"	e	enum:__anon138
HARDWARE_GET_BIOS_VER	../libapi/ltool.h	/^	HARDWARE_GET_BIOS_VER=2,		\/**<取bios版本信息 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_BOARD_VER	../libapi/ltool.h	/^	HARDWARE_GET_BOARD_VER,			\/**<取主板号 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_CREDITCARD_COUNT	../libapi/ltool.h	/^	HARDWARE_GET_CREDITCARD_COUNT, \/**<取pos刷卡总数 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_KEY_COUNT	../libapi/ltool.h	/^	HARDWARE_GET_KEY_COUNT			\/**<取pos机按键次数 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_POS_PSN	../libapi/ltool.h	/^	HARDWARE_GET_POS_PSN,			\/**<取机器机器号 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_POS_RUNTIME	../libapi/ltool.h	/^	HARDWARE_GET_POS_RUNTIME,		\/**<取pos机开机运行时间 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_POS_USN	../libapi/ltool.h	/^	HARDWARE_GET_POS_USN,			\/**<取机器序列号 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_GET_PRN_LEN	../libapi/ltool.h	/^	HARDWARE_GET_PRN_LEN,			\/**<取pos打印总长度 *\/$/;"	e	enum:EM_HARDWARE_GET
HARDWARE_SUPPORT_COMM_NUM	../libapi/ltool.h	/^	HARDWARE_SUPPORT_COMM_NUM,			\/**<串口个数*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_ETH	../libapi/ltool.h	/^	HARDWARE_SUPPORT_ETH,				\/**<是否支持以太网*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_LED_LIGHT	../libapi/ltool.h	/^	HARDWARE_SUPPORT_LED_LIGHT			\/**<是否有射频LED灯*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_MAGCARD	../libapi/ltool.h	/^	HARDWARE_SUPPORT_MAGCARD,			\/**<磁卡模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_MODEM	../libapi/ltool.h	/^	HARDWARE_SUPPORT_MODEM,				\/**<MODEM模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_PINPAD	../libapi/ltool.h	/^	HARDWARE_SUPPORT_PINPAD,			\/**<是否支持外接密码键盘*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_PRINTER	../libapi/ltool.h	/^	HARDWARE_SUPPORT_PRINTER,			\/**<打印模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_RADIO_FREQUENCY	../libapi/ltool.h	/^	HARDWARE_SUPPORT_RADIO_FREQUENCY,	\/**<射频模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_SCANNER	../libapi/ltool.h	/^	HARDWARE_SUPPORT_SCANNER,			\/**<扫描头模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_TOUCH_SCREEN	../libapi/ltool.h	/^	HARDWARE_SUPPORT_TOUCH_SCREEN,		\/**<是否支持触屏*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_USB	../libapi/ltool.h	/^	HARDWARE_SUPPORT_USB,				\/**<是否支持USB*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_WIFI	../libapi/ltool.h	/^	HARDWARE_SUPPORT_WIFI,				\/**<wifi模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HARDWARE_SUPPORT_WIRELESS	../libapi/ltool.h	/^	HARDWARE_SUPPORT_WIRELESS=0,		\/**<无线模块*\/$/;"	e	enum:EM_HARDWARE_SUPPORT
HIGH_HALF	../inc/emvnn.h	40;"	d
HandShake	../inc/PriKeyDownload.h	/^int HandShake();$/;"	p	signature:()
HandShake	../src/PriKey_app.c	/^int HandShake()$/;"	f
IC1_EXIST	../libapi/lposcard.h	14;"	d
IC1_POWERON	../libapi/lposcard.h	15;"	d
ICCARD	../inc/NDK-bak.h	/^    ICCARD,			\/**<IC card *\/$/;"	e	enum:__anon134
ICTYPE_IC	../env/NDK.h	/^  ICTYPE_IC,  \/**<接触式IC卡*\/$/;"	e	enum:__anon52
ICTYPE_IC	../inc/NDK-bak.h	/^  ICTYPE_IC,  \/**<contact IC card*\/$/;"	e	enum:__anon128
ICTYPE_M_1	../env/NDK.h	/^  ICTYPE_M_1, \/**<at24c01 at24c02 at24c04 at24c08 at24c16 at24c32 at24c64 *\/$/;"	e	enum:__anon52
ICTYPE_M_1	../inc/NDK-bak.h	/^  ICTYPE_M_1, \/**<at24c01 at24c02 at24c04 at24c08 at24c16 at24c32 at24c64 *\/$/;"	e	enum:__anon128
ICTYPE_M_2	../env/NDK.h	/^  ICTYPE_M_2, \/**<sle44x2*\/$/;"	e	enum:__anon52
ICTYPE_M_2	../inc/NDK-bak.h	/^  ICTYPE_M_2, \/**<sle44x2*\/$/;"	e	enum:__anon128
ICTYPE_M_3	../env/NDK.h	/^  ICTYPE_M_3, \/**<sle44x8*\/$/;"	e	enum:__anon52
ICTYPE_M_3	../inc/NDK-bak.h	/^  ICTYPE_M_3, \/**<sle44x8*\/$/;"	e	enum:__anon128
ICTYPE_M_4	../env/NDK.h	/^  ICTYPE_M_4, \/**<at88sc102*\/$/;"	e	enum:__anon52
ICTYPE_M_4	../inc/NDK-bak.h	/^  ICTYPE_M_4, \/**<at88sc102*\/$/;"	e	enum:__anon128
ICTYPE_M_5	../env/NDK.h	/^  ICTYPE_M_5, \/**<at88sc1604*\/$/;"	e	enum:__anon52
ICTYPE_M_5	../inc/NDK-bak.h	/^  ICTYPE_M_5, \/**<at88sc1604*\/$/;"	e	enum:__anon128
ICTYPE_M_6	../env/NDK.h	/^  ICTYPE_M_6, \/**<at88sc1608*\/$/;"	e	enum:__anon52
ICTYPE_M_6	../inc/NDK-bak.h	/^  ICTYPE_M_6, \/**<at88sc1608*\/$/;"	e	enum:__anon128
ICTYPE_SAM1	../env/NDK.h	/^  ICTYPE_SAM1, \/**<SAM1卡*\/$/;"	e	enum:__anon52
ICTYPE_SAM1	../inc/NDK-bak.h	/^  ICTYPE_SAM1, \/**<SAM1 card*\/$/;"	e	enum:__anon128
ICTYPE_SAM2	../env/NDK.h	/^  ICTYPE_SAM2, \/**<SAM2卡*\/$/;"	e	enum:__anon52
ICTYPE_SAM2	../inc/NDK-bak.h	/^  ICTYPE_SAM2, \/**<SAM2 card*\/$/;"	e	enum:__anon128
ICTYPE_SAM3	../env/NDK.h	/^  ICTYPE_SAM3, \/**<SAM3卡*\/$/;"	e	enum:__anon52
ICTYPE_SAM3	../inc/NDK-bak.h	/^  ICTYPE_SAM3, \/**<SAM3 card*\/$/;"	e	enum:__anon128
ICTYPE_SAM4	../env/NDK.h	/^  ICTYPE_SAM4, \/**<SAM4卡*\/$/;"	e	enum:__anon52
ICTYPE_SAM4	../inc/NDK-bak.h	/^  ICTYPE_SAM4, \/**<SAM4 card*\/$/;"	e	enum:__anon128
IME_BIHUA	../env/NDK.h	/^	IME_BIHUA,	  \/**<笔画*\/$/;"	e	enum:__anon10
IME_BIHUA	../inc/NDK-bak.h	/^	IME_BIHUA,	\/**<strokes*\/$/;"	e	enum:__anon96
IME_ENGLISH	../env/NDK.h	/^    IME_ENGLISH,  \/**<英文*\/$/;"	e	enum:__anon10
IME_ENGLISH	../inc/NDK-bak.h	/^    IME_ENGLISH, 	\/**<English*\/$/;"	e	enum:__anon96
IME_GBK	../env/NDK.h	/^    IME_GBK,      \/**<内码*\/$/;"	e	enum:__anon10
IME_GBK	../inc/NDK-bak.h	/^    IME_GBK,$/;"	e	enum:__anon96
IME_HANDWRITE	../env/NDK.h	/^	IME_HANDWRITE, \/**<手写*\/$/;"	e	enum:__anon10
IME_MAXNUM	../env/NDK.h	/^    IME_MAXNUM=IME_HANDWRITE,	\/**<仅用于错误判断*\/$/;"	e	enum:__anon10
IME_MAXNUM	../inc/NDK-bak.h	/^    IME_MAXNUM=IME_GBK,	\/**<Only for bad judgment*\/$/;"	e	enum:__anon96
IME_NUM	../env/NDK.h	/^	IME_NUM,	  \/**<数字*\/$/;"	e	enum:__anon10
IME_NUM	../inc/NDK-bak.h	/^	IME_NUM,	\/**<digit*\/$/;"	e	enum:__anon96
IME_NUMPY	../env/NDK.h	/^    IME_NUMPY,	  \/**<数拼*\/$/;"	e	enum:__anon10
IME_NUMPY	../inc/NDK-bak.h	/^    IME_NUMPY,	\/**<Several spelling*\/$/;"	e	enum:__anon96
IME_QUWEI	../env/NDK.h	/^    IME_QUWEI,	  \/**<区位*\/$/;"	e	enum:__anon10
IME_QUWEI	../inc/NDK-bak.h	/^    IME_QUWEI,	\/**< zone bit*\/$/;"	e	enum:__anon96
INCLPATH	../build/Makefile	/^INCLPATH =  -I..\/env -I..\/inc -I..\/libapi -I..\/..\/..\/..\/..\/..\/third_party\/openssl-1.0.0g\/include\/$/;"	m
INCLPATH	../src/Makefile	/^INCLPATH =  -I..\/env -I..\/inc -I..\/libapi -I..\/..\/..\/..\/..\/..\/third_party\/openssl-1.0.0g\/include\/$/;"	m
INDEXLEN	../inc/key.h	19;"	d
INDEX_RECORD	../inc/key.h	/^}INDEX_RECORD;$/;"	t	typeref:struct:__anon83
INITFLAG	../src/main.c	29;"	d	file:
INPUTDISP_NORMAL	../env/NDK.h	/^	INPUTDISP_NORMAL, 		\/**<输入内容正常显示字符*\/$/;"	e	enum:__anon9
INPUTDISP_NORMAL	../inc/NDK-bak.h	/^	INPUTDISP_NORMAL, 		\/**<characters of input content normally displayed*\/$/;"	e	enum:__anon95
INPUTDISP_OTHER	../env/NDK.h	/^	INPUTDISP_OTHER,			\/**<支持带预设值的接收输入缓冲*\/$/;"	e	enum:__anon9
INPUTDISP_OTHER	../inc/NDK-bak.h	/^	INPUTDISP_OTHER,			\/**<support input receiving buffer with preset values*\/$/;"	e	enum:__anon95
INPUTDISP_PASSWD	../env/NDK.h	/^	INPUTDISP_PASSWD,			\/**<输入内容显示为'*' *\/$/;"	e	enum:__anon9
INPUTDISP_PASSWD	../inc/NDK-bak.h	/^	INPUTDISP_PASSWD,			\/**<input content displayed as '*' *\/$/;"	e	enum:__anon95
INPUT_AMOUNT_MODE_NONE	../libapi/lui.h	/^	INPUT_AMOUNT_MODE_NONE,			\/**<金额输入允许为空(输入的金额0)*\/$/;"	e	enum:__anon188
INPUT_AMOUNT_MODE_NOT_NONE	../libapi/lui.h	/^	INPUT_AMOUNT_MODE_NOT_NONE		\/**<金额输入必须大于0*\/$/;"	e	enum:__anon188
INPUT_CONTRL_LIMIT	../env/NDK.h	/^	INPUT_CONTRL_LIMIT,		\/**<只允许输入数字与小数点，输满后直接返回*\/$/;"	e	enum:__anon8
INPUT_CONTRL_LIMIT	../inc/NDK-bak.h	/^	INPUT_CONTRL_LIMIT,		\/**<Only allow you to input Numbers with decimal point, directly after the expiration of the lost back*\/$/;"	e	enum:__anon94
INPUT_CONTRL_LIMIT_ERETURN	../env/NDK.h	/^	INPUT_CONTRL_LIMIT_ERETURN,			\/**<只允许输入数字与小数点，输满后等待确认键返回*\/$/;"	e	enum:__anon8
INPUT_CONTRL_LIMIT_ERETURN	../inc/NDK-bak.h	/^	INPUT_CONTRL_LIMIT_ERETURN,			\/**<Only allow you to input Numbers with decimal point, waiting for the confirm button to return to after the expiration of the lost*\/$/;"	e	enum:__anon94
INPUT_CONTRL_NOLIMIT	../env/NDK.h	/^	INPUT_CONTRL_NOLIMIT, 		\/**<可输入任意ASCII码字符，输满后直接返回*\/$/;"	e	enum:__anon8
INPUT_CONTRL_NOLIMIT	../inc/NDK-bak.h	/^	INPUT_CONTRL_NOLIMIT, 		\/**<Can input any ASCII characters, returned directly after the expiration of the lost*\/$/;"	e	enum:__anon94
INPUT_CONTRL_NOLIMIT_ERETURN	../env/NDK.h	/^	INPUT_CONTRL_NOLIMIT_ERETURN,		\/**<可输入任意ASCII码字符，输满后等待确认键*\/$/;"	e	enum:__anon8
INPUT_CONTRL_NOLIMIT_ERETURN	../inc/NDK-bak.h	/^	INPUT_CONTRL_NOLIMIT_ERETURN,		\/**<Can input any ASCII characters, after the expiration of the lost waiting for the confirm button*\/$/;"	e	enum:__anon94
INPUT_DATE_MODE_MMDD	../libapi/lui.h	/^	INPUT_DATE_MODE_MMDD,$/;"	e	enum:__anon187
INPUT_DATE_MODE_MMDD_NULL	../libapi/lui.h	/^	INPUT_DATE_MODE_MMDD_NULL,$/;"	e	enum:__anon187
INPUT_DATE_MODE_YYMM	../libapi/lui.h	/^	INPUT_DATE_MODE_YYMM,				\/**<日期格式输入模式*\/$/;"	e	enum:__anon187
INPUT_DATE_MODE_YYMMDD	../libapi/lui.h	/^	INPUT_DATE_MODE_YYMMDD,$/;"	e	enum:__anon187
INPUT_DATE_MODE_YYMMDD_NULL	../libapi/lui.h	/^	INPUT_DATE_MODE_YYMMDD_NULL,$/;"	e	enum:__anon187
INPUT_DATE_MODE_YYMM_NULL	../libapi/lui.h	/^	INPUT_DATE_MODE_YYMM_NULL,$/;"	e	enum:__anon187
INPUT_DATE_MODE_YYYYMMDD	../libapi/lui.h	/^	INPUT_DATE_MODE_YYYYMMDD,$/;"	e	enum:__anon187
INPUT_DATE_MODE_YYYYMMDD_NULL	../libapi/lui.h	/^	INPUT_DATE_MODE_YYYYMMDD_NULL$/;"	e	enum:__anon187
INPUT_MODE_AMOUNT	../libapi/lui.h	/^	INPUT_MODE_AMOUNT,					\/**<输入模式:金额*\/$/;"	e	enum:__anon186
INPUT_MODE_NUMBER	../libapi/lui.h	/^	INPUT_MODE_NUMBER,					\/**<输入模式:只允许数字*\/$/;"	e	enum:__anon186
INPUT_MODE_NUMBERPOINT	../libapi/lui.h	/^	INPUT_MODE_NUMBERPOINT			\/**<输入数字和点*\/$/;"	e	enum:__anon186
INPUT_MODE_PASSWD	../libapi/lui.h	/^	INPUT_MODE_PASSWD,					\/**<输入模式:输入密码*\/$/;"	e	enum:__anon186
INPUT_MODE_STRING	../libapi/lui.h	/^	INPUT_MODE_STRING,					\/**<输入模式:一般字串*\/$/;"	e	enum:__anon186
INSTALL_PATH	../build/Makefile	/^INSTALL_PATH = \/mnt\/hgfs\/E\/upload\/ $/;"	m
INSTALL_PATH	../src/Makefile	/^INSTALL_PATH = \/mnt\/hgfs\/E\/upload\/ $/;"	m
Index_FL	../inc/Pri_DownloadApi.h	/^int Index_FL(char *S, char *T, int pos);$/;"	p	signature:(char *S, char *T, int pos)
Index_FL	../src/Pri_DownloadApi.c	/^int Index_FL(char *S, char *T, int pos)$/;"	f	signature:(char *S, char *T, int pos)
InitKeyPos	../src/main.c	/^static int InitKeyPos()$/;"	f	file:
InitKeyPos	../src/main.c	/^static int InitKeyPos(void);$/;"	p	file:	signature:(void)
InitOper	../inc/oper.h	/^extern void InitOper(void);$/;"	p	signature:(void)
InitOper	../src/oper.c	/^void InitOper(void)$/;"	f	signature:(void)
IsSamICReady	../inc/PriKeyDownload.h	/^int IsSamICReady();$/;"	p	signature:()
IsSamICReady	../src/PriKey_app.c	/^int IsSamICReady()$/;"	f
IsUdiskReady	../inc/PriKeyDownload.h	/^int IsUdiskReady();$/;"	p	signature:()
IsUdiskReady	../src/PriKey_app.c	/^int IsUdiskReady()$/;"	f
KBH_VERID	../inc/tr31_format.h	32;"	d
KBH_VERID	../inc/tr31_format.h	35;"	d
KEK1MANAGEROPER	../inc/oper.h	20;"	d
KEK1MANAGERPWD	../src/oper.c	13;"	d	file:
KEK1MANAGERPWDLEN	../src/oper.c	18;"	d	file:
KEK2MANAGEROPER	../inc/oper.h	21;"	d
KEK2MANAGERPWD	../src/oper.c	14;"	d	file:
KEK2MANAGERPWDLEN	../src/oper.c	19;"	d	file:
KEKBRANCHLEN	../src/main.c	28;"	d	file:
KEKINDEX	../inc/key.h	28;"	d
KEYBOARD	../inc/NDK-bak.h	/^    KEYBOARD,		\/**<keypad *\/$/;"	e	enum:__anon134
KEYFD_DUKPT	../inc/tr31_format.h	87;"	d
KEYFD_FIX	../inc/tr31_format.h	86;"	d
KEYFD_MT	../inc/tr31_format.h	85;"	d
KEYINFOLEN	../inc/key.h	26;"	d
KEYRECLEN	../inc/key.h	17;"	d
KEY_0	../libapi/lui.h	5;"	d
KEY_1	../libapi/lui.h	6;"	d
KEY_2	../libapi/lui.h	7;"	d
KEY_3	../libapi/lui.h	8;"	d
KEY_4	../libapi/lui.h	9;"	d
KEY_5	../libapi/lui.h	10;"	d
KEY_6	../libapi/lui.h	11;"	d
KEY_7	../libapi/lui.h	12;"	d
KEY_8	../libapi/lui.h	13;"	d
KEY_9	../libapi/lui.h	14;"	d
KEY_ALGORITHM_RSA	../inc/tr31_format.h	57;"	d
KEY_ALGORITHM_TDEA	../inc/tr31_format.h	58;"	d
KEY_ARCH_DUKPT	../inc/key.h	/^	KEY_ARCH_DUKPT$/;"	e	enum:sec_key_arch
KEY_ARCH_FIXED	../inc/key.h	/^	KEY_ARCH_FIXED = 0x100,$/;"	e	enum:sec_key_arch
KEY_ARCH_MKSK	../inc/key.h	/^	KEY_ARCH_MKSK,$/;"	e	enum:sec_key_arch
KEY_BACK	../libapi/lui.h	33;"	d
KEY_BACKPAPER	../libapi/lui.h	38;"	d
KEY_DOWN	../libapi/lui.h	27;"	d
KEY_DOWN_720	../libapi/lui.h	29;"	d
KEY_ENTER	../libapi/lui.h	34;"	d
KEY_ENTERPAPER	../libapi/lui.h	37;"	d
KEY_ESC	../libapi/lui.h	35;"	d
KEY_EXPORT	../inc/tr31_format.h	66;"	d
KEY_F1	../libapi/lui.h	15;"	d
KEY_F2	../libapi/lui.h	16;"	d
KEY_F3	../libapi/lui.h	17;"	d
KEY_F4	../libapi/lui.h	18;"	d
KEY_F5	../libapi/lui.h	19;"	d
KEY_F6	../libapi/lui.h	20;"	d
KEY_F7	../libapi/lui.h	21;"	d
KEY_F8	../libapi/lui.h	22;"	d
KEY_F9	../libapi/lui.h	23;"	d
KEY_FILE	../inc/key.h	16;"	d
KEY_FILE_LEN	../src/PriKey_app.c	18;"	d	file:
KEY_H	../inc/key.h	10;"	d
KEY_LEFT	../libapi/lui.h	24;"	d
KEY_LEFT_720	../libapi/lui.h	30;"	d
KEY_MENU	../libapi/lui.h	36;"	d
KEY_NULL	../libapi/lui.h	39;"	d
KEY_POINT	../libapi/lui.h	32;"	d
KEY_RIGHT	../libapi/lui.h	25;"	d
KEY_RIGHT_720	../libapi/lui.h	31;"	d
KEY_UP	../libapi/lui.h	26;"	d
KEY_UP_720	../libapi/lui.h	28;"	d
KEY_USAGE	../inc/tr31_format.h	46;"	d
KEY_USAGE_BDK	../inc/tr31_format.h	48;"	d
KEY_USAGE_MAC	../inc/tr31_format.h	52;"	d
KEY_USAGE_MAG	../inc/tr31_format.h	54;"	d
KEY_USAGE_MST	../inc/tr31_format.h	50;"	d
KEY_USAGE_PIN	../inc/tr31_format.h	53;"	d
KEY_USAGE_PRI	../inc/tr31_format.h	49;"	d
KEY_USAGE_TR31	../inc/tr31_format.h	51;"	d
KEY_USEMODE_ENCRYPT	../inc/tr31_format.h	63;"	d
KEY_USEMODE_MAC	../inc/tr31_format.h	61;"	d
KEY_USEMODE_MST	../inc/tr31_format.h	62;"	d
KEY_USEMODE_SIG	../inc/tr31_format.h	64;"	d
KT_BDK_TYPE	../inc/tr31_format.h	82;"	d
KT_MAC_TYPE	../inc/tr31_format.h	78;"	d
KT_MAG_TYPE	../inc/tr31_format.h	80;"	d
KT_MST_TR31_TYPE	../inc/tr31_format.h	76;"	d
KT_MST_TYPE	../inc/tr31_format.h	75;"	d
KT_PIN_TYPE	../inc/tr31_format.h	77;"	d
KT_PRI_TYPE	../inc/tr31_format.h	79;"	d
K_BASP	../env/NDK.h	824;"	d
K_BASP	../inc/NDK-bak.h	800;"	d
K_DOT	../env/NDK.h	828;"	d
K_DOT	../inc/NDK-bak.h	804;"	d
K_DOWN	../inc/selftest.h	55;"	d
K_EIGHT	../env/NDK.h	841;"	d
K_EIGHT	../inc/NDK-bak.h	817;"	d
K_ENTER	../env/NDK.h	825;"	d
K_ENTER	../inc/NDK-bak.h	801;"	d
K_ESC	../env/NDK.h	826;"	d
K_ESC	../inc/NDK-bak.h	802;"	d
K_F1	../env/NDK.h	815;"	d
K_F1	../inc/NDK-bak.h	791;"	d
K_F2	../env/NDK.h	816;"	d
K_F2	../inc/NDK-bak.h	792;"	d
K_F3	../env/NDK.h	817;"	d
K_F3	../inc/NDK-bak.h	793;"	d
K_F4	../env/NDK.h	818;"	d
K_F4	../inc/NDK-bak.h	794;"	d
K_F5	../env/NDK.h	819;"	d
K_F5	../inc/NDK-bak.h	795;"	d
K_F6	../env/NDK.h	820;"	d
K_F6	../inc/NDK-bak.h	796;"	d
K_F7	../env/NDK.h	821;"	d
K_F7	../inc/NDK-bak.h	797;"	d
K_F8	../env/NDK.h	822;"	d
K_F8	../inc/NDK-bak.h	798;"	d
K_F9	../env/NDK.h	823;"	d
K_F9	../inc/NDK-bak.h	799;"	d
K_FIVE	../env/NDK.h	838;"	d
K_FIVE	../inc/NDK-bak.h	814;"	d
K_FOUR	../env/NDK.h	837;"	d
K_FOUR	../inc/NDK-bak.h	813;"	d
K_LEFT	../inc/selftest.h	56;"	d
K_NINE	../env/NDK.h	842;"	d
K_NINE	../inc/NDK-bak.h	818;"	d
K_ONE	../env/NDK.h	834;"	d
K_ONE	../inc/NDK-bak.h	810;"	d
K_RIGHT	../inc/selftest.h	57;"	d
K_SEVEN	../env/NDK.h	840;"	d
K_SEVEN	../inc/NDK-bak.h	816;"	d
K_SIX	../env/NDK.h	839;"	d
K_SIX	../inc/NDK-bak.h	815;"	d
K_THREE	../env/NDK.h	836;"	d
K_THREE	../inc/NDK-bak.h	812;"	d
K_TWO	../env/NDK.h	835;"	d
K_TWO	../inc/NDK-bak.h	811;"	d
K_UP	../inc/selftest.h	54;"	d
K_ZERO	../env/NDK.h	833;"	d
K_ZERO	../inc/NDK-bak.h	809;"	d
K_ZMK	../env/NDK.h	827;"	d
K_ZMK	../inc/NDK-bak.h	803;"	d
KeyDesEnc	../inc/PriKeyDownload.h	/^int KeyDesEnc(char *file_name,char *name);$/;"	p	signature:(char *file_name,char *name)
KeyDesEnc	../src/PriKey_app.c	/^int KeyDesEnc(char *file_name,char *name)$/;"	f	signature:(char *file_name,char *name)
KeyDistribution	../inc/key.h	/^int KeyDistribution(void);$/;"	p	signature:(void)
LANGUAGE	../inc/appinc.h	20;"	d
LANGUE_CHINESE	../inc/selftest.h	/^    LANGUE_CHINESE,$/;"	e	enum:__anon162
LANGUE_ENGLISH	../inc/selftest.h	/^    LANGUE_ENGLISH$/;"	e	enum:__anon162
LCDSIZE_128X160	../inc/PriKeyDownload.h	/^    LCDSIZE_128X160,$/;"	e	enum:__anon160
LCDSIZE_128X160	../inc/selftest.h	/^	LCDSIZE_128X160,$/;"	e	enum:__anon163
LCDSIZE_128X64	../inc/PriKeyDownload.h	/^    LCDSIZE_128X64,$/;"	e	enum:__anon160
LCDSIZE_128X64	../inc/selftest.h	/^	LCDSIZE_128X64,$/;"	e	enum:__anon163
LCDSIZE_240X320	../inc/PriKeyDownload.h	/^    LCDSIZE_240X320,$/;"	e	enum:__anon160
LCDSIZE_240X320	../inc/selftest.h	/^	LCDSIZE_240X320,$/;"	e	enum:__anon163
LCDSIZE_MAX	../inc/PriKeyDownload.h	/^    LCDSIZE_MAX$/;"	e	enum:__anon160
LCDSIZE_MAX	../inc/selftest.h	/^	LCDSIZE_MAX$/;"	e	enum:__anon163
LCP_DCD_CLOSE	../env/NDK.h	3066;"	d
LCP_DCD_CLOSE	../inc/NDK-bak.h	2694;"	d
LCP_DCD_OPEN	../env/NDK.h	3065;"	d
LCP_DCD_OPEN	../inc/NDK-bak.h	2693;"	d
LCP_ECHO_CLOSE	../env/NDK.h	3064;"	d
LCP_ECHO_CLOSE	../inc/NDK-bak.h	2692;"	d
LCP_ECHO_OPEN	../env/NDK.h	3063;"	d
LCP_ECHO_OPEN	../inc/NDK-bak.h	2691;"	d
LCP_PPP_KEEP	../env/NDK.h	3067;"	d
LCP_PPP_KEEP	../inc/NDK-bak.h	2695;"	d
LCP_PPP_UNKEEPED	../env/NDK.h	3068;"	d
LCP_PPP_UNKEEPED	../inc/NDK-bak.h	2696;"	d
LD	../build/Makefile	/^LD=$(CROSS_COMPILE)ld$/;"	m
LD	../src/Makefile	/^LD=$(CROSS_COMPILE)ld$/;"	m
LDFLAGS	../build/Makefile	/^LDFLAGS=$/;"	m
LDFLAGS	../src/Makefile	/^LDFLAGS=$/;"	m
LED_COM_FLICK	../env/NDK.h	/^	LED_COM_FLICK = 0x300,        	\/**<   控制通讯灯闪			*\/$/;"	e	enum:__anon57
LED_COM_FLICK	../inc/NDK-bak.h	/^	LED_COM_FLICK = 0x300,        	\/**<   Lights flash control communication			*\/$/;"	e	enum:__anon133
LED_COM_OFF	../env/NDK.h	/^	LED_COM_OFF = 0x200,       	\/**<   控制通讯灯灭			*\/$/;"	e	enum:__anon57
LED_COM_OFF	../inc/NDK-bak.h	/^	LED_COM_OFF = 0x200,       	\/**<   Control communication lights went out			*\/$/;"	e	enum:__anon133
LED_COM_ON	../env/NDK.h	/^	LED_COM_ON = 0x100,      		\/**<   控制通讯灯亮			*\/$/;"	e	enum:__anon57
LED_COM_ON	../inc/NDK-bak.h	/^	LED_COM_ON = 0x100,      		\/**<   The light control communication			*\/$/;"	e	enum:__anon133
LED_ONL_FLICK	../env/NDK.h	/^	LED_ONL_FLICK = 0xc00       	\/**<   控制联机灯闪			*\/$/;"	e	enum:__anon57
LED_ONL_FLICK	../inc/NDK-bak.h	/^	LED_ONL_FLICK = 0xc00       	\/**<   Control online flash lamp			*\/$/;"	e	enum:__anon133
LED_ONL_OFF	../env/NDK.h	/^	LED_ONL_OFF = 0x800,       	\/**<   控制联机灯灭			*\/$/;"	e	enum:__anon57
LED_ONL_OFF	../inc/NDK-bak.h	/^	LED_ONL_OFF = 0x800,       	\/**<   Control online lights went out			*\/$/;"	e	enum:__anon133
LED_ONL_ON	../env/NDK.h	/^	LED_ONL_ON = 0x400,      		\/**<   控制联机灯亮			*\/$/;"	e	enum:__anon57
LED_ONL_ON	../inc/NDK-bak.h	/^	LED_ONL_ON = 0x400,      		\/**<   Control online lights			*\/$/;"	e	enum:__anon133
LED_RFID_BLUE_FLICK	../env/NDK.h	/^	LED_RFID_BLUE_FLICK = 0xc0,        	\/**<   控制射频蓝色灯闪			*\/$/;"	e	enum:__anon57
LED_RFID_BLUE_FLICK	../inc/NDK-bak.h	/^	LED_RFID_BLUE_FLICK = 0xc0,        	\/**<   Control the rf blue lights flash			*\/$/;"	e	enum:__anon133
LED_RFID_BLUE_OFF	../env/NDK.h	/^	LED_RFID_BLUE_OFF = 0x80,       	\/**<   控制射频蓝色灯灭			*\/$/;"	e	enum:__anon57
LED_RFID_BLUE_OFF	../inc/NDK-bak.h	/^	LED_RFID_BLUE_OFF = 0x80,       	\/**<   Control of radio frequency (rf) blue lights went out			*\/$/;"	e	enum:__anon133
LED_RFID_BLUE_ON	../env/NDK.h	/^	LED_RFID_BLUE_ON = 0x40,      		\/**<   控制射频蓝色灯亮			*\/$/;"	e	enum:__anon57
LED_RFID_BLUE_ON	../inc/NDK-bak.h	/^	LED_RFID_BLUE_ON = 0x40,      		\/**<   Control the rf blue light			*\/$/;"	e	enum:__anon133
LED_RFID_GREEN_FLICK	../env/NDK.h	/^	LED_RFID_GREEN_FLICK = 0x30,        	\/**<   控制射频绿色灯闪			*\/$/;"	e	enum:__anon57
LED_RFID_GREEN_FLICK	../inc/NDK-bak.h	/^	LED_RFID_GREEN_FLICK = 0x30,        	\/**<   Control the rf green light flash			*\/$/;"	e	enum:__anon133
LED_RFID_GREEN_OFF	../env/NDK.h	/^	LED_RFID_GREEN_OFF = 0x20,       	\/**<   控制射频绿色灯灭			*\/$/;"	e	enum:__anon57
LED_RFID_GREEN_OFF	../inc/NDK-bak.h	/^	LED_RFID_GREEN_OFF = 0x20,       	\/**<   Control of radio frequency (rf) green lights went out			*\/$/;"	e	enum:__anon133
LED_RFID_GREEN_ON	../env/NDK.h	/^	LED_RFID_GREEN_ON = 0x10,      		\/**<   控制射频绿色灯亮			*\/$/;"	e	enum:__anon57
LED_RFID_GREEN_ON	../inc/NDK-bak.h	/^	LED_RFID_GREEN_ON = 0x10,      		\/**<   Control of radio frequency (rf) green lights			*\/$/;"	e	enum:__anon133
LED_RFID_RED_FLICK	../env/NDK.h	/^	LED_RFID_RED_FLICK = 0x03,        	\/**<   控制射频红色灯闪			*\/$/;"	e	enum:__anon57
LED_RFID_RED_FLICK	../inc/NDK-bak.h	/^	LED_RFID_RED_FLICK = 0x03,        	\/**<   Control of radio frequency flashing red lights			*\/$/;"	e	enum:__anon133
LED_RFID_RED_OFF	../env/NDK.h	/^	LED_RFID_RED_OFF = 0x02,       	\/**<   控制射频红色灯灭			*\/$/;"	e	enum:__anon57
LED_RFID_RED_OFF	../inc/NDK-bak.h	/^	LED_RFID_RED_OFF = 0x02,       	\/**<   Control of radio frequency (rf) red lights went out			*\/$/;"	e	enum:__anon133
LED_RFID_RED_ON	../env/NDK.h	/^	LED_RFID_RED_ON = 0x01,      		\/**<   控制射频红色灯亮			*\/$/;"	e	enum:__anon57
LED_RFID_RED_ON	../inc/NDK-bak.h	/^	LED_RFID_RED_ON = 0x01,      		\/**<   Control of radio frequency (rf) red lights			*\/$/;"	e	enum:__anon133
LED_RFID_YELLOW_FLICK	../env/NDK.h	/^	LED_RFID_YELLOW_FLICK = 0x0c,        	\/**<   控制射频黄色灯闪			*\/$/;"	e	enum:__anon57
LED_RFID_YELLOW_FLICK	../inc/NDK-bak.h	/^	LED_RFID_YELLOW_FLICK = 0x0c,        	\/**<   Control of radio frequency flashing yellow lights			*\/$/;"	e	enum:__anon133
LED_RFID_YELLOW_OFF	../env/NDK.h	/^	LED_RFID_YELLOW_OFF = 0x08,       	\/**<   控制射频黄色灯灭			*\/$/;"	e	enum:__anon57
LED_RFID_YELLOW_OFF	../inc/NDK-bak.h	/^	LED_RFID_YELLOW_OFF = 0x08,       	\/**<   Control of radio frequency (rf) yellow lights went out			*\/$/;"	e	enum:__anon133
LED_RFID_YELLOW_ON	../env/NDK.h	/^	LED_RFID_YELLOW_ON = 0x04,      		\/**<   控制射频黄色灯亮			*\/$/;"	e	enum:__anon57
LED_RFID_YELLOW_ON	../inc/NDK-bak.h	/^	LED_RFID_YELLOW_ON = 0x04,      		\/**<   Control of radio frequency (rf) yellow light			*\/$/;"	e	enum:__anon133
LEFT	../inc/PriKeyDownload.h	26;"	d
LENGTH_TYPE_FIX	../libapi/ltool.h	/^    LENGTH_TYPE_FIX    = 0,$/;"	e	enum:__anon180
LENGTH_TYPE_LLLVAR	../libapi/ltool.h	/^    LENGTH_TYPE_LLLVAR = 2$/;"	e	enum:__anon180
LENGTH_TYPE_LLVAR	../libapi/ltool.h	/^    LENGTH_TYPE_LLVAR  = 1,$/;"	e	enum:__anon180
LIBCONFIG_API	../inc/libconfig.h	32;"	d
LIBCONFIG_API	../inc/libconfig.h	34;"	d
LIBCONFIG_API	../inc/libconfig.h	36;"	d
LIBCONFIG_API	../inc/libconfig.h	39;"	d
LIBCONFIG_API	../libapi/libconfig.h	32;"	d
LIBCONFIG_API	../libapi/libconfig.h	34;"	d
LIBCONFIG_API	../libapi/libconfig.h	36;"	d
LIBCONFIG_API	../libapi/libconfig.h	39;"	d
LIBCONFIG_VER_MAJOR	../inc/libconfig.h	42;"	d
LIBCONFIG_VER_MAJOR	../libapi/libconfig.h	42;"	d
LIBCONFIG_VER_MINOR	../inc/libconfig.h	43;"	d
LIBCONFIG_VER_MINOR	../libapi/libconfig.h	43;"	d
LIBCONFIG_VER_REVISION	../inc/libconfig.h	44;"	d
LIBCONFIG_VER_REVISION	../libapi/libconfig.h	44;"	d
LIBPATH	../build/Makefile	/^LIBPATH =$/;"	m
LIBPATH	../src/Makefile	/^LIBPATH =$/;"	m
LIBS	../build/Makefile	/^LIBS= -L..\/env -lndk -lwidget -lcrypto -L..\/lib -lcard -ltool -lui $/;"	m
LIBS	../src/Makefile	/^LIBS= -L..\/env -lndk -lwidget -lcrypto -L..\/lib -lcard -ltool -lui $/;"	m
LIST_H_	../inc/list.h	9;"	d
LOW_HALF	../inc/emvnn.h	39;"	d
L_CHINESE	../inc/appinc.h	18;"	d
L_ENGLISH	../inc/appinc.h	19;"	d
Language_CHINESE	../inc/selftest.h	26;"	d
MAC_LEN	../inc/tr31_format.h	33;"	d
MAC_LEN	../inc/tr31_format.h	36;"	d
MAG	../inc/NDK-bak.h	/^    MAG,			\/**<magcard*\/$/;"	e	enum:__anon134
MAGCARD_TK123_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK123_LRC_ERR=MAGCARD_TK1_LRC_ERR|MAGCARD_TK2_LRC_ERR|MAGCARD_TK3_LRC_ERR	\/\/ 一、二、三道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAGCARD_TK12_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK12_LRC_ERR=MAGCARD_TK1_LRC_ERR|MAGCARD_TK2_LRC_ERR,	\/\/ 一、二道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAGCARD_TK13_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK13_LRC_ERR=MAGCARD_TK1_LRC_ERR|MAGCARD_TK3_LRC_ERR,	\/\/ 一、三道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAGCARD_TK1_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK1_LRC_ERR=0xC01,										\/\/ 一道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAGCARD_TK23_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK23_LRC_ERR=MAGCARD_TK2_LRC_ERR|MAGCARD_TK3_LRC_ERR,	\/\/ 二、三道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAGCARD_TK2_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK2_LRC_ERR=0xC02,										\/\/ 二道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAGCARD_TK3_LRC_ERR	../inc/selftest.h	/^    MAGCARD_TK3_LRC_ERR=0xC08,										\/\/ 三道LRC校验失败$/;"	e	enum:SYS_ERRORCODE
MAINTK1	../libapi/lposcard.h	/^	MAINTK1  = (1<<0),  			  				\/**<一磁道为优先道              	*\/$/;"	e	enum:EM_MAINTK
MAINTK1_2	../libapi/lposcard.h	/^	MAINTK1_2 =   (MAINTK1 | MAINTK2),			\/**<一、二磁道为优先道          	*\/$/;"	e	enum:EM_MAINTK
MAINTK1_2_3	../libapi/lposcard.h	/^	MAINTK1_2_3 = (MAINTK1 | MAINTK2 | MAINTK3)	\/**<一、二、三磁道为优先道      	*\/$/;"	e	enum:EM_MAINTK
MAINTK1_3	../libapi/lposcard.h	/^	MAINTK1_3 =   (MAINTK1 | MAINTK3),			\/**<一、三磁道为优先道          	*\/$/;"	e	enum:EM_MAINTK
MAINTK2	../libapi/lposcard.h	/^	MAINTK2  = (1<<1),  			   				\/**<二磁道为优先道              	*\/$/;"	e	enum:EM_MAINTK
MAINTK2_3	../libapi/lposcard.h	/^	MAINTK2_3 =   (MAINTK2 | MAINTK3), 			\/**<二、三磁道为优先道          	*\/$/;"	e	enum:EM_MAINTK
MAINTK3	../libapi/lposcard.h	/^	MAINTK3  = (1<<2),  			   				\/**<三磁道为优先道              	*\/$/;"	e	enum:EM_MAINTK
MANAGEROPER	../inc/oper.h	17;"	d
MANAGERPWD	../src/oper.c	12;"	d	file:
MANAGERPWDLEN	../src/oper.c	17;"	d	file:
MAXSENDLEN	../inc/PriKeyDownload.h	126;"	d
MAX_ERR_BUF_LEN	../libapi/ltool.h	33;"	d
MAX_ERR_NUM	../libapi/ltool.h	34;"	d
MAX_FIELD_LEN	../libapi/ltool.h	702;"	d
MAX_MENU_NAME	../inc/PriKeyDownload.h	77;"	d
MAX_MENU_NAME	../inc/selftest.h	16;"	d
MAX_MSG_LEN	../libapi/ltool.h	703;"	d
MAX_NN_DIGIT	../inc/emvnn.h	34;"	d
MAX_NN_DIGITS	../inc/emvnn.h	31;"	d
MAX_NN_HALF_DIGIT	../inc/emvnn.h	35;"	d
MAX_RSA_MODULUS_BITS	../inc/emvrsa.h	31;"	d
MAX_RSA_MODULUS_LEN	../env/NDK.h	1748;"	d
MAX_RSA_MODULUS_LEN	../inc/NDK-bak.h	1589;"	d
MAX_RSA_MODULUS_LEN	../inc/PriKeyDownload.h	5;"	d
MAX_RSA_MODULUS_LEN	../inc/PriKeyDownload.h	7;"	d
MAX_RSA_MODULUS_LEN	../inc/emvrsa.h	32;"	d
MAX_RSA_MODULUS_LEN	../inc/emvrsa.h	33;"	d
MAX_RSA_PRIME_BITS	../inc/emvrsa.h	34;"	d
MAX_RSA_PRIME_LEN	../env/NDK.h	1749;"	d
MAX_RSA_PRIME_LEN	../inc/NDK-bak.h	1590;"	d
MAX_RSA_PRIME_LEN	../inc/emvrsa.h	35;"	d
MAX_RSA_PRIME_LEN	../inc/emvrsa.h	36;"	d
MDMSTATUS_CONNECT_AFTERPREDIAL	../env/NDK.h	/^	MDMSTATUS_CONNECT_AFTERPREDIAL=2,$/;"	e	enum:MDM_STATUS
MDMSTATUS_CONNECT_AFTERPREDIAL	../inc/NDK-bak.h	/^	MDMSTATUS_CONNECT_AFTERPREDIAL=2,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_BUSY	../env/NDK.h	/^	MDMSTATUS_MS_BUSY = -4,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_BUSY	../inc/NDK-bak.h	/^	MDMSTATUS_MS_BUSY = -4,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_ERROR	../env/NDK.h	/^	MDMSTATUS_MS_ERROR = -5,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_ERROR	../inc/NDK-bak.h	/^	MDMSTATUS_MS_ERROR = -5,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_NOCARRIER	../env/NDK.h	/^	MDMSTATUS_MS_NOCARRIER =	-3,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_NOCARRIER	../inc/NDK-bak.h	/^	MDMSTATUS_MS_NOCARRIER =	-3,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_NODIALTONE	../env/NDK.h	/^	MDMSTATUS_MS_NODIALTONE = -2,$/;"	e	enum:MDM_STATUS
MDMSTATUS_MS_NODIALTONE	../inc/NDK-bak.h	/^	MDMSTATUS_MS_NODIALTONE = -2,$/;"	e	enum:MDM_STATUS
MDMSTATUS_NOPREDIAL	../env/NDK.h	/^	MDMSTATUS_NOPREDIAL = -11,$/;"	e	enum:MDM_STATUS
MDMSTATUS_NOPREDIAL	../inc/NDK-bak.h	/^	MDMSTATUS_NOPREDIAL = -11,$/;"	e	enum:MDM_STATUS
MDMSTATUS_NORETURN_AFTERPREDIAL	../env/NDK.h	/^	MDMSTATUS_NORETURN_AFTERPREDIAL=0,$/;"	e	enum:MDM_STATUS
MDMSTATUS_NORETURN_AFTERPREDIAL	../inc/NDK-bak.h	/^	MDMSTATUS_NORETURN_AFTERPREDIAL=0,$/;"	e	enum:MDM_STATUS
MDMSTATUS_OK_AFTERPREDIAL	../env/NDK.h	/^	MDMSTATUS_OK_AFTERPREDIAL=1,$/;"	e	enum:MDM_STATUS
MDMSTATUS_OK_AFTERPREDIAL	../inc/NDK-bak.h	/^	MDMSTATUS_OK_AFTERPREDIAL=1,$/;"	e	enum:MDM_STATUS
MDM_PatchType0	../env/NDK.h	/^	MDM_PatchType0=0,	\/**<预留*\/$/;"	e	enum:MDM_Patchtype
MDM_PatchType0	../inc/NDK-bak.h	/^	MDM_PatchType0=0,$/;"	e	enum:MDM_Patchtype
MDM_PatchType1	../env/NDK.h	/^	MDM_PatchType1=1,	\/**<预留*\/$/;"	e	enum:MDM_Patchtype
MDM_PatchType1	../inc/NDK-bak.h	/^	MDM_PatchType1=1,$/;"	e	enum:MDM_Patchtype
MDM_PatchType2	../env/NDK.h	/^	MDM_PatchType2=2,	\/**<预留*\/$/;"	e	enum:MDM_Patchtype
MDM_PatchType2	../inc/NDK-bak.h	/^	MDM_PatchType2=2,$/;"	e	enum:MDM_Patchtype
MDM_PatchType3	../env/NDK.h	/^	MDM_PatchType3=3,	\/**<快速连接补丁包*\/$/;"	e	enum:MDM_Patchtype
MDM_PatchType3	../inc/NDK-bak.h	/^	MDM_PatchType3=3,\/\/fast link to patch package$/;"	e	enum:MDM_Patchtype
MDM_PatchType4	../env/NDK.h	/^	MDM_PatchType4=4,	\/**<特殊环境下使用的补丁方式*\/$/;"	e	enum:MDM_Patchtype
MDM_PatchType4	../inc/NDK-bak.h	/^	MDM_PatchType4=4,$/;"	e	enum:MDM_Patchtype
MDM_PatchType5	../env/NDK.h	/^	MDM_PatchType5=5, 	\/**<默认的补丁包方式*\/$/;"	e	enum:MDM_Patchtype
MDM_PatchType5	../inc/NDK-bak.h	/^	MDM_PatchType5=5,\/\/ patch package method by default$/;"	e	enum:MDM_Patchtype
MDM_Patchtype	../env/NDK.h	/^typedef enum MDM_Patchtype$/;"	g
MDM_Patchtype	../inc/NDK-bak.h	/^typedef enum MDM_Patchtype$/;"	g
MDM_STATUS	../env/NDK.h	/^typedef enum MDM_STATUS$/;"	g
MDM_STATUS	../inc/NDK-bak.h	/^typedef enum MDM_STATUS$/;"	g
MENU	../inc/PriKeyDownload.h	30;"	d
MENU_MODE_AUTOESC	../libapi/lui.h	/^	MENU_MODE_AUTOESC=0x03			\/**<执行完自动退出*\/$/;"	e	enum:__anon185
MENU_MODE_ESC	../libapi/lui.h	/^	MENU_MODE_ESC = 0x02,				\/**<按ESC退出*\/$/;"	e	enum:__anon185
MENU_MODE_ESCCONFIRM	../libapi/lui.h	/^	MENU_MODE_ESCCONFIRM = 0x01,		\/**<退出是否需要确认*\/$/;"	e	enum:__anon185
MENU_MODE_NONE	../libapi/lui.h	/^	MENU_MODE_NONE = 0,				\/**<不允许菜单退出*\/$/;"	e	enum:__anon185
MENU_TITLE_AUTO	../libapi/lui.h	/^	MENU_TITLE_AUTO					\/**<标题存在自适应 *\/$/;"	e	enum:__anon181
MENU_TITLE_MUST	../libapi/lui.h	/^	MENU_TITLE_MUST = 0,				\/**<Menu函数标题必需存在*\/$/;"	e	enum:__anon181
MIN_RSA_MODULUS_BITS	../inc/emvrsa.h	30;"	d
MODEM_ID	../inc/NDK-bak.h	/^    MODEM_ID,		\/**<MODEM*\/$/;"	e	enum:__anon134
MODIFY_PIN	../src/PSam.c	20;"	d	file:
MODULE_TYPE_CDMA	../env/NDK.h	/^	MODULE_TYPE_CDMA,		\/**<CDMA模块*\/$/;"	e	enum:__anon47
MODULE_TYPE_GPRS	../env/NDK.h	/^	MODULE_TYPE_GPRS,		\/**<GPRS模块*\/$/;"	e	enum:__anon47
MODULE_TYPE_TDSCDMA	../env/NDK.h	/^	MODULE_TYPE_TDSCDMA,	\/**<TDSCDMA模块*\/$/;"	e	enum:__anon47
MODULE_TYPE_WCDMA	../env/NDK.h	/^	MODULE_TYPE_WCDMA,		\/**<WCDMA模块*\/$/;"	e	enum:__anon47
MODULE_UNION_INFO	../env/NDK.h	/^}MODULE_UNION_INFO;$/;"	t	typeref:union:__anon46
MessagePrint	../inc/PriKeyDownload.h	/^void MessagePrint(char *szChinese, char *szEnglish,int time);$/;"	p	signature:(char *szChinese, char *szEnglish,int time)
MessagePrint	../src/PriKey_app.c	/^void MessagePrint(char *szChinese, char *szEnglish,int time)$/;"	f	signature:(char *szChinese, char *szEnglish,int time)
ModemDial	../env/NDK.h	/^    int (*ModemDial)(void);\/**<拨号函数*\/$/;"	m	struct:__anon50	access:public
ModemDial	../inc/NDK-bak.h	/^    int (*ModemDial)(void);\/**<fucntion Dial*\/$/;"	m	struct:__anon127	access:public
ModuleStationInfo	../env/NDK.h	/^	MODULE_UNION_INFO ModuleStationInfo;\/**<模块基站信息*\/$/;"	m	struct:__anon48	access:public
NAK	../libapi/ltool.h	18;"	d
NAME	../build/Makefile	/^NAME = main$/;"	m
NAME	../src/Makefile	/^NAME = main$/;"	m
NDK_APP_BUILD_TIME_LEN	../env/NDK.h	1615;"	d
NDK_APP_BUILD_TIME_LEN	../inc/NDK-bak.h	1483;"	d
NDK_APP_NAME_MAX_LEN	../env/NDK.h	1613;"	d
NDK_APP_NAME_MAX_LEN	../inc/NDK-bak.h	1481;"	d
NDK_APP_VER_MAX_LEN	../env/NDK.h	1614;"	d
NDK_APP_VER_MAX_LEN	../inc/NDK-bak.h	1482;"	d
NDK_AddDigitStr	../env/NDK.h	/^int NDK_AddDigitStr(const uchar *pszDigStr1, const uchar *pszDigStr2, uchar* pszResult, int *pnResultLen );$/;"	p	signature:(const uchar *pszDigStr1, const uchar *pszDigStr2, uchar* pszResult, int *pnResultLen )
NDK_AddDigitStr	../inc/NDK-bak.h	/^int NDK_AddDigitStr(const uchar *pszDigStr1, const uchar *pszDigStr2, uchar* pszResult, int *pnResultLen );$/;"	p	signature:(const uchar *pszDigStr1, const uchar *pszDigStr2, uchar* pszResult, int *pnResultLen )
NDK_AddSymbolToStr	../env/NDK.h	/^int NDK_AddSymbolToStr(uchar *pszString, int nLen, uchar ucCh, int nOption);$/;"	p	signature:(uchar *pszString, int nLen, uchar ucCh, int nOption)
NDK_AddSymbolToStr	../inc/NDK-bak.h	/^int NDK_AddSymbolToStr(uchar *pszString, int nLen, uchar ch, int nOption);$/;"	p	signature:(uchar *pszString, int nLen, uchar ch, int nOption)
NDK_AlgRSAKeyPairGen	../env/NDK.h	/^int NDK_AlgRSAKeyPairGen( int nProtoKeyBit, int nPubEType, ST_RSA_PUBLIC_KEY *pstPublicKeyOut, ST_RSA_PRIVATE_KEY *pstPrivateKeyOut);$/;"	p	signature:( int nProtoKeyBit, int nPubEType, ST_RSA_PUBLIC_KEY *pstPublicKeyOut, ST_RSA_PRIVATE_KEY *pstPrivateKeyOut)
NDK_AlgRSAKeyPairGen	../inc/NDK-bak.h	/^int NDK_AlgRSAKeyPairGen( int nProtoKeyBit, int nPubEType, ST_RSA_PUBLIC_KEY *pstPublicKeyOut, ST_RSA_PRIVATE_KEY *pstPrivateKeyOut);$/;"	p	signature:( int nProtoKeyBit, int nPubEType, ST_RSA_PUBLIC_KEY *pstPublicKeyOut, ST_RSA_PRIVATE_KEY *pstPrivateKeyOut)
NDK_AlgRSAKeyPairVerify	../env/NDK.h	/^int NDK_AlgRSAKeyPairVerify(ST_RSA_PUBLIC_KEY *pstPublicKey, ST_RSA_PRIVATE_KEY *pstPrivateKey);$/;"	p	signature:(ST_RSA_PUBLIC_KEY *pstPublicKey, ST_RSA_PRIVATE_KEY *pstPrivateKey)
NDK_AlgRSAKeyPairVerify	../inc/NDK-bak.h	/^int NDK_AlgRSAKeyPairVerify(ST_RSA_PUBLIC_KEY *pstPublicKey, ST_RSA_PRIVATE_KEY *pstPrivateKey);$/;"	p	signature:(ST_RSA_PUBLIC_KEY *pstPublicKey, ST_RSA_PRIVATE_KEY *pstPrivateKey)
NDK_AlgRSARecover	../env/NDK.h	/^int NDK_AlgRSARecover(uchar *psModule, int nModuleLen, uchar *psExp, uchar *psDataIn, uchar *psDataOut);$/;"	p	signature:(uchar *psModule, int nModuleLen, uchar *psExp, uchar *psDataIn, uchar *psDataOut)
NDK_AlgRSARecover	../inc/NDK-bak.h	/^int NDK_AlgRSARecover(uchar *psModule, int nModuleLen, uchar *psExp, uchar *psDataIn, uchar *psDataOut);$/;"	p	signature:(uchar *psModule, int nModuleLen, uchar *psExp, uchar *psDataIn, uchar *psDataOut)
NDK_AlgSHA1	../env/NDK.h	/^int NDK_AlgSHA1(uchar *psDataIn, int nInlen, uchar *psDataOut);$/;"	p	signature:(uchar *psDataIn, int nInlen, uchar *psDataOut)
NDK_AlgSHA1	../inc/NDK-bak.h	/^int NDK_AlgSHA1(uchar *psDataIn, int nInlen, uchar *psDataOut);$/;"	p	signature:(uchar *psDataIn, int nInlen, uchar *psDataOut)
NDK_AlgSHA256	../env/NDK.h	/^int NDK_AlgSHA256(uchar *psDataIn, int nInlen, uchar *psDataOut);$/;"	p	signature:(uchar *psDataIn, int nInlen, uchar *psDataOut)
NDK_AlgSHA256	../inc/NDK-bak.h	/^int NDK_AlgSHA256(uchar *psDataIn, int nInlen, uchar *psDataOut);$/;"	p	signature:(uchar *psDataIn, int nInlen, uchar *psDataOut)
NDK_AlgSHA512	../env/NDK.h	/^int NDK_AlgSHA512(uchar *psDataIn, int nInlen, uchar *psDataOut);$/;"	p	signature:(uchar *psDataIn, int nInlen, uchar *psDataOut)
NDK_AlgSHA512	../inc/NDK-bak.h	/^int NDK_AlgSHA512(uchar *psDataIn, int nInlen, uchar *psDataOut);$/;"	p	signature:(uchar *psDataIn, int nInlen, uchar *psDataOut)
NDK_AlgTDes	../env/NDK.h	/^int NDK_AlgTDes(uchar *psDataIn, uchar *psDataOut, uchar *psKey, int nKeyLen, int nMode);$/;"	p	signature:(uchar *psDataIn, uchar *psDataOut, uchar *psKey, int nKeyLen, int nMode)
NDK_AlgTDes	../inc/NDK-bak.h	/^int NDK_AlgTDes(uchar *psDataIn, uchar *psDataOut, uchar *psKey, int nKeyLen, int nMode);$/;"	p	signature:(uchar *psDataIn, uchar *psDataOut, uchar *psKey, int nKeyLen, int nMode)
NDK_AllTrim	../env/NDK.h	/^int NDK_AllTrim(uchar *pszBuf);$/;"	p	signature:(uchar *pszBuf)
NDK_AllTrim	../inc/NDK-bak.h	/^int NDK_AllTrim(uchar *pszBuf);$/;"	p	signature:(uchar *pszBuf)
NDK_AppDel	../env/NDK.h	/^int NDK_AppDel(const char *pszAppName);$/;"	p	signature:(const char *pszAppName)
NDK_AppDel	../inc/NDK-bak.h	/^int NDK_AppDel(const char *pszAppName);$/;"	p	signature:(const char *pszAppName)
NDK_AppDoEvent	../env/NDK.h	/^int NDK_AppDoEvent(const uchar *pszFileName,int nModuleId,const void *pvInEventMsg, int nInlen, void *pvOutEventMsg, int nMaxOutLen, int *pnOutLen);$/;"	p	signature:(const uchar *pszFileName,int nModuleId,const void *pvInEventMsg, int nInlen, void *pvOutEventMsg, int nMaxOutLen, int *pnOutLen)
NDK_AppDoEvent	../inc/NDK-bak.h	/^int NDK_AppDoEvent(const uchar *pszFileName,int nModuleId,const void *pvInEventMsg, int nInlen, void *pvOutEventMsg, int nMaxOutLen, int *pnOutLen);$/;"	p	signature:(const uchar *pszFileName,int nModuleId,const void *pvInEventMsg, int nInlen, void *pvOutEventMsg, int nMaxOutLen, int *pnOutLen)
NDK_AppEXECV	../env/NDK.h	/^int NDK_AppEXECV(const uchar *pszAppName, char * const psArgv[],char cBlock);$/;"	p	signature:(const uchar *pszAppName, char * const psArgv[],char cBlock)
NDK_AppEXECV	../inc/NDK-bak.h	/^int NDK_AppEXECV(const uchar *pszAppName, char * const argv[],char block);$/;"	p	signature:(const uchar *pszAppName, char * const argv[],char block)
NDK_AppGetInfo	../env/NDK.h	/^int NDK_AppGetInfo(const uchar *pszAppName, int nPos, ST_APPINFO *pstAppInfo, int nSizeofInfo);$/;"	p	signature:(const uchar *pszAppName, int nPos, ST_APPINFO *pstAppInfo, int nSizeofInfo)
NDK_AppGetInfo	../inc/NDK-bak.h	/^int NDK_AppGetInfo(const uchar *pszAppName, int nPos, ST_APPINFO *pstAppInfo, int nSizeofInfo);$/;"	p	signature:(const uchar *pszAppName, int nPos, ST_APPINFO *pstAppInfo, int nSizeofInfo)
NDK_AppGetReboot	../env/NDK.h	/^int NDK_AppGetReboot(int *pnRebootFlag);$/;"	p	signature:(int *pnRebootFlag)
NDK_AppGetReboot	../inc/NDK-bak.h	/^int NDK_AppGetReboot(int *pnRebootFlag);$/;"	p	signature:(int *pnRebootFlag)
NDK_AppLoad	../env/NDK.h	/^int NDK_AppLoad(const uchar *pszFileName, int nRebootFlag);$/;"	p	signature:(const uchar *pszFileName, int nRebootFlag)
NDK_AppLoad	../inc/NDK-bak.h	/^int NDK_AppLoad(const uchar *pszFilename, int nRebootFlag);$/;"	p	signature:(const uchar *pszFilename, int nRebootFlag)
NDK_AppRun	../env/NDK.h	/^int NDK_AppRun(const uchar *pszAppName);$/;"	p	signature:(const uchar *pszAppName)
NDK_AppRun	../inc/NDK-bak.h	/^int NDK_AppRun(const uchar *pszAppName);$/;"	p	signature:(const uchar *pszAppName)
NDK_AppSetEventCallBack	../env/NDK.h	/^int NDK_AppSetEventCallBack(CallbackMock NDK_EventMain);$/;"	p	signature:(CallbackMock NDK_EventMain)
NDK_AppSetEventCallBack	../inc/NDK-bak.h	/^int NDK_AppSetEventCallBack(CallbackMock NDK_EventMain);$/;"	p	signature:(CallbackMock NDK_EventMain)
NDK_AscToHex	../env/NDK.h	/^int NDK_AscToHex (const uchar* pszAsciiBuf, int nLen, uchar ucType, uchar* psBcdBuf);$/;"	p	signature:(const uchar* pszAsciiBuf, int nLen, uchar ucType, uchar* psBcdBuf)
NDK_AscToHex	../inc/NDK-bak.h	/^int NDK_AscToHex (const uchar* pszAsciiBuf, int nLen, uchar ucType, uchar* psBcdBuf);$/;"	p	signature:(const uchar* pszAsciiBuf, int nLen, uchar ucType, uchar* psBcdBuf)
NDK_BTEnterCommand	../env/NDK.h	/^int NDK_BTEnterCommand(void);$/;"	p	signature:(void)
NDK_BTExitCommand	../env/NDK.h	/^int NDK_BTExitCommand(void);$/;"	p	signature:(void)
NDK_BTGetLocalMAC	../env/NDK.h	/^int NDK_BTGetLocalMAC(char *pszMac);$/;"	p	signature:(char *pszMac)
NDK_BTGetLocalName	../env/NDK.h	/^int NDK_BTGetLocalName(char *pszName);$/;"	p	signature:(char *pszName)
NDK_BTGetPIN	../env/NDK.h	/^int NDK_BTGetPIN(char *pszPinCode);$/;"	p	signature:(char *pszPinCode)
NDK_BTReset	../env/NDK.h	/^int NDK_BTReset(void);$/;"	p	signature:(void)
NDK_BTSetLocalName	../env/NDK.h	/^int NDK_BTSetLocalName(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_BTSetPIN	../env/NDK.h	/^int NDK_BTSetPIN(const char *pszPinCode);$/;"	p	signature:(const char *pszPinCode)
NDK_BTStatus	../env/NDK.h	/^int NDK_BTStatus(int *pnStatus);$/;"	p	signature:(int *pnStatus)
NDK_BcdToByte	../env/NDK.h	/^int NDK_BcdToByte(uchar ucCh, int *pnNum);$/;"	p	signature:(uchar ucCh, int *pnNum)
NDK_BcdToByte	../inc/NDK-bak.h	/^int NDK_BcdToByte(uchar ch, int *pnNum);$/;"	p	signature:(uchar ch, int *pnNum)
NDK_BcdToInt	../env/NDK.h	/^int NDK_BcdToInt(const uchar * psBcd, int *nNum);$/;"	p	signature:(const uchar * psBcd, int *nNum)
NDK_BcdToInt	../inc/NDK-bak.h	/^int NDK_BcdToInt(const uchar * psBcd, int *nNum);$/;"	p	signature:(const uchar * psBcd, int *nNum)
NDK_ByteToBcd	../env/NDK.h	/^int NDK_ByteToBcd(int nNum, uchar *psCh);$/;"	p	signature:(int nNum, uchar *psCh)
NDK_ByteToBcd	../inc/NDK-bak.h	/^int NDK_ByteToBcd(int nNum, uchar *ch);$/;"	p	signature:(int nNum, uchar *ch)
NDK_C2ToInt	../env/NDK.h	/^int NDK_C2ToInt(uint *unNum, uchar *psBuf);$/;"	p	signature:(uint *unNum, uchar *psBuf)
NDK_C2ToInt	../inc/NDK-bak.h	/^int NDK_C2ToInt(uint *unNum, uchar *psBuf);$/;"	p	signature:(uint *unNum, uchar *psBuf)
NDK_C4ToInt	../env/NDK.h	/^int NDK_C4ToInt(uint* unNum, uchar* psBuf );$/;"	p	signature:(uint* unNum, uchar* psBuf )
NDK_C4ToInt	../inc/NDK-bak.h	/^int NDK_C4ToInt(uint* unNum, uchar* psBuf );$/;"	p	signature:(uint* unNum, uchar* psBuf )
NDK_CalcLRC	../env/NDK.h	/^int NDK_CalcLRC(const uchar *psBuf, int nLen, uchar *ucLRC);$/;"	p	signature:(const uchar *psBuf, int nLen, uchar *ucLRC)
NDK_CalcLRC	../inc/NDK-bak.h	/^int NDK_CalcLRC(const uchar *psBuf, int nLen, uchar *ucLRC);$/;"	p	signature:(const uchar *psBuf, int nLen, uchar *ucLRC)
NDK_CancelTimer	../env/NDK.h	/^void NDK_CancelTimer(NDK_HANDLE  pvHandle);$/;"	p	signature:(NDK_HANDLE pvHandle)
NDK_CancelTimer	../inc/NDK-bak.h	/^void NDK_CancelTimer(NDK_HANDLE  handle);$/;"	p	signature:(NDK_HANDLE handle)
NDK_CloseSSLSocket	../env/NDK.h	/^int NDK_CloseSSLSocket(NDK_HANDLE pvHandle);$/;"	p	signature:(NDK_HANDLE pvHandle)
NDK_CloseSSLSocket	../inc/NDK-bak.h	/^int NDK_CloseSSLSocket(NDK_HANDLE handle);$/;"	p	signature:(NDK_HANDLE handle)
NDK_CreateSemaphore	../env/NDK.h	/^int NDK_CreateSemaphore( NDK_HANDLE *ppvHandle );$/;"	p	signature:( NDK_HANDLE *ppvHandle )
NDK_CreateSemaphore	../inc/NDK-bak.h	/^int NDK_CreateSemaphore( NDK_HANDLE *handle );$/;"	p	signature:( NDK_HANDLE *handle )
NDK_CreateThread	../env/NDK.h	/^int NDK_CreateThread( NDK_HANDLE *ppvHandle, const char* psName, uint unStackSize,$/;"	p	signature:( NDK_HANDLE *ppvHandle, const char* psName, uint unStackSize, void (*pvEntryPoint)( void ) )
NDK_CreateThread	../inc/NDK-bak.h	/^int NDK_CreateThread( NDK_HANDLE *ppvHandle, const char* psName, uint unStackSize,$/;"	p	signature:( NDK_HANDLE *ppvHandle, const char* psName, uint unStackSize, void (*pvEntryPoint)( void ) )
NDK_DestroySemaphore	../env/NDK.h	/^int NDK_DestroySemaphore( NDK_HANDLE pvHandle );$/;"	p	signature:( NDK_HANDLE pvHandle )
NDK_DestroySemaphore	../inc/NDK-bak.h	/^int NDK_DestroySemaphore( NDK_HANDLE handle );$/;"	p	signature:( NDK_HANDLE handle )
NDK_DiskClose	../env/NDK.h	/^int NDK_DiskClose(EM_DISKTYPE emType);$/;"	p	signature:(EM_DISKTYPE emType)
NDK_DiskClose	../inc/NDK-bak.h	/^int NDK_DiskClose(EM_DISKTYPE emType);$/;"	p	signature:(EM_DISKTYPE emType)
NDK_DiskGetInfo	../env/NDK.h	/^int NDK_DiskGetInfo(char *pszDiskDir,ST_DISK_INFO  *pstInfo);$/;"	p	signature:(char *pszDiskDir,ST_DISK_INFO *pstInfo)
NDK_DiskGetInfo	../inc/NDK-bak.h	/^int NDK_DiskGetInfo(char *pszDiskDir,ST_DISK_INFO  *pstInfo);$/;"	p	signature:(char *pszDiskDir,ST_DISK_INFO *pstInfo)
NDK_DiskGetRootDirName	../env/NDK.h	/^int NDK_DiskGetRootDirName(EM_DISKTYPE emType,char **pszRdir);$/;"	p	signature:(EM_DISKTYPE emType,char **pszRdir)
NDK_DiskGetRootDirName	../inc/NDK-bak.h	/^int NDK_DiskGetRootDirName(EM_DISKTYPE emType,char **pszRdir);$/;"	p	signature:(EM_DISKTYPE emType,char **pszRdir)
NDK_DiskGetState	../env/NDK.h	/^int NDK_DiskGetState(EM_DISKTYPE emType,int *pnDiskState);$/;"	p	signature:(EM_DISKTYPE emType,int *pnDiskState)
NDK_DiskGetState	../inc/NDK-bak.h	/^int NDK_DiskGetState(EM_DISKTYPE emType,int *pnDiskState);$/;"	p	signature:(EM_DISKTYPE emType,int *pnDiskState)
NDK_DiskOpen	../env/NDK.h	/^int NDK_DiskOpen(EM_DISKTYPE emType,int nTimeOut);$/;"	p	signature:(EM_DISKTYPE emType,int nTimeOut)
NDK_DiskOpen	../inc/NDK-bak.h	/^int NDK_DiskOpen(EM_DISKTYPE emType,int nTimeOut);$/;"	p	signature:(EM_DISKTYPE emType,int nTimeOut)
NDK_ERR	../env/NDK.h	/^	NDK_ERR=-1,						\/**<操作失败*\/$/;"	e	enum:__anon1
NDK_ERR	../inc/NDK-bak.h	/^	NDK_ERR=-1,				\/**<operation failed*\/$/;"	e	enum:__anon88
NDK_ERR_ADDR_ILLEGAL	../inc/NDK-bak.h	/^	NDK_ERR_ADDR_ILLEGAL =-403, \/**<failed to obtain address format*\/$/;"	e	enum:__anon88
NDK_ERR_APP_BASE	../env/NDK.h	/^	NDK_ERR_APP_BASE=(-800),						\/**<应用接口错误基数*\/$/;"	e	enum:__anon1
NDK_ERR_APP_BASE	../inc/NDK-bak.h	/^	NDK_ERR_APP_BASE=(-800),							\/**<application interface error cardinality*\/$/;"	e	enum:__anon88
NDK_ERR_APP_CREAT_CHILD	../env/NDK.h	/^	NDK_ERR_APP_CREAT_CHILD=(NDK_ERR_APP_BASE-10),		\/**<创建子进程错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_CREAT_CHILD	../inc/NDK-bak.h	/^	NDK_ERR_APP_CREAT_CHILD=(NDK_ERR_APP_BASE-10),		\/**<error creating the child process*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FAIL_AUTH	../env/NDK.h	/^	NDK_ERR_APP_FAIL_AUTH=(NDK_ERR_APP_BASE-7),	  	\/**<证书认证失败*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FAIL_AUTH	../inc/NDK-bak.h	/^	NDK_ERR_APP_FAIL_AUTH=(NDK_ERR_APP_BASE-7),	  	\/**<Certificate authentication failure*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FAIL_SEC	../env/NDK.h	/^	NDK_ERR_APP_FAIL_SEC=(NDK_ERR_APP_BASE-3),	   	\/**<获取安全攻击状态失败*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FAIL_SEC	../inc/NDK-bak.h	/^	NDK_ERR_APP_FAIL_SEC=(NDK_ERR_APP_BASE-3),	   			\/**access to security attacks status failed**\/$/;"	e	enum:__anon88
NDK_ERR_APP_FILE_EXIST	../env/NDK.h	/^	NDK_ERR_APP_FILE_EXIST=(NDK_ERR_APP_BASE-5),	\/**<应用中该文件已存在*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FILE_EXIST	../inc/NDK-bak.h	/^	NDK_ERR_APP_FILE_EXIST=(NDK_ERR_APP_BASE-5),	\/**<Application of the file already exists*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FILE_NOT_EXIST	../env/NDK.h	/^	NDK_ERR_APP_FILE_NOT_EXIST=(NDK_ERR_APP_BASE-6),\/**<应用中该文件不存在*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FILE_NOT_EXIST	../inc/NDK-bak.h	/^	NDK_ERR_APP_FILE_NOT_EXIST=(NDK_ERR_APP_BASE-6),\/**<Application of the file does not exist*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FILE_OPEN	../env/NDK.h	/^	NDK_ERR_APP_FILE_OPEN=(NDK_ERR_APP_BASE-15),		\/**<文件打开错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FILE_OPEN	../inc/NDK-bak.h	/^	NDK_ERR_APP_FILE_OPEN=(NDK_ERR_APP_BASE-15),		\/**<error open file*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FILE_READ	../env/NDK.h	/^	NDK_ERR_APP_FILE_READ=(NDK_ERR_APP_BASE-12),		\/**<读文件错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FILE_READ	../inc/NDK-bak.h	/^	NDK_ERR_APP_FILE_READ=(NDK_ERR_APP_BASE-12),		\/**<error reading*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FILE_STAT	../env/NDK.h	/^	NDK_ERR_APP_FILE_STAT=(NDK_ERR_APP_BASE-14),		\/**<获取文件信息错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FILE_STAT	../inc/NDK-bak.h	/^	NDK_ERR_APP_FILE_STAT=(NDK_ERR_APP_BASE-14),		\/**<error get file information*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FILE_WRITE	../env/NDK.h	/^	NDK_ERR_APP_FILE_WRITE=(NDK_ERR_APP_BASE-13),		\/**<写文件错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FILE_WRITE	../inc/NDK-bak.h	/^	NDK_ERR_APP_FILE_WRITE=(NDK_ERR_APP_BASE-13),		\/**<error writing*\/$/;"	e	enum:__anon88
NDK_ERR_APP_FIRM_PATCH_VERSION	../env/NDK.h	/^	NDK_ERR_APP_FIRM_PATCH_VERSION=(NDK_ERR_APP_BASE-25),				\/**固件补丁增量包版本不匹配*\/$/;"	e	enum:__anon1
NDK_ERR_APP_FIRM_PATCH_VERSION	../inc/NDK-bak.h	/^	NDK_ERR_APP_FIRM_PATCH_VERSION=(NDK_ERR_APP_BASE-25),				\/**A firmware patch incremental package versions do not match*\/$/;"	e	enum:__anon88
NDK_ERR_APP_KEY_UPDATE_BAN	../env/NDK.h	/^	NDK_ERR_APP_KEY_UPDATE_BAN=(NDK_ERR_APP_BASE-24),				\/**<调试状态禁止密钥升级*\/$/;"	e	enum:__anon1
NDK_ERR_APP_KEY_UPDATE_BAN	../inc/NDK-bak.h	/^	NDK_ERR_APP_KEY_UPDATE_BAN=(NDK_ERR_APP_BASE-24),				\/**Debug state key update is prohibited*\/$/;"	e	enum:__anon88
NDK_ERR_APP_LOW_VERSION	../env/NDK.h	/^	NDK_ERR_APP_LOW_VERSION=(NDK_ERR_APP_BASE-8),	\/**<补丁包的版本比应用版本低*\/$/;"	e	enum:__anon1
NDK_ERR_APP_LOW_VERSION	../inc/NDK-bak.h	/^	NDK_ERR_APP_LOW_VERSION=(NDK_ERR_APP_BASE-8),	\/**<Fix pack version lower than the application version*\/$/;"	e	enum:__anon88
NDK_ERR_APP_MALLOC	../env/NDK.h	/^	NDK_ERR_APP_MALLOC=(NDK_ERR_APP_BASE-19),			\/**<动态内存分配错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_MALLOC	../inc/NDK-bak.h	/^	NDK_ERR_APP_MALLOC=(NDK_ERR_APP_BASE-19),			\/**<error in dynamic memory allocation*\/$/;"	e	enum:__anon88
NDK_ERR_APP_MAX_CHILD	../env/NDK.h	/^	NDK_ERR_APP_MAX_CHILD=(NDK_ERR_APP_BASE-9),			\/**<子应用运行数超过最大运行数目*\/$/;"	e	enum:__anon1
NDK_ERR_APP_MAX_CHILD	../inc/NDK-bak.h	/^	NDK_ERR_APP_MAX_CHILD=(NDK_ERR_APP_BASE-9),			\/**<application running more than maximum number*\/$/;"	e	enum:__anon88
NDK_ERR_APP_MMAP	../env/NDK.h	/^	NDK_ERR_APP_MMAP=(NDK_ERR_APP_BASE-18),				\/**<内存映射错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_MMAP	../inc/NDK-bak.h	/^	NDK_ERR_APP_MMAP=(NDK_ERR_APP_BASE-18),				\/**<error memory mapping*\/$/;"	e	enum:__anon88
NDK_ERR_APP_MUNMAP	../env/NDK.h	/^	NDK_ERR_APP_MUNMAP=(NDK_ERR_APP_BASE-22),			\/**<内存映射释放错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_MUNMAP	../inc/NDK-bak.h	/^	NDK_ERR_APP_MUNMAP=(NDK_ERR_APP_BASE-22),			\/**<memory mapping error release*\/$/;"	e	enum:__anon88
NDK_ERR_APP_NLD_HEAD_LEN	../env/NDK.h	/^	NDK_ERR_APP_NLD_HEAD_LEN=(NDK_ERR_APP_BASE-16),		\/**<NLD文件获取头信息长度错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_NLD_HEAD_LEN	../inc/NDK-bak.h	/^	NDK_ERR_APP_NLD_HEAD_LEN=(NDK_ERR_APP_BASE-16),		\/**<error NLD length of the file header information *\/$/;"	e	enum:__anon88
NDK_ERR_APP_NOT_EXIST	../env/NDK.h	/^	NDK_ERR_APP_NOT_EXIST=(NDK_ERR_APP_BASE-1),		\/**<应用项不存在*\/$/;"	e	enum:__anon1
NDK_ERR_APP_NOT_EXIST	../inc/NDK-bak.h	/^	NDK_ERR_APP_NOT_EXIST=(NDK_ERR_APP_BASE-1),			\/**<application item does not exist*\/$/;"	e	enum:__anon88
NDK_ERR_APP_NOT_MATCH	../env/NDK.h	/^	NDK_ERR_APP_NOT_MATCH=(NDK_ERR_APP_BASE-2),	    \/**<补丁包文件不匹配*\/$/;"	e	enum:__anon1
NDK_ERR_APP_NOT_MATCH	../inc/NDK-bak.h	/^	NDK_ERR_APP_NOT_MATCH=(NDK_ERR_APP_BASE-2),	   \/**fix pack file does not match**\/$/;"	e	enum:__anon88
NDK_ERR_APP_PUBKEY_EXPIRED	../env/NDK.h	/^	NDK_ERR_APP_PUBKEY_EXPIRED=(NDK_ERR_APP_BASE-17),	\/**<公钥有效期*\/$/;"	e	enum:__anon1
NDK_ERR_APP_PUBKEY_EXPIRED	../inc/NDK-bak.h	/^	NDK_ERR_APP_PUBKEY_EXPIRED=(NDK_ERR_APP_BASE-17),	\/**<the validity of the public*\/$/;"	e	enum:__anon88
NDK_ERR_APP_SEC_ATT	../env/NDK.h	/^	NDK_ERR_APP_SEC_ATT=(NDK_ERR_APP_BASE-4),	  	\/**<存在安全攻击*\/$/;"	e	enum:__anon1
NDK_ERR_APP_SEC_ATT	../inc/NDK-bak.h	/^	NDK_ERR_APP_SEC_ATT=(NDK_ERR_APP_BASE-4),	  	 		\/**there are security attacks**\/$/;"	e	enum:__anon88
NDK_ERR_APP_SIGN_CHECK	../env/NDK.h	/^	NDK_ERR_APP_SIGN_CHECK=(NDK_ERR_APP_BASE-21),		\/**<签名数据校验错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_SIGN_CHECK	../inc/NDK-bak.h	/^	NDK_ERR_APP_SIGN_CHECK=(NDK_ERR_APP_BASE-21),		\/**<signature data validation errors*\/$/;"	e	enum:__anon88
NDK_ERR_APP_SIGN_DECRYPT	../env/NDK.h	/^	NDK_ERR_APP_SIGN_DECRYPT=(NDK_ERR_APP_BASE-20),		\/**<签名数据解签错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_SIGN_DECRYPT	../inc/NDK-bak.h	/^	NDK_ERR_APP_SIGN_DECRYPT=(NDK_ERR_APP_BASE-20),		\/**<signature sign error data solution*\/$/;"	e	enum:__anon88
NDK_ERR_APP_TAR	../env/NDK.h	/^	NDK_ERR_APP_TAR=(NDK_ERR_APP_BASE-23),				\/**<tar命令执行失败*\/$/;"	e	enum:__anon1
NDK_ERR_APP_TAR	../inc/NDK-bak.h	/^	NDK_ERR_APP_TAR=(NDK_ERR_APP_BASE-23),				\/**<tar failed to perform commands*\/$/;"	e	enum:__anon88
NDK_ERR_APP_WAIT_CHILD	../env/NDK.h	/^	NDK_ERR_APP_WAIT_CHILD=(NDK_ERR_APP_BASE-11),		\/**<等待子进程结束错误*\/$/;"	e	enum:__anon1
NDK_ERR_APP_WAIT_CHILD	../inc/NDK-bak.h	/^	NDK_ERR_APP_WAIT_CHILD=(NDK_ERR_APP_BASE-11),		\/**<wait for the child over mistakes*\/$/;"	e	enum:__anon88
NDK_ERR_CREAT_WIDGET	../env/NDK.h	/^	NDK_ERR_CREAT_WIDGET = -3,		\/**<创建界面错误*\/$/;"	e	enum:__anon1
NDK_ERR_CREAT_WIDGET	../inc/NDK-bak.h	/^	NDK_ERR_CREAT_WIDGET = -3,	\/**<error creating interface *\/$/;"	e	enum:__anon88
NDK_ERR_DECODE_IMAGE	../env/NDK.h	/^	NDK_ERR_DECODE_IMAGE = -8,		\/**<图像解码失败*\/$/;"	e	enum:__anon1
NDK_ERR_DECODE_IMAGE	../inc/NDK-bak.h	/^	NDK_ERR_DECODE_IMAGE = -8,	\/**<failed to decode image *\/$/;"	e	enum:__anon88
NDK_ERR_EMPTY	../env/NDK.h	/^	NDK_ERR_EMPTY = -205,			\/**<返回空串*\/$/;"	e	enum:__anon1
NDK_ERR_EMPTY	../inc/NDK-bak.h	/^	NDK_ERR_EMPTY = -205,			\/**<empty string returned*\/$/;"	e	enum:__anon88
NDK_ERR_GET_GATEWAY	../inc/NDK-bak.h	/^	NDK_ERR_GET_GATEWAY = -402,	\/**<failed to obtain gateway address *\/$/;"	e	enum:__anon88
NDK_ERR_GET_NETADDR	../inc/NDK-bak.h	/^	NDK_ERR_GET_NETADDR = -401, \/**<failed to obtain local address or subnet mask *\/$/;"	e	enum:__anon88
NDK_ERR_ICC_CARDNOREADY_ERR	../env/NDK.h	/^	NDK_ERR_ICC_CARDNOREADY_ERR=	-606,	\/**<卡未准备好*\/$/;"	e	enum:__anon1
NDK_ERR_ICC_CARDNOREADY_ERR	../inc/NDK-bak.h	/^	NDK_ERR_ICC_CARDNOREADY_ERR=	-606,	\/**<card not ready*\/$/;"	e	enum:__anon88
NDK_ERR_ICC_CARDPULL_ERR	../env/NDK.h	/^	NDK_ERR_ICC_CARDPULL_ERR=		-605,	\/**<卡拔出了*\/$/;"	e	enum:__anon1
NDK_ERR_ICC_CARDPULL_ERR	../inc/NDK-bak.h	/^	NDK_ERR_ICC_CARDPULL_ERR=		-605,	\/**<card pulled out*\/$/;"	e	enum:__anon88
NDK_ERR_ICC_COM_ERR	../env/NDK.h	/^	NDK_ERR_ICC_COM_ERR=			-604,	\/**<命令出错*\/$/;"	e	enum:__anon1
NDK_ERR_ICC_COM_ERR	../inc/NDK-bak.h	/^	NDK_ERR_ICC_COM_ERR=			-604,	\/**<command error*\/$/;"	e	enum:__anon88
NDK_ERR_ICC_COPYERR	../env/NDK.h	/^	NDK_ERR_ICC_COPYERR=			-602,	\/**<内核数据拷贝出错*\/$/;"	e	enum:__anon1
NDK_ERR_ICC_COPYERR	../inc/NDK-bak.h	/^	NDK_ERR_ICC_COPYERR=			-602,	\/**<failed to copy kernel data*\/$/;"	e	enum:__anon88
NDK_ERR_ICC_POWERON_ERR	../env/NDK.h	/^	NDK_ERR_ICC_POWERON_ERR=		-603,	\/**<上电出错*\/$/;"	e	enum:__anon1
NDK_ERR_ICC_POWERON_ERR	../inc/NDK-bak.h	/^	NDK_ERR_ICC_POWERON_ERR=		-603,	\/**<powerup error*\/$/;"	e	enum:__anon88
NDK_ERR_ICC_WRITE_ERR	../env/NDK.h	/^	NDK_ERR_ICC_WRITE_ERR =			-601,	\/**<写器件83c26出错*\/$/;"	e	enum:__anon1
NDK_ERR_ICC_WRITE_ERR	../inc/NDK-bak.h	/^	NDK_ERR_ICC_WRITE_ERR =			-601,	\/**<error writing device 83c26*\/$/;"	e	enum:__anon88
NDK_ERR_INIT_CONFIG	../env/NDK.h	/^	NDK_ERR_INIT_CONFIG = -2,	 	\/**<初始化配置失败*\/$/;"	e	enum:__anon1
NDK_ERR_INIT_CONFIG	../inc/NDK-bak.h	/^	NDK_ERR_INIT_CONFIG = -2,	 \/**<failed to initialize configuration*\/$/;"	e	enum:__anon88
NDK_ERR_IOCTL	../env/NDK.h	/^	NDK_ERR_IOCTL = -5,				\/**<驱动调用错误*\/$/;"	e	enum:__anon1
NDK_ERR_IOCTL	../inc/NDK-bak.h	/^	NDK_ERR_IOCTL = -5,	\/**<error calling driver *\/$/;"	e	enum:__anon88
NDK_ERR_LINUX_ERRNO_BASE	../env/NDK.h	/^	NDK_ERR_LINUX_ERRNO_BASE=		-5000, \/**<<LINUX>系统函数返回ERROR错误前缀*\/$/;"	e	enum:__anon1
NDK_ERR_LINUX_ERRNO_BASE	../inc/NDK-bak.h	/^	NDK_ERR_LINUX_ERRNO_BASE=		-5000, \/**<<LINUX>System function returns the ERROR ERROR prefix*\/$/;"	e	enum:__anon88
NDK_ERR_LINUX_TCP_NOT_OPEN	../env/NDK.h	/^	NDK_ERR_LINUX_TCP_NOT_OPEN=		 (NDK_ERR_LINUX_ERRNO_BASE-88),\/**<TCP句柄未打开错误*\/$/;"	e	enum:__anon1
NDK_ERR_LINUX_TCP_REFUSE	../env/NDK.h	/^	NDK_ERR_LINUX_TCP_REFUSE=  (NDK_ERR_LINUX_ERRNO_BASE-111),\/**<TCP远程端口被拒绝*\/$/;"	e	enum:__anon1
NDK_ERR_LINUX_TCP_TIMEOUT	../env/NDK.h	/^	NDK_ERR_LINUX_TCP_TIMEOUT=  (NDK_ERR_LINUX_ERRNO_BASE-110),\/**<TCP远程端口错误*\/$/;"	e	enum:__anon1
NDK_ERR_MACLLOC	../env/NDK.h	/^	NDK_ERR_MACLLOC = -9,			\/**<内存空间不足*\/$/;"	e	enum:__anon1
NDK_ERR_MACLLOC	../inc/NDK-bak.h	/^	NDK_ERR_MACLLOC=-9,			\/*out of memory*\/$/;"	e	enum:__anon88
NDK_ERR_MI_ACCESSTIMEOUT	../env/NDK.h	/^	NDK_ERR_MI_ACCESSTIMEOUT=       -2050,  \/**<非接触卡-接收超时			0xe5*\/$/;"	e	enum:__anon1
NDK_ERR_MI_ACCESSTIMEOUT	../inc/NDK-bak.h	/^	NDK_ERR_MI_ACCESSTIMEOUT=       -2050,  \/**<contactless card - receive timeout			0xe5*\/$/;"	e	enum:__anon88
NDK_ERR_MI_AUTHERR	../env/NDK.h	/^	NDK_ERR_MI_AUTHERR=				-2033,  \/**<非接触卡-认证错,			0xfc*\/$/;"	e	enum:__anon1
NDK_ERR_MI_AUTHERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_AUTHERR=				-2033,  \/**<contactless card - authentication error,			0xfc*\/$/;"	e	enum:__anon88
NDK_ERR_MI_BITCOUNTERR	../env/NDK.h	/^	NDK_ERR_MI_BITCOUNTERR=         -2039,  \/**<非接触卡-接收BIT错			0xf5*\/$/;"	e	enum:__anon1
NDK_ERR_MI_BITCOUNTERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_BITCOUNTERR=         -2039,  \/**<contactless card - error receiving BIT 			0xf5*\/$/;"	e	enum:__anon88
NDK_ERR_MI_BYTECOUNTERR	../env/NDK.h	/^	NDK_ERR_MI_BYTECOUNTERR=        -2040,  \/**<非接触卡-接收字节错			0xf4*\/$/;"	e	enum:__anon1
NDK_ERR_MI_BYTECOUNTERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_BYTECOUNTERR=        -2040,  \/**<contactless card - error receiving byte			0xf4*\/$/;"	e	enum:__anon88
NDK_ERR_MI_CODEERR	../env/NDK.h	/^	NDK_ERR_MI_CODEERR=				-2035,  \/**<非接触卡-接收代码错			0xfa*\/$/;"	e	enum:__anon1
NDK_ERR_MI_CODEERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_CODEERR=				-2035,  \/**<contactless card - error receiving code			0xfa*\/$/;"	e	enum:__anon88
NDK_ERR_MI_COLLERR	../env/NDK.h	/^	NDK_ERR_MI_COLLERR=             -2048,  \/**<非接触卡-冲突				0xe8*\/$/;"	e	enum:__anon1
NDK_ERR_MI_COLLERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_COLLERR=             -2048,  \/**<contactless card - collision				0xe8*\/$/;"	e	enum:__anon88
NDK_ERR_MI_CRCERR	../env/NDK.h	/^	NDK_ERR_MI_CRCERR=				-2031,  \/**<非接触卡-CRC错,				0xfe*\/$/;"	e	enum:__anon1
NDK_ERR_MI_CRCERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_CRCERR=				-2031,  \/**<contactless card - CRC error,				0xfe*\/$/;"	e	enum:__anon88
NDK_ERR_MI_CardTypeErr	../env/NDK.h	/^	NDK_ERR_MI_CardTypeErr=			-2056,  \/**<非接触卡-卡类型错			0x83*\/$/;"	e	enum:__anon1
NDK_ERR_MI_CardTypeErr	../inc/NDK-bak.h	/^	NDK_ERR_MI_CardTypeErr=			-2056,  \/**<contactless card - card type error			0x83*\/$/;"	e	enum:__anon88
NDK_ERR_MI_DECRERR	../env/NDK.h	/^	NDK_ERR_MI_DECRERR=             -2045,  \/**<非接触卡-减量操作错误		0xef*\/$/;"	e	enum:__anon1
NDK_ERR_MI_DECRERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_DECRERR=             -2045,  \/**<contactless card - error decrementing		0xef*\/$/;"	e	enum:__anon88
NDK_ERR_MI_EMPTY	../env/NDK.h	/^	NDK_ERR_MI_EMPTY=				-2032,  \/**<非接触卡-非空,				0xfd*\/$/;"	e	enum:__anon1
NDK_ERR_MI_EMPTY	../inc/NDK-bak.h	/^	NDK_ERR_MI_EMPTY=				-2032,  \/**<contactless card - not empty,				0xfd*\/$/;"	e	enum:__anon88
NDK_ERR_MI_FRAMINGERR	../env/NDK.h	/^	NDK_ERR_MI_FRAMINGERR=          -2047,  \/**<非接触卡-帧错				0xeb*\/$/;"	e	enum:__anon1
NDK_ERR_MI_FRAMINGERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_FRAMINGERR=          -2047,  \/**<contactless card - frame error				0xeb*\/$/;"	e	enum:__anon88
NDK_ERR_MI_INCRERR	../env/NDK.h	/^	NDK_ERR_MI_INCRERR=				-2044,  \/**<非接触卡-增量操作错误		0xf0*\/$/;"	e	enum:__anon1
NDK_ERR_MI_INCRERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_INCRERR=				-2044,  \/**<contactless card - error incrementing		0xf0*\/$/;"	e	enum:__anon88
NDK_ERR_MI_INTERFACEERR	../env/NDK.h	/^	NDK_ERR_MI_INTERFACEERR=        -2049,  \/**<非接触卡-复位接口读写错		0xe6*\/$/;"	e	enum:__anon1
NDK_ERR_MI_INTERFACEERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_INTERFACEERR=        -2049,  \/**<contactless card - reset interface read & write error		0xe6*\/$/;"	e	enum:__anon88
NDK_ERR_MI_KEYERR	../env/NDK.h	/^	NDK_ERR_MI_KEYERR=              -2037,  \/**<非接触卡-认证KEY错			0xf7*\/$/;"	e	enum:__anon1
NDK_ERR_MI_KEYERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_KEYERR=              -2037,  \/**<contactless card - KEY authentication error			0xf7*\/$/;"	e	enum:__anon88
NDK_ERR_MI_NOTAGERR	../env/NDK.h	/^	NDK_ERR_MI_NOTAGERR=			-2030,  \/**<非接触卡-无卡,				0xff*\/$/;"	e	enum:__anon1
NDK_ERR_MI_NOTAGERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_NOTAGERR=			-2030,  \/**<contactless card - no card,				0xff*\/$/;"	e	enum:__anon88
NDK_ERR_MI_NOTAUTHERR	../env/NDK.h	/^	NDK_ERR_MI_NOTAUTHERR=          -2038,  \/**<非接触卡-未认证				0xf6*\/$/;"	e	enum:__anon1
NDK_ERR_MI_NOTAUTHERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_NOTAUTHERR=          -2038,  \/**<contactless card - unauthenticated				0xf6*\/$/;"	e	enum:__anon88
NDK_ERR_MI_NY_IMPLEMENTED	../env/NDK.h	/^	NDK_ERR_MI_NY_IMPLEMENTED=		-2055,  \/**<非接触卡-无法确认的错误状态	0x9c*\/$/;"	e	enum:__anon1
NDK_ERR_MI_NY_IMPLEMENTED	../inc/NDK-bak.h	/^	NDK_ERR_MI_NY_IMPLEMENTED=		-2055,  \/**<contactless card - unidentified error state	0x9c*\/$/;"	e	enum:__anon88
NDK_ERR_MI_OVFLERR	../env/NDK.h	/^	NDK_ERR_MI_OVFLERR=             -2046,  \/**<非接触卡-溢出错误			0xed*\/$/;"	e	enum:__anon1
NDK_ERR_MI_OVFLERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_OVFLERR=             -2046,  \/**<contactless card - overflow error			0xed*\/$/;"	e	enum:__anon88
NDK_ERR_MI_PARITYERR	../env/NDK.h	/^	NDK_ERR_MI_PARITYERR=			-2034,  \/**<非接触卡-奇偶错,			0xfb*\/$/;"	e	enum:__anon1
NDK_ERR_MI_PARITYERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_PARITYERR=			-2034,  \/**<contactless card - parity error,			0xfb*\/$/;"	e	enum:__anon88
NDK_ERR_MI_PPSErr	../env/NDK.h	/^	NDK_ERR_MI_PPSErr=				-2053,  \/**<非接触卡-PPS操作错			0xe1*\/$/;"	e	enum:__anon1
NDK_ERR_MI_PPSErr	../inc/NDK-bak.h	/^	NDK_ERR_MI_PPSErr=				-2053,  \/**<contactless card - error in PPS operation			0xe1*\/$/;"	e	enum:__anon88
NDK_ERR_MI_PROTOCOLERR	../env/NDK.h	/^	NDK_ERR_MI_PROTOCOLERR=			-2051,  \/**<非接触卡-协议错				0xe4*\/$/;"	e	enum:__anon1
NDK_ERR_MI_PROTOCOLERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_PROTOCOLERR=			-2051,  \/**<contactless card - protocol error				0xe4*\/$/;"	e	enum:__anon88
NDK_ERR_MI_Para	../env/NDK.h	/^	NDK_ERR_MI_Para=				-2059,  \/**<非接触卡-内部参数错			0xa9*\/$/;"	e	enum:__anon1
NDK_ERR_MI_Para	../inc/NDK-bak.h	/^	NDK_ERR_MI_Para=				-2059,  \/**<contactless card - internal parameter error			0xa9*\/$/;"	e	enum:__anon88
NDK_ERR_MI_ParaErrInIoctl	../env/NDK.h	/^	NDK_ERR_MI_ParaErrInIoctl=		-2057,  \/**<非接触卡-IOCTL参数错		0x82*\/$/;"	e	enum:__anon1
NDK_ERR_MI_ParaErrInIoctl	../inc/NDK-bak.h	/^	NDK_ERR_MI_ParaErrInIoctl=		-2057,  \/**<contactless card - IOCTL parameter	error	0x82*\/$/;"	e	enum:__anon88
NDK_ERR_MI_QUIT	../env/NDK.h	/^	NDK_ERR_MI_QUIT=                -2052,  \/**<非接触卡-异常终止			0xe2*\/$/;"	e	enum:__anon1
NDK_ERR_MI_QUIT	../inc/NDK-bak.h	/^	NDK_ERR_MI_QUIT=                -2052,  \/**<contactless card - abnormal abortion 			0xe2*\/$/;"	e	enum:__anon88
NDK_ERR_MI_SERNRERR	../env/NDK.h	/^	NDK_ERR_MI_SERNRERR=            -2036,  \/**<非接触卡-防冲突数据校验错	0xf8*\/$/;"	e	enum:__anon1
NDK_ERR_MI_SERNRERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_SERNRERR=            -2036,  \/**<contactless card - error in anti-collision data check	0xf8*\/$/;"	e	enum:__anon88
NDK_ERR_MI_SpiRequest	../env/NDK.h	/^	NDK_ERR_MI_SpiRequest=			-2054,  \/**<非接触卡-申请SPI失败		0xa0*\/$/;"	e	enum:__anon1
NDK_ERR_MI_SpiRequest	../inc/NDK-bak.h	/^	NDK_ERR_MI_SpiRequest=			-2054,  \/**<contactless card - error applying SPI		0xa0*\/$/;"	e	enum:__anon88
NDK_ERR_MI_TRANSERR	../env/NDK.h	/^	NDK_ERR_MI_TRANSERR=            -2042,  \/**<非接触卡-传送操作错误		0xf2*\/$/;"	e	enum:__anon1
NDK_ERR_MI_TRANSERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_TRANSERR=            -2042,  \/**<contactless card - error sending		0xf2*\/$/;"	e	enum:__anon88
NDK_ERR_MI_WRITEERR	../env/NDK.h	/^	NDK_ERR_MI_WRITEERR=            -2043,  \/**<非接触卡-写操作错误			0xf1*\/$/;"	e	enum:__anon1
NDK_ERR_MI_WRITEERR	../inc/NDK-bak.h	/^	NDK_ERR_MI_WRITEERR=            -2043,  \/**<contactless card - error writing			0xf1*\/$/;"	e	enum:__anon88
NDK_ERR_MI_WriteFifo	../env/NDK.h	/^	NDK_ERR_MI_WriteFifo=           -2041,  \/**<非接触卡-FIFO写错误			0xf3*\/$/;"	e	enum:__anon1
NDK_ERR_MI_WriteFifo	../inc/NDK-bak.h	/^	NDK_ERR_MI_WriteFifo=           -2041,  \/**<contactless card - error writing FIFO			0xf3*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_ASYNCLRBUFFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_ASYNCLRBUFFAIL = -512,	\/**<MODEM 异步清缓冲失败*\/	$/;"	e	enum:__anon1
NDK_ERR_MODEM_ASYNCLRBUFFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_ASYNCLRBUFFAIL=-513,	\/**<MODEM failed to async clear buffer*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_ASYNDIALFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_ASYNDIALFAIL = -510,		\/**<MODEM 异步拨号失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_ASYNHANGUPFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_ASYNHANGUPFAIL = -513,	\/**<MODEM 异步挂断失败*\/		$/;"	e	enum:__anon1
NDK_ERR_MODEM_ASYNHANGUPFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_ASYNHANGUPFAIL=-511,	\/**<MODEM async hangup failure*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_ASYNINITFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_ASYNINITFAIL = -509,		\/**<MODEM 异步初始化失败*\/	$/;"	e	enum:__anon1
NDK_ERR_MODEM_ASYNWRITEFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_ASYNWRITEFAIL = -511,		\/**<MODEM 异步写数据失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_ATCOMMANDERR	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_ATCOMMANDERR=-527,\/**<MODEM AT command error *\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_ATCOMNORESPONSE	../env/NDK.h	/^	NDK_ERR_MODEM_ATCOMNORESPONSE = -514, 	\/**<MODEM AT命令无响应*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_ATCOMNORESPONSE	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_ATCOMNORESPONSE=-514,\/**<MODEM AT command no response*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_CLRBUFFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_CLRBUFFAIL=-526,\/**<MODEM empty buffer failure*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_GETBUFFLENFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_GETBUFFLENFAIL = -519,	\/**<MODEM获取数据长度失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_GETSTATUSFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_GETSTATUSFAIL = -514,		\/**<MODEM 获取状态失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_GETVERFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_GETVERFAIL = -518,		\/**<MODEM获取版本失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_INIT_NOT	../env/NDK.h	/^	NDK_ERR_MODEM_INIT_NOT = -501,			\/**<MODEM 未进行初始化*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_INIT_NOT	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_INIT_NOT=-505, \/**<MODEM not initialized*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_NOCARRIER	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_NOCARRIER=-521,\/**<MODEM no carrier*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_NOLINE	../env/NDK.h	/^	NDK_ERR_MODEM_NOLINE = -516,			\/**<MODEM 未插线*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_NOLINE	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_NOLINE=-523,\/**not plug wire*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_NOPREDIAL	../env/NDK.h	/^	NDK_ERR_MODEM_NOPREDIAL = -520,			\/**<MODEM 未拨号*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_NOPREDIAL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_NOPREDIAL=-520,\/**<MODEM not dial*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_OTHERMACHINE	../env/NDK.h	/^	NDK_ERR_MODEM_OTHERMACHINE = -517,		\/**<MODEM 存在并机*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_OTHERMACHINE	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_OTHERMACHINE=-524,\/**there is the weaver*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_PORTREADFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_PORTREADFAIL=-525,\/**<MODEM port to read data failed*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_PORTWRITEFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_PORTWRITEFAIL=-515,\/**<MODEM port to write data failed*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_QUIT	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_QUIT=-519,\/**<MODEM hand out*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_RESETFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_RESETFAIL = -502,			\/**<MODEM 复位失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_SDLCCLRBUFFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_SDLCCLRBUFFAIL=-507,		\/**<MODEM 同步清缓冲失败*\/		$/;"	e	enum:__anon1
NDK_ERR_MODEM_SDLCCLRBUFFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_SDLCCLRBUFFAIL=-512,	\/**<MODEM failed to sync clear buffer*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_SDLCDIALFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_SDLCDIALFAIL = -505,		\/**<MODEM 同步拨号失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_SDLCHANGUPFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_SDLCHANGUPFAIL = -508,	\/**<MODEM 同步挂断失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_SDLCHANGUPFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_SDLCHANGUPFAIL =-510,	\/**<MODEM sync hangup failure*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_SDLCINITFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_SDLCINITFAIL = -504,		\/**<MODEM 同步初始化失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_SDLCWRITEFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_SDLCWRITEFAIL = -506,		\/**<MODEM 同步写数据冲失败*\/	$/;"	e	enum:__anon1
NDK_ERR_MODEM_SDLCWRITEFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_SDLCWRITEFAIL=-506,	\/**<MODEM sync write failure*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_SETCHIPFAIL	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_SETCHIPFAIL=-516,\/**<MODEM set register setting failed*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_SLEPPFAIL	../env/NDK.h	/^	NDK_ERR_MODEM_SLEPPFAIL = -503,			\/**<MODEM 休眠失败*\/$/;"	e	enum:__anon1
NDK_ERR_MODEM_STARTSDLCTASK	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_STARTSDLCTASK=-517,\/**<MODEM dialing on SDLC tasks fail*\/$/;"	e	enum:__anon88
NDK_ERR_MODEM_STATUSUNDEFINE	../inc/NDK-bak.h	/^	NDK_ERR_MODEM_STATUSUNDEFINE=-528,\/**<MODEM unrecognized state*\/$/;"	e	enum:__anon88
NDK_ERR_NET_ADDRILLEGAL	../env/NDK.h	/^	NDK_ERR_NET_ADDRILLEGAL =-403,		\/**<获取地址格式错误*\/	$/;"	e	enum:__anon1
NDK_ERR_NET_GATEWAY	../env/NDK.h	/^	NDK_ERR_NET_GATEWAY = -402,			\/**<获取网关地址失败*\/$/;"	e	enum:__anon1
NDK_ERR_NET_GETADDR	../env/NDK.h	/^	NDK_ERR_NET_GETADDR = -401,			\/**<获取本地地址或子网掩码失败*\/$/;"	e	enum:__anon1
NDK_ERR_NET_INVALIDIPSTR	../env/NDK.h	/^	NDK_ERR_NET_INVALIDIPSTR=-405,		\/**<无效的IP字符串*\/$/;"	e	enum:__anon1
NDK_ERR_NET_UNKNOWN_COMMTYPE	../env/NDK.h	/^	NDK_ERR_NET_UNKNOWN_COMMTYPE=-404,	\/**<未知的通信类型*\/	$/;"	e	enum:__anon1
NDK_ERR_NET_UNSUPPORT_COMMTYPE	../env/NDK.h	/^	NDK_ERR_NET_UNSUPPORT_COMMTYPE=-406,	\/**<不支持的通信类型*\/$/;"	e	enum:__anon1
NDK_ERR_NOSWIPED	../env/NDK.h	/^	NDK_ERR_NOSWIPED = -50,			\/**<无磁卡刷卡记录*\/$/;"	e	enum:__anon1
NDK_ERR_NOSWIPED	../inc/NDK-bak.h	/^	NDK_ERR_NOSWIPED = -50,	\/**<no magnetic card swiping record*\/$/;"	e	enum:__anon88
NDK_ERR_NOT_SUPPORT	../env/NDK.h	/^	NDK_ERR_NOT_SUPPORT=-18, 		\/**<不支持该功能*\/$/;"	e	enum:__anon1
NDK_ERR_NOT_SUPPORT	../inc/NDK-bak.h	/^	NDK_ERR_NOT_SUPPORT=-18, \/**<Does not support this feature*\/$/;"	e	enum:__anon88
NDK_ERR_NO_DEVICES	../env/NDK.h	/^	NDK_ERR_NO_DEVICES=-17,			\/**<POS无该设备*\/$/;"	e	enum:__anon1
NDK_ERR_NO_DEVICES	../inc/NDK-bak.h	/^	NDK_ERR_NO_DEVICES=-17,	\/**<POS Without this equipment*\/$/;"	e	enum:__anon88
NDK_ERR_NO_SIMCARD	../env/NDK.h	/^	NDK_ERR_NO_SIMCARD = -201,		\/**<无SIM卡*\/$/;"	e	enum:__anon1
NDK_ERR_NO_SIMCARD	../inc/NDK-bak.h	/^	NDK_ERR_NO_SIMCARD = -201,	\/**<no SIM card*\/$/;"	e	enum:__anon88
NDK_ERR_OPEN_DEV	../env/NDK.h	/^	NDK_ERR_OPEN_DEV = -4,			\/**<打开设备文件错误*\/$/;"	e	enum:__anon1
NDK_ERR_OPEN_DEV	../inc/NDK-bak.h	/^	NDK_ERR_OPEN_DEV = -4,\/**<error opening device file *\/$/;"	e	enum:__anon88
NDK_ERR_OVERFLOW	../env/NDK.h	/^	NDK_ERR_OVERFLOW = -15,			\/**<缓冲溢出*\/$/;"	e	enum:__anon1
NDK_ERR_OVERFLOW	../inc/NDK-bak.h	/^	NDK_ERR_OVERFLOW = -15,		\/**<buffer overflow*\/$/;"	e	enum:__anon88
NDK_ERR_PARA	../env/NDK.h	/^	NDK_ERR_PARA = -6,				\/**<参数非法*\/$/;"	e	enum:__anon1
NDK_ERR_PARA	../inc/NDK-bak.h	/^	NDK_ERR_PARA = -6,	\/**<illegal parameter*\/$/;"	e	enum:__anon88
NDK_ERR_PATH	../env/NDK.h	/^	NDK_ERR_PATH = -7,				\/**<文件路径非法*\/$/;"	e	enum:__anon1
NDK_ERR_PATH	../inc/NDK-bak.h	/^	NDK_ERR_PATH = -7,	\/**<illegal file path*\/$/;"	e	enum:__anon88
NDK_ERR_PIN	../env/NDK.h	/^	NDK_ERR_PIN = -202, 			\/**<SIM卡密码错误*\/$/;"	e	enum:__anon1
NDK_ERR_PIN	../inc/NDK-bak.h	/^	NDK_ERR_PIN = -202, \/**<incorrect SIM card password*\/$/;"	e	enum:__anon88
NDK_ERR_PIN_LOCKED	../env/NDK.h	/^	NDK_ERR_PIN_LOCKED = -203,		\/**<SIM卡被锁定*\/$/;"	e	enum:__anon1
NDK_ERR_PIN_LOCKED	../inc/NDK-bak.h	/^	NDK_ERR_PIN_LOCKED = -203,	\/**<SIM card locked*\/$/;"	e	enum:__anon88
NDK_ERR_PIN_UNDEFINE	../env/NDK.h	/^	NDK_ERR_PIN_UNDEFINE = -204,	\/**<SIM卡未定义错误*\/$/;"	e	enum:__anon1
NDK_ERR_PIN_UNDEFINE	../inc/NDK-bak.h	/^	NDK_ERR_PIN_UNDEFINE = -204,	\/**<undefined SIM card error*\/$/;"	e	enum:__anon88
NDK_ERR_PPP_DEVICE	../env/NDK.h	/^	NDK_ERR_PPP_DEVICE = -302,		\/**<PPP无效设备*\/$/;"	e	enum:__anon1
NDK_ERR_PPP_DEVICE	../inc/NDK-bak.h	/^	NDK_ERR_PPP_DEVICE = -302,\/**<PPP invalid device*\/$/;"	e	enum:__anon88
NDK_ERR_PPP_OPEN	../env/NDK.h	/^	NDK_ERR_PPP_OPEN = -303, 		\/**<PPP已打开*\/$/;"	e	enum:__anon1
NDK_ERR_PPP_OPEN	../inc/NDK-bak.h	/^	NDK_ERR_PPP_OPEN = -303, \/**<PPP already open*\/$/;"	e	enum:__anon88
NDK_ERR_PPP_PARAM	../env/NDK.h	/^	NDK_ERR_PPP_PARAM = -301,		\/**<PPP参数出错*\/$/;"	e	enum:__anon1
NDK_ERR_PPP_PARAM	../inc/NDK-bak.h	/^	NDK_ERR_PPP_PARAM = -301,	\/**<PPP parameter error*\/$/;"	e	enum:__anon88
NDK_ERR_QUIT	../env/NDK.h	/^	NDK_ERR_QUIT = -11,				\/**<按取消退出*\/$/;"	e	enum:__anon1
NDK_ERR_QUIT	../inc/NDK-bak.h	/^	NDK_ERR_QUIT = -11,		\/**<press Cancel to exit*\/$/;"	e	enum:__anon88
NDK_ERR_READ	../env/NDK.h	/^	NDK_ERR_READ = -13, 			\/**<读文件失败*\/$/;"	e	enum:__anon1
NDK_ERR_READ	../inc/NDK-bak.h	/^	NDK_ERR_READ = -13, 	\/**<failed to read from file *\/$/;"	e	enum:__anon88
NDK_ERR_RFID_AANTI	../env/NDK.h	/^	NDK_ERR_RFID_AANTI=				-2014,  \/**<非接触卡-A卡冲突(多张卡存在)  0x03*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_AANTI	../inc/NDK-bak.h	/^	NDK_ERR_RFID_AANTI=				-2014,	\/**<contactless card - A card collision (multiple cards exist)  0x03*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_ABON	../env/NDK.h	/^	NDK_ERR_RFID_ABON=				-2019,  \/**<非接触卡-A、B卡同时存在   0x0C*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_ABON	../inc/NDK-bak.h	/^	NDK_ERR_RFID_ABON=				-2019,  \/**<contactless card - both A and B cards exist   0x0C*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_ASEEK	../env/NDK.h	/^	NDK_ERR_RFID_ASEEK=				-2017,  \/**<非接触卡-A卡寻卡失败(可能多张卡存在)   0x0A*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_ASEEK	../inc/NDK-bak.h	/^	NDK_ERR_RFID_ASEEK=				-2017,  \/**<contactless card - seek A card failed (probably multiple cards exist)   0x0A*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_BACTIV	../env/NDK.h	/^	NDK_ERR_RFID_BACTIV=			-2016,  \/**<非接触卡-B卡激活失败   0x07*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_BACTIV	../inc/NDK-bak.h	/^	NDK_ERR_RFID_BACTIV=			-2016,  \/**<contactless card - B card activation failure  0x07*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_BSEEK	../env/NDK.h	/^	NDK_ERR_RFID_BSEEK=				-2018,  \/**<非接触卡-B卡寻卡失败(可能多张卡存在)   0x0B*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_BSEEK	../inc/NDK-bak.h	/^	NDK_ERR_RFID_BSEEK=				-2018,  \/**<contactless card - seek B card failed (probably multiple cards exist)   0x0B*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_COLLISION_A	../env/NDK.h	/^	NDK_ERR_RFID_COLLISION_A=       -2022,  \/**<非接触卡-A卡冲突*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_COLLISION_A	../inc/NDK-bak.h	/^	NDK_ERR_RFID_COLLISION_A=       -2022,  \/**<contactless card - A Card conflict*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_COLLISION_B	../env/NDK.h	/^	NDK_ERR_RFID_COLLISION_B=       -2023,  \/**<非接触卡-B卡冲突*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_INITSTA	../env/NDK.h	/^	NDK_ERR_RFID_INITSTA=			-2005,  \/**<非接触卡-射频接口器件故障或者未配置*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_INITSTA	../inc/NDK-bak.h	/^	NDK_ERR_RFID_INITSTA=			-2005,	\/**<contactless card - RF interface item failure or not configured*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_MULTICARD	../env/NDK.h	/^	NDK_ERR_RFID_MULTICARD=			-2009,  \/**<非接触卡-多卡状态*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_MULTICARD	../inc/NDK-bak.h	/^	NDK_ERR_RFID_MULTICARD=			-2009,  \/**<contactless card - multi-card state*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_NOCARD	../env/NDK.h	/^	NDK_ERR_RFID_NOCARD=			-2008,  \/**<非接触卡-无卡  0x0D*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_NOCARD	../inc/NDK-bak.h	/^	NDK_ERR_RFID_NOCARD=			-2008,	\/**<contactless card - no card  0x0D*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_NOPICCTYPE	../env/NDK.h	/^	NDK_ERR_RFID_NOPICCTYPE=		-2012,  \/**<非接触卡-未设置卡 0x01*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_NOPICCTYPE	../inc/NDK-bak.h	/^	NDK_ERR_RFID_NOPICCTYPE=		-2012,	\/**<contactless card - card not set 0x01*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_NOTACTIV	../env/NDK.h	/^	NDK_ERR_RFID_NOTACTIV=			-2021,  \/**<非接触卡-未激活*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_NOTACTIV	../inc/NDK-bak.h	/^	NDK_ERR_RFID_NOTACTIV=			-2021,  \/**<contactless card - not activated*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_NOTDETE	../env/NDK.h	/^	NDK_ERR_RFID_NOTDETE=			-2013,  \/**<非接触卡-未寻卡   0x02*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_NOTDETE	../inc/NDK-bak.h	/^	NDK_ERR_RFID_NOTDETE=			-2013,  \/**<contactless card - card not detected  0x02*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_PROTOCOL	../env/NDK.h	/^	NDK_ERR_RFID_PROTOCOL=			-2011,  \/**<非接触卡-不支持ISO1444-4协议，如M1卡  F*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_PROTOCOL	../inc/NDK-bak.h	/^	NDK_ERR_RFID_PROTOCOL=			-2011,	\/**<contactless card - not compliant with ISO1444-4 protocol, e.g. M1 card F*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_RATS	../env/NDK.h	/^	NDK_ERR_RFID_RATS=				-2015,  \/**<非接触卡-A卡RATS过程出错   0x04*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_RATS	../inc/NDK-bak.h	/^	NDK_ERR_RFID_RATS=				-2015,  \/**<contactless card - A card RATS process error   0x04*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_SEEKING	../env/NDK.h	/^	NDK_ERR_RFID_SEEKING=			-2010,  \/**<非接触卡-寻卡\/激活过程中失败*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_SEEKING	../inc/NDK-bak.h	/^	NDK_ERR_RFID_SEEKING=			-2010,	\/**<contactless card - card seeking\/activation failure*\/$/;"	e	enum:__anon88
NDK_ERR_RFID_UPED	../env/NDK.h	/^	NDK_ERR_RFID_UPED=				-2020,  \/**<非接触卡-已经激活(上电)   0x0E*\/$/;"	e	enum:__anon1
NDK_ERR_RFID_UPED	../inc/NDK-bak.h	/^	NDK_ERR_RFID_UPED=				-2020,  \/**<contactless card - already activated (powered up)   0x0E*\/$/;"	e	enum:__anon88
NDK_ERR_RFID__COLLISION_B	../inc/NDK-bak.h	/^	NDK_ERR_RFID__COLLISION_B=      -2023,  \/**<contactless card - B Card conflict*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_BASE	../env/NDK.h	/^    NDK_ERR_SECCR_BASE = (-1200),                           \/**<未知错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_BASE	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_BASE = (-1200),                           \/**<unknown error*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_DBUS	../env/NDK.h	/^    NDK_ERR_SECCR_DBUS = (NDK_ERR_SECCR_BASE - 3),          \/**<DBUS通讯错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_DBUS	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_DBUS = (NDK_ERR_SECCR_BASE - 3),          \/**<DBUS communication error*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_DRV	../env/NDK.h	/^    NDK_ERR_SECCR_DRV = (NDK_ERR_SECCR_BASE - 6),           \/**<驱动加密错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_DRV	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_DRV = (NDK_ERR_SECCR_BASE - 6),           \/**<error in drive encryption*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_GET_KEY	../env/NDK.h	/^    NDK_ERR_SECCR_GET_KEY = (NDK_ERR_SECCR_BASE - 9),       \/**<获取密钥错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_GET_KEY	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_GET_KEY = (NDK_ERR_SECCR_BASE - 9),       \/**<error in obtaining key*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_KEY_LEN	../env/NDK.h	/^    NDK_ERR_SECCR_KEY_LEN = (NDK_ERR_SECCR_BASE - 8),       \/**<密钥长度错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_KEY_LEN	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_KEY_LEN = (NDK_ERR_SECCR_BASE - 8),       \/**<incorrect key type*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_KEY_TYPE	../env/NDK.h	/^    NDK_ERR_SECCR_KEY_TYPE = (NDK_ERR_SECCR_BASE - 7),      \/**<密钥类型错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_KEY_TYPE	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_KEY_TYPE = (NDK_ERR_SECCR_BASE - 7),      \/**<incorrect key type*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_MALLOC	../env/NDK.h	/^    NDK_ERR_SECCR_MALLOC = (NDK_ERR_SECCR_BASE - 4),        \/**<动态内存分配错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_MALLOC	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_MALLOC = (NDK_ERR_SECCR_BASE - 4),        \/**<error in dynamic memory allocation*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_OPEN_RNG	../env/NDK.h	/^    NDK_ERR_SECCR_OPEN_RNG = (NDK_ERR_SECCR_BASE - 5),      \/**<打开随机数设备错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_OPEN_RNG	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_OPEN_RNG = (NDK_ERR_SECCR_BASE - 5),      \/**<error opening random number device*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_PARAM	../env/NDK.h	/^    NDK_ERR_SECCR_PARAM = (NDK_ERR_SECCR_BASE - 2),         \/**<输入参数非法*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_PARAM	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_PARAM = (NDK_ERR_SECCR_BASE - 2),         \/**<illegal input parameter*\/$/;"	e	enum:__anon88
NDK_ERR_SECCR_TIMEOUT	../env/NDK.h	/^    NDK_ERR_SECCR_TIMEOUT = (NDK_ERR_SECCR_BASE - 1),       \/**<获取键值超时*\/$/;"	e	enum:__anon1
NDK_ERR_SECCR_TIMEOUT	../inc/NDK-bak.h	/^    NDK_ERR_SECCR_TIMEOUT = (NDK_ERR_SECCR_BASE - 1),       \/**<obtain key value timeout*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_BASE	../env/NDK.h	/^    NDK_ERR_SECKM_BASE = (-1300),								\/**<未知错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_BASE	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_BASE = (-1300),$/;"	e	enum:__anon88
NDK_ERR_SECKM_DBUS	../env/NDK.h	/^    NDK_ERR_SECKM_DBUS = (NDK_ERR_SECKM_BASE - 3),              \/**<DBUS通讯错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_DBUS	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_DBUS = (NDK_ERR_SECKM_BASE - 3),              \/**<DBUS communication error*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_DEL_DB	../env/NDK.h	/^    NDK_ERR_SECKM_DEL_DB = (NDK_ERR_SECKM_BASE - 6),            \/**<删除数据库错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_DEL_DB	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_DEL_DB = (NDK_ERR_SECKM_BASE - 6),            \/**<error deleting database*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_DEL_REC	../env/NDK.h	/^    NDK_ERR_SECKM_DEL_REC = (NDK_ERR_SECKM_BASE - 7),           \/**<删除记录错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_DEL_REC	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_DEL_REC = (NDK_ERR_SECKM_BASE - 7),           \/**<error deleting record*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_INSTALL_REC	../env/NDK.h	/^    NDK_ERR_SECKM_INSTALL_REC = (NDK_ERR_SECKM_BASE - 8),       \/**<安装密钥记录错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_INSTALL_REC	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_INSTALL_REC = (NDK_ERR_SECKM_BASE - 8),       \/**<error installing key record*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_KEY_ARCH	../env/NDK.h	/^    NDK_ERR_SECKM_KEY_ARCH = (NDK_ERR_SECKM_BASE - 13),         \/**<密钥体系错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_KEY_ARCH	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_KEY_ARCH = (NDK_ERR_SECKM_BASE - 13),         \/**<key system error*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_KEY_LEN	../env/NDK.h	/^    NDK_ERR_SECKM_KEY_LEN  = (NDK_ERR_SECKM_BASE - 14),         \/**<密钥长度错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_KEY_LEN	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_KEY_LEN  = (NDK_ERR_SECKM_BASE - 14),         \/**<key length error*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_KEY_MAC	../env/NDK.h	/^    NDK_ERR_SECKM_KEY_MAC = (NDK_ERR_SECKM_BASE - 11),          \/**<密钥MAC校验错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_KEY_MAC	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_KEY_MAC = (NDK_ERR_SECKM_BASE - 11),          \/**<key MAC check error*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_KEY_TYPE	../env/NDK.h	/^    NDK_ERR_SECKM_KEY_TYPE = (NDK_ERR_SECKM_BASE - 12),         \/**<密钥类型错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_KEY_TYPE	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_KEY_TYPE = (NDK_ERR_SECKM_BASE - 12),         \/**<key type error*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_MALLOC	../env/NDK.h	/^    NDK_ERR_SECKM_MALLOC = (NDK_ERR_SECKM_BASE - 4),            \/**<动态内存分配错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_MALLOC	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_MALLOC = (NDK_ERR_SECKM_BASE - 4),            \/**<error in dynamic memory allocation *\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_OPEN_DB	../env/NDK.h	/^    NDK_ERR_SECKM_OPEN_DB = (NDK_ERR_SECKM_BASE - 5),           \/**<数据库打开错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_OPEN_DB	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_OPEN_DB = (NDK_ERR_SECKM_BASE - 5),           \/**<error opening database*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_OPT_NOALLOW	../env/NDK.h	/^    NDK_ERR_SECKM_OPT_NOALLOW = (NDK_ERR_SECKM_BASE - 10),      \/**<操作不允许*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_OPT_NOALLOW	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_OPT_NOALLOW = (NDK_ERR_SECKM_BASE - 10),      \/**<operation not allowed*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_PARAM	../env/NDK.h	/^    NDK_ERR_SECKM_PARAM = (NDK_ERR_SECKM_BASE - 2),             \/**<输入参数非法*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_PARAM	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_PARAM = (NDK_ERR_SECKM_BASE - 2),             \/**<illegal input parameter*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_READ_REC	../env/NDK.h	/^    NDK_ERR_SECKM_READ_REC = (NDK_ERR_SECKM_BASE - 9),          \/**<读密钥记录错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_READ_REC	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_READ_REC = (NDK_ERR_SECKM_BASE - 9),          \/**<error reading key record*\/$/;"	e	enum:__anon88
NDK_ERR_SECKM_TIMEOUT	../env/NDK.h	/^    NDK_ERR_SECKM_TIMEOUT = (NDK_ERR_SECKM_BASE - 1),           \/**<获取键值超时*\/$/;"	e	enum:__anon1
NDK_ERR_SECKM_TIMEOUT	../inc/NDK-bak.h	/^    NDK_ERR_SECKM_TIMEOUT = (NDK_ERR_SECKM_BASE - 1),           \/**<obtain key value timeout*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_BASE	../env/NDK.h	/^    NDK_ERR_SECP_BASE = (-1000),								\/**<未知错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_BASE	../inc/NDK-bak.h	/^    NDK_ERR_SECP_BASE = (-1000),$/;"	e	enum:__anon88
NDK_ERR_SECP_DBUS	../env/NDK.h	/^    NDK_ERR_SECP_DBUS = (NDK_ERR_SECP_BASE - 3),                \/**<DBUS通讯错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_DBUS	../inc/NDK-bak.h	/^    NDK_ERR_SECP_DBUS = (NDK_ERR_SECP_BASE - 3),                \/**<DBUS communication error*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_GET_CALLER	../env/NDK.h	/^    NDK_ERR_SECP_GET_CALLER = (NDK_ERR_SECP_BASE - 10),         \/**<获取调用者信息错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_GET_CALLER	../inc/NDK-bak.h	/^    NDK_ERR_SECP_GET_CALLER = (NDK_ERR_SECP_BASE - 10),         \/**<error obtaining caller info *\/$/;"	e	enum:__anon88
NDK_ERR_SECP_GET_KEY	../env/NDK.h	/^    NDK_ERR_SECP_GET_KEY = (NDK_ERR_SECP_BASE - 8),             \/**<获取密钥值*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_GET_KEY	../inc/NDK-bak.h	/^    NDK_ERR_SECP_GET_KEY = (NDK_ERR_SECP_BASE - 8),             \/**<obtain key value*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_GET_RNG	../env/NDK.h	/^    NDK_ERR_SECP_GET_RNG = (NDK_ERR_SECP_BASE - 7),             \/**<获取随机数*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_GET_RNG	../inc/NDK-bak.h	/^    NDK_ERR_SECP_GET_RNG = (NDK_ERR_SECP_BASE - 7),             \/**<obtain random number*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_KCV_CHK	../env/NDK.h	/^    NDK_ERR_SECP_KCV_CHK = (NDK_ERR_SECP_BASE - 9),             \/**<KCV校验错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_KCV_CHK	../inc/NDK-bak.h	/^    NDK_ERR_SECP_KCV_CHK = (NDK_ERR_SECP_BASE - 9),             \/**<KCV check error*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_MALLOC	../env/NDK.h	/^    NDK_ERR_SECP_MALLOC = (NDK_ERR_SECP_BASE - 4),              \/**<动态内存分配错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_MALLOC	../inc/NDK-bak.h	/^    NDK_ERR_SECP_MALLOC = (NDK_ERR_SECP_BASE - 4),              \/**<error in dynamic memory allocation*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_NO_PERMIT	../env/NDK.h	/^    NDK_ERR_SECP_NO_PERMIT = (NDK_ERR_SECP_BASE - 12),          \/**<权限不允许*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_NO_PERMIT	../inc/NDK-bak.h	/^    NDK_ERR_SECP_NO_PERMIT = (NDK_ERR_SECP_BASE - 12),          \/**<permissions are not allowed to*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_OPEN_SEC	../env/NDK.h	/^    NDK_ERR_SECP_OPEN_SEC = (NDK_ERR_SECP_BASE - 5),            \/**<打开安全设备错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_OPEN_SEC	../inc/NDK-bak.h	/^    NDK_ERR_SECP_OPEN_SEC = (NDK_ERR_SECP_BASE - 5),            \/**<error opening security device *\/$/;"	e	enum:__anon88
NDK_ERR_SECP_OVERRUN	../env/NDK.h	/^    NDK_ERR_SECP_OVERRUN = (NDK_ERR_SECP_BASE - 11),            \/**<运行次数出错*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_OVERRUN	../inc/NDK-bak.h	/^    NDK_ERR_SECP_OVERRUN = (NDK_ERR_SECP_BASE - 11),            \/**<run number wrong*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_PARAM	../env/NDK.h	/^    NDK_ERR_SECP_PARAM = (NDK_ERR_SECP_BASE - 2),               \/**<输入参数非法*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_PARAM	../inc/NDK-bak.h	/^    NDK_ERR_SECP_PARAM = (NDK_ERR_SECP_BASE - 2),               \/**<illegal input parameter*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_SEC_DRV	../env/NDK.h	/^    NDK_ERR_SECP_SEC_DRV = (NDK_ERR_SECP_BASE - 6),             \/**<安全设备操作错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_SEC_DRV	../inc/NDK-bak.h	/^    NDK_ERR_SECP_SEC_DRV = (NDK_ERR_SECP_BASE - 6),             \/**<security device operation error*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_TAMPER	../env/NDK.h	/^	NDK_ERR_SECP_TAMPER = (NDK_ERR_SECP_BASE - 13),          	\/**<安全攻击*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_TAMPER	../inc/NDK-bak.h	/^	NDK_ERR_SECP_TAMPER = (NDK_ERR_SECP_BASE - 13),          	\/**<security attack*\/$/;"	e	enum:__anon88
NDK_ERR_SECP_TIMEOUT	../env/NDK.h	/^    NDK_ERR_SECP_TIMEOUT = (NDK_ERR_SECP_BASE - 1),             \/**<获取键值超时*\/$/;"	e	enum:__anon1
NDK_ERR_SECP_TIMEOUT	../inc/NDK-bak.h	/^    NDK_ERR_SECP_TIMEOUT = (NDK_ERR_SECP_BASE - 1),             \/**<obtain key value timeout*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_BACKSPACE_KEY	../env/NDK.h	/^	NDK_ERR_SECVP_BACKSPACE_KEY=(NDK_ERR_SECVP_VPP-7),		\/**<退格键按下.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_BACKSPACE_KEY	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_BACKSPACE_KEY=(NDK_ERR_SECVP_VPP-7),		\/**<press the backspace key.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_BASE	../env/NDK.h	/^    NDK_ERR_SECVP_BASE = (-1100),                           \/**<未知错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_BASE	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_BASE = (-1100),                           \/**<unknown error*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_BUFFER_FULL	../env/NDK.h	/^	NDK_ERR_SECVP_BUFFER_FULL=(NDK_ERR_SECVP_VPP-4),		\/**<输入BUF越界，（键入的PIN太长）*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_BUFFER_FULL	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_BUFFER_FULL=(NDK_ERR_SECVP_VPP-4),		\/**<BUF over*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_CANCEL_KEY	../env/NDK.h	/^	NDK_ERR_SECVP_CANCEL_KEY=(NDK_ERR_SECVP_VPP-9),  		\/**<取消键被按下.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_CANCEL_KEY	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_CANCEL_KEY=(NDK_ERR_SECVP_VPP-9),  		\/**<cancel button is pressed.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_CLEAR_KEY	../env/NDK.h	/^	NDK_ERR_SECVP_CLEAR_KEY=(NDK_ERR_SECVP_VPP-8),  		\/**<清除键按下，清除所有'*'显示.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_CLEAR_KEY	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_CLEAR_KEY=(NDK_ERR_SECVP_VPP-8),  		\/**<clear key pressed to remove all the '*'.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_CUSTOMERCARDNOTPRESENT	../env/NDK.h	/^	NDK_ERR_SECVP_CUSTOMERCARDNOTPRESENT=(NDK_ERR_SECVP_VPP-11), \/**<IC卡被拔出*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_CUSTOMERCARDNOTPRESENT	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_CUSTOMERCARDNOTPRESENT=(NDK_ERR_SECVP_VPP-11), \/**<IC Card is pulled out*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_DBUS	../env/NDK.h	/^    NDK_ERR_SECVP_DBUS = (NDK_ERR_SECVP_BASE - 3),          \/**<DBUS通讯错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_DBUS	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_DBUS = (NDK_ERR_SECVP_BASE - 3),          \/**<DBUS communication error*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_ENCRYPT_ERROR	../env/NDK.h	/^	NDK_ERR_SECVP_ENCRYPT_ERROR=(NDK_ERR_SECVP_VPP-3),		\/**<按确认键后，加密错误.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_ENCRYPT_ERROR	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_ENCRYPT_ERROR=(NDK_ERR_SECVP_VPP-3),		\/**<after press the confirmation key, to encrypt errors.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_ENTER_KEY	../env/NDK.h	/^	NDK_ERR_SECVP_ENTER_KEY=(NDK_ERR_SECVP_VPP-6),			\/**<确认键按下，PIN处理.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_ENTER_KEY	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_ENTER_KEY=(NDK_ERR_SECVP_VPP-6),			\/**<confirm key press, PIN processing.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_GENERALERROR	../env/NDK.h	/^	NDK_ERR_SECVP_GENERALERROR=(NDK_ERR_SECVP_VPP-10),  	\/**<该进程无法继续。内部错误.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_GENERALERROR	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_GENERALERROR=(NDK_ERR_SECVP_VPP-10),  	\/**<the process cannot continue. Internal error.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_GETCHALLENGE_BAD	../env/NDK.h	/^	NDK_ERR_SECVP_GETCHALLENGE_BAD=(NDK_ERR_SECVP_VPP-18),  \/**<智能卡-应答不是90 00.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_GETCHALLENGE_BAD	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_GETCHALLENGE_BAD=(NDK_ERR_SECVP_VPP-18),  \/**<Smart card - response is not 90, 00.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_GETCHALLENGE_NOT8	../env/NDK.h	/^	NDK_ERR_SECVP_GETCHALLENGE_NOT8=(NDK_ERR_SECVP_VPP-19), \/**<智能卡-无效的应答长度.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_GETCHALLENGE_NOT8	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_GETCHALLENGE_NOT8=(NDK_ERR_SECVP_VPP-19), \/**<Smart card - invalid response length.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_GET_ESC	../env/NDK.h	/^    NDK_ERR_SECVP_GET_ESC = (NDK_ERR_SECVP_BASE - 8),       \/**<用户取消键退出*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_GET_ESC	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_GET_ESC = (NDK_ERR_SECVP_BASE - 8),       \/**<the user to cancel key to exit*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_GET_RNG	../env/NDK.h	/^    NDK_ERR_SECVP_GET_RNG = (NDK_ERR_SECVP_BASE - 7),       \/**<获取随机数出错*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_GET_RNG	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_GET_RNG = (NDK_ERR_SECVP_BASE - 7),       \/**<error obtaining random number *\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_HTCCARDERROR	../env/NDK.h	/^	NDK_ERR_SECVP_HTCCARDERROR=(NDK_ERR_SECVP_VPP-12),  	\/**<访问智能卡错误.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_HTCCARDERROR	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_HTCCARDERROR=(NDK_ERR_SECVP_VPP-12),  	\/**<access smart card error.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_ICCERROR	../env/NDK.h	/^	NDK_ERR_SECVP_ICCERROR=(NDK_ERR_SECVP_VPP-15),  		\/**<智能卡-重试太多次*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_ICCERROR	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_ICCERROR=(NDK_ERR_SECVP_VPP-15),  		\/**<Smart card - try again so many times*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_ICCFAILURE	../env/NDK.h	/^	NDK_ERR_SECVP_ICCFAILURE=(NDK_ERR_SECVP_VPP-17),  		\/**<智能卡-致命错误.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_ICCFAILURE	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_ICCFAILURE=(NDK_ERR_SECVP_VPP-17),  		\/**<Smart card - a fatal error.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_INVALID_KEY	../env/NDK.h	/^    NDK_ERR_SECVP_INVALID_KEY=(NDK_ERR_SECVP_VPP),  		\/**<无效密钥,内部使用.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_INVALID_KEY	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_INVALID_KEY=(NDK_ERR_SECVP_VPP),  		\/**<invalid key, for internal use.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_NOT_ACTIVE	../env/NDK.h	/^	NDK_ERR_SECVP_NOT_ACTIVE=(NDK_ERR_SECVP_VPP-1),  		\/**<VPP没有激活，第一次调用VPPInit.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_NOT_ACTIVE	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_NOT_ACTIVE=(NDK_ERR_SECVP_VPP-1),  		\/**<VPPIs not active, the first call VPPInit.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_OPEN_EVENT0	../env/NDK.h	/^    NDK_ERR_SECVP_OPEN_EVENT0 =	(NDK_ERR_SECVP_BASE - 4),   \/**<打开event0设备出错*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_OPEN_EVENT0	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_OPEN_EVENT0 =	(NDK_ERR_SECVP_BASE - 4),   \/**<error opening event0 device *\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_OPEN_RNG	../env/NDK.h	/^    NDK_ERR_SECVP_OPEN_RNG = (NDK_ERR_SECVP_BASE - 6),      \/**<打开随机数设备错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_OPEN_RNG	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_OPEN_RNG = (NDK_ERR_SECVP_BASE - 6),      \/**<error opening random number device*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_PARAM	../env/NDK.h	/^    NDK_ERR_SECVP_PARAM = (NDK_ERR_SECVP_BASE - 2),         \/**<输入参数非法*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_PARAM	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_PARAM = (NDK_ERR_SECVP_BASE - 2),         \/**<illegal input parameter *\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_PIN_ATTACK_TIMER	../env/NDK.h	/^ 	NDK_ERR_SECVP_PIN_ATTACK_TIMER=(NDK_ERR_SECVP_VPP-20),  \/**<PIN攻击定时器被激活*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_PIN_ATTACK_TIMER	../inc/NDK-bak.h	/^ 	NDK_ERR_SECVP_PIN_ATTACK_TIMER=(NDK_ERR_SECVP_VPP-20),  \/**<PIN attack timer is activated*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_PIN_BYPASS	../env/NDK.h	/^	NDK_ERR_SECVP_PIN_BYPASS=(NDK_ERR_SECVP_VPP-16),  		\/**<智能卡-PIN验证通过,并且PIN是0长度*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_PIN_BYPASS	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_PIN_BYPASS=(NDK_ERR_SECVP_VPP-16),  		\/**<Smart card - PIN verification through, and the PIN length is zero*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_PIN_KEY	../env/NDK.h	/^	NDK_ERR_SECVP_PIN_KEY=(NDK_ERR_SECVP_VPP-5),  			\/**<数据键按下，回显"*".*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_PIN_KEY	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_PIN_KEY=(NDK_ERR_SECVP_VPP-5),  			\/**<data key press, echo "*".*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_SCAN_VAL	../env/NDK.h	/^    NDK_ERR_SECVP_SCAN_VAL = (NDK_ERR_SECVP_BASE - 5),      \/**<扫描值超出定义*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_SCAN_VAL	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_SCAN_VAL = (NDK_ERR_SECVP_BASE - 5),      \/**<scan value out of range*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_TIMED_OUT	../env/NDK.h	/^	NDK_ERR_SECVP_TIMED_OUT=(NDK_ERR_SECVP_VPP-2),			\/**<已经超过VPP初始化的时间.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_TIMED_OUT	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_TIMED_OUT=(NDK_ERR_SECVP_VPP-2),			\/**<already more than VPP initialization time*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_TIMEOUT	../env/NDK.h	/^    NDK_ERR_SECVP_TIMEOUT = (NDK_ERR_SECVP_BASE - 1),       \/**<获取键值超时*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_TIMEOUT	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_TIMEOUT = (NDK_ERR_SECVP_BASE - 1),       \/**<obtain key value timeout*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_VPP	../env/NDK.h	/^    NDK_ERR_SECVP_VPP = (-1120),                            \/**<未知错误*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_VPP	../inc/NDK-bak.h	/^    NDK_ERR_SECVP_VPP = (-1120),$/;"	e	enum:__anon88
NDK_ERR_SECVP_WRONG_PIN	../env/NDK.h	/^	NDK_ERR_SECVP_WRONG_PIN=(NDK_ERR_SECVP_VPP-14), 		\/**<智能卡-最后尝试一次.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_WRONG_PIN	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_WRONG_PIN=(NDK_ERR_SECVP_VPP-14), 		\/**<Smart card - try one last time.*\/$/;"	e	enum:__anon88
NDK_ERR_SECVP_WRONG_PIN_LAST_TRY	../env/NDK.h	/^	NDK_ERR_SECVP_WRONG_PIN_LAST_TRY=(NDK_ERR_SECVP_VPP-13),\/**<智能卡-密码不正确，重试一次.*\/$/;"	e	enum:__anon1
NDK_ERR_SECVP_WRONG_PIN_LAST_TRY	../inc/NDK-bak.h	/^	NDK_ERR_SECVP_WRONG_PIN_LAST_TRY=(NDK_ERR_SECVP_VPP-13),\/**<Smart card - the password is not correct, try again one more time*\/$/;"	e	enum:__anon88
NDK_ERR_SHM	../env/NDK.h	/^	NDK_ERR_SHM = -16,				\/**<共享内存出错*\/$/;"	e	enum:__anon1
NDK_ERR_SHM	../inc/NDK-bak.h	/^	NDK_ERR_SHM = -16,	\/**<error sharing memory *\/$/;"	e	enum:__anon88
NDK_ERR_SSL_ALLOC	../env/NDK.h	/^	NDK_ERR_SSL_ALLOC = -352,       	\/**<无法分配*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_ALLOC	../inc/NDK-bak.h	/^	NDK_ERR_SSL_ALLOC = -352,       \/**<can't allocate*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_ALREADCLOSE	../env/NDK.h	/^	NDK_ERR_SSL_ALREADCLOSE = -351, 	\/**<连接已关闭*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_ALREADCLOSE	../inc/NDK-bak.h	/^	NDK_ERR_SSL_ALREADCLOSE = -351, \/**<connection already closed *\/$/;"	e	enum:__anon88
NDK_ERR_SSL_CONNECT	../env/NDK.h	/^	NDK_ERR_SSL_CONNECT = -358,       	\/**<没有连接*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_CONNECT	../inc/NDK-bak.h	/^	NDK_ERR_SSL_CONNECT = -358,       \/**<no connection*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_INVADDR	../env/NDK.h	/^	NDK_ERR_SSL_INVADDR = -353,     	\/**<无效地址*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_INVADDR	../inc/NDK-bak.h	/^	NDK_ERR_SSL_INVADDR = -353,     \/**<invalid address*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_MODEUNSUPPORTED	../env/NDK.h	/^	NDK_ERR_SSL_MODEUNSUPPORTED = -355, \/**<模式不支持*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_MODEUNSUPPORTED	../inc/NDK-bak.h	/^	NDK_ERR_SSL_MODEUNSUPPORTED = -355, \/**<unsupport mode*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_PARAM	../env/NDK.h	/^	NDK_ERR_SSL_PARAM = -350,       	\/**<无效参数*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_PARAM	../inc/NDK-bak.h	/^	NDK_ERR_SSL_PARAM = -350,       \/**<invalid parameter*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_RECV	../env/NDK.h	/^	NDK_ERR_SSL_RECV = -357,        	\/**<接收错误*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_RECV	../inc/NDK-bak.h	/^	NDK_ERR_SSL_RECV = -357,        \/**<error receiving*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_SEND	../env/NDK.h	/^	NDK_ERR_SSL_SEND = -356,        	\/**<发送错误*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_SEND	../inc/NDK-bak.h	/^	NDK_ERR_SSL_SEND = -356,        \/**<error sending*\/$/;"	e	enum:__anon88
NDK_ERR_SSL_TIMEOUT	../env/NDK.h	/^	NDK_ERR_SSL_TIMEOUT = -354,     	\/**<连接超时*\/$/;"	e	enum:__anon1
NDK_ERR_SSL_TIMEOUT	../inc/NDK-bak.h	/^	NDK_ERR_SSL_TIMEOUT = -354,     \/**<connection Timeout *\/$/;"	e	enum:__anon88
NDK_ERR_SWIPED_DATA	../env/NDK.h	/^	NDK_ERR_SWIPED_DATA=-51,		\/**<驱动磁卡数据格式错*\/$/;"	e	enum:__anon1
NDK_ERR_SWIPED_DATA	../inc/NDK-bak.h	/^	NDK_ERR_SWIPED_DATA=-51,		\/**<Drive the magnetic card data format is wrong*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_ALLOC	../env/NDK.h	/^	NDK_ERR_TCP_ALLOC = -304,	\/**<无法分配*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_ALLOC	../inc/NDK-bak.h	/^	NDK_ERR_TCP_ALLOC = -304,	\/**<can't allocate *\/$/;"	e	enum:__anon88
NDK_ERR_TCP_CONNECT	../env/NDK.h	/^	NDK_ERR_TCP_CONNECT = -308,	\/**<没有连接*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_CONNECT	../inc/NDK-bak.h	/^	NDK_ERR_TCP_CONNECT = -308,	\/**<no connection*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_INVADDR	../env/NDK.h	/^	NDK_ERR_TCP_INVADDR = -307,	\/**<无效地址*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_INVADDR	../inc/NDK-bak.h	/^	NDK_ERR_TCP_INVADDR = -307,	\/**<invalid address*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_NETWORK	../env/NDK.h	/^	NDK_ERR_TCP_NETWORK = -310,	\/**<网络错误*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_NETWORK	../inc/NDK-bak.h	/^	NDK_ERR_TCP_NETWORK = -310,	\/**<network error*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_PARAM	../env/NDK.h	/^	NDK_ERR_TCP_PARAM = -305,	\/**<无效参数*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_PARAM	../inc/NDK-bak.h	/^	NDK_ERR_TCP_PARAM = -305,	\/**<invalid parameter*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_PROTOCOL	../env/NDK.h	/^	NDK_ERR_TCP_PROTOCOL = -309,\/**<协议错误*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_PROTOCOL	../inc/NDK-bak.h	/^	NDK_ERR_TCP_PROTOCOL = -309,\/**<protocol error*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_RECV	../env/NDK.h	/^	NDK_ERR_TCP_RECV = -312,	\/**<接收错误*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_RECV	../inc/NDK-bak.h	/^	NDK_ERR_TCP_RECV = -312,	\/**<error receiving*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_SEND	../env/NDK.h	/^	NDK_ERR_TCP_SEND = -311,	\/**<发送错误*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_SEND	../inc/NDK-bak.h	/^	NDK_ERR_TCP_SEND = -311,	\/**<error sending*\/$/;"	e	enum:__anon88
NDK_ERR_TCP_TIMEOUT	../env/NDK.h	/^	NDK_ERR_TCP_TIMEOUT = -306,	\/**<传输超时*\/$/;"	e	enum:__anon1
NDK_ERR_TCP_TIMEOUT	../inc/NDK-bak.h	/^	NDK_ERR_TCP_TIMEOUT = -306,	\/**<transmission timeout*\/$/;"	e	enum:__anon88
NDK_ERR_THREAD_ALLOC	../env/NDK.h	/^	NDK_ERR_THREAD_ALLOC = -451,     	\/**<无效分配*\/$/;"	e	enum:__anon1
NDK_ERR_THREAD_ALLOC	../inc/NDK-bak.h	/^	NDK_ERR_THREAD_ALLOC = -451,     \/**<can't allocate*\/$/;"	e	enum:__anon88
NDK_ERR_THREAD_CMDUNSUPPORTED	../env/NDK.h	/^	NDK_ERR_THREAD_CMDUNSUPPORTED = -452,     \/**<命令不支持*\/$/;"	e	enum:__anon1
NDK_ERR_THREAD_CMDUNSUPPORTED	../inc/NDK-bak.h	/^	NDK_ERR_THREAD_CMDUNSUPPORTED = -452,     \/**<unsupported command*\/$/;"	e	enum:__anon88
NDK_ERR_THREAD_PARAM	../env/NDK.h	/^	NDK_ERR_THREAD_PARAM = -450,     	\/**<无效参数*\/$/;"	e	enum:__anon1
NDK_ERR_THREAD_PARAM	../inc/NDK-bak.h	/^	NDK_ERR_THREAD_PARAM = -450,     \/**<invalid address*\/$/;"	e	enum:__anon88
NDK_ERR_TIMEOUT	../env/NDK.h	/^	NDK_ERR_TIMEOUT = -10,			\/**<超时错误*\/$/;"	e	enum:__anon1
NDK_ERR_TIMEOUT	../inc/NDK-bak.h	/^	NDK_ERR_TIMEOUT = -10,		\/**<timeout error*\/$/;"	e	enum:__anon88
NDK_ERR_USB_LINE_UNCONNECT	../env/NDK.h	/^	NDK_ERR_USB_LINE_UNCONNECT = -100,  \/**<USB线未连接*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_DRIVELOADFAIL	../env/NDK.h	/^	NDK_ERR_USDDISK_DRIVELOADFAIL =  -651,  \/**<U盘或SD卡驱动加载失败*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_DRIVELOADFAIL	../inc/NDK-bak.h	/^	NDK_ERR_USDDISK_DRIVELOADFAIL =  -651,  \/**<U disk or SD card drive load failure*\/$/;"	e	enum:__anon88
NDK_ERR_USDDISK_IOCFAIL	../env/NDK.h	/^	NDK_ERR_USDDISK_IOCFAIL =  -655,        \/**<驱动调用错误*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_IOCFAIL	../inc/NDK-bak.h	/^	NDK_ERR_USDDISK_IOCFAIL =  -655,        \/**<Drivers call wrong*\/$/;"	e	enum:__anon88
NDK_ERR_USDDISK_NONSUPPORTTYPE	../env/NDK.h	/^	NDK_ERR_USDDISK_NONSUPPORTTYPE =  -652, \/**<不支持的类型*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_NONSUPPORTTYPE	../inc/NDK-bak.h	/^	NDK_ERR_USDDISK_NONSUPPORTTYPE =  -652, \/**<unsupported type *\/$/;"	e	enum:__anon88
NDK_ERR_USDDISK_PARAM	../env/NDK.h	/^	NDK_ERR_USDDISK_PARAM =  -650,          \/**<无效参数*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_PARAM	../inc/NDK-bak.h	/^	NDK_ERR_USDDISK_PARAM =  -650,          \/**<Invalid parameter*\/$/;"	e	enum:__anon88
NDK_ERR_USDDISK_UNLOADDRIFAIL	../env/NDK.h	/^	NDK_ERR_USDDISK_UNLOADDRIFAIL =  -654,  \/**<卸载驱动失败*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_UNLOADDRIFAIL	../inc/NDK-bak.h	/^	NDK_ERR_USDDISK_UNLOADDRIFAIL =  -654,  \/**<Failure to unloading the driver*\/$/;"	e	enum:__anon88
NDK_ERR_USDDISK_UNMOUNTFAIL	../env/NDK.h	/^	NDK_ERR_USDDISK_UNMOUNTFAIL =  -653,    \/**<挂载失败*\/$/;"	e	enum:__anon1
NDK_ERR_USDDISK_UNMOUNTFAIL	../inc/NDK-bak.h	/^	NDK_ERR_USDDISK_UNMOUNTFAIL =  -653,    \/**<Mount failed*\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_CMD_UNSUPPORTED	../env/NDK.h	/^    NDK_ERR_WIFI_CMD_UNSUPPORTED=   -3003,  \/**<WIFI-不支持的命令*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_CMD_UNSUPPORTED	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_CMD_UNSUPPORTED=   -3003,  \/**<WIFI-unsupported command *\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_DEVICE_BUSY	../env/NDK.h	/^    NDK_ERR_WIFI_DEVICE_BUSY=       -3006,  \/**<WIFI-设备忙*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_DEVICE_BUSY	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_DEVICE_BUSY=       -3006,  \/**<WIFI-Device is busy *\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_DEVICE_FAULT	../env/NDK.h	/^    NDK_ERR_WIFI_DEVICE_FAULT=      -3002,  \/**<WIFI-设备状态出错*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_DEVICE_FAULT	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_DEVICE_FAULT=      -3002,  \/**<WIFI-Equipment state error*\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_DEVICE_NOTOPEN	../env/NDK.h	/^    NDK_ERR_WIFI_DEVICE_NOTOPEN=    -3005,  \/**<WIFI-没有扫描到AP*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_DEVICE_NOTOPEN	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_DEVICE_NOTOPEN=    -3005,  \/**<WIFI-No scan to AP*\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_DEVICE_TIMEOUT	../env/NDK.h	/^    NDK_ERR_WIFI_DEVICE_TIMEOUT=    -3010,  \/**<WIFI-设备超时*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_DEVICE_TIMEOUT	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_DEVICE_TIMEOUT=    -3010,  \/**<WIFI-DEVICE TIMEOUT *\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_DEVICE_UNAVAILABLE	../env/NDK.h	/^    NDK_ERR_WIFI_DEVICE_UNAVAILABLE=-3004,  \/**<WIFI-设备不可用*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_DEVICE_UNAVAILABLE	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_DEVICE_UNAVAILABLE=-3004,  \/**<WIFI-Device unavailable *\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_INVDATA	../env/NDK.h	/^	NDK_ERR_WIFI_INVDATA=           -3001,  \/**<WIFI-无效参数*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_INVDATA	../inc/NDK-bak.h	/^	NDK_ERR_WIFI_INVDATA=           -3001,  \/**<WIFI-Invalid parameter*\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_PROCESS_INBADSTATE	../env/NDK.h	/^    NDK_ERR_WIFI_PROCESS_INBADSTATE=-3008,  \/**<WIFI-无法连接到AP*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_PROCESS_INBADSTATE	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_PROCESS_INBADSTATE=-3008,  \/**<WIFI-Could not Connect AP*\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_SEARCH_FAULT	../env/NDK.h	/^    NDK_ERR_WIFI_SEARCH_FAULT=      -3009,  \/**<WIFI-扫描状态出错*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_SEARCH_FAULT	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_SEARCH_FAULT=      -3009,  \/**<WIFI-Scanning state error*\/$/;"	e	enum:__anon88
NDK_ERR_WIFI_UNKNOWN_ERROR	../env/NDK.h	/^    NDK_ERR_WIFI_UNKNOWN_ERROR=     -3007,  \/**<WIFI-未知错误*\/$/;"	e	enum:__anon1
NDK_ERR_WIFI_UNKNOWN_ERROR	../inc/NDK-bak.h	/^    NDK_ERR_WIFI_UNKNOWN_ERROR=     -3007,  \/**<WIFI-Unknown Error *\/$/;"	e	enum:__anon88
NDK_ERR_WRITE	../env/NDK.h	/^	NDK_ERR_WRITE = -12, 			\/**<写文件失败*\/$/;"	e	enum:__anon1
NDK_ERR_WRITE	../inc/NDK-bak.h	/^	NDK_ERR_WRITE = -12, \/**<failed to write into file *\/$/;"	e	enum:__anon88
NDK_EthGetMacAddr	../env/NDK.h	/^int NDK_EthGetMacAddr(char *pszMacAddr);$/;"	p	signature:(char *pszMacAddr)
NDK_EthGetMacAddr	../inc/NDK-bak.h	/^int NDK_EthGetMacAddr(char *pszMacAddr);$/;"	p	signature:(char *pszMacAddr)
NDK_EthGetNetAddr	../env/NDK.h	/^int NDK_EthGetNetAddr(char *pszIp, char *pszMask, char *pszGateway, char *pszDns);$/;"	p	signature:(char *pszIp, char *pszMask, char *pszGateway, char *pszDns)
NDK_EthGetNetAddr	../inc/NDK-bak.h	/^int NDK_EthGetNetAddr(char *pszIp, char *pszMask, char *pszGateway, char *pszDns);$/;"	p	signature:(char *pszIp, char *pszMask, char *pszGateway, char *pszDns)
NDK_EthSetAddress	../env/NDK.h	/^int NDK_EthSetAddress(const char *pszIp, const char *pszMask, const char *pszGateway, const char *pszDns);$/;"	p	signature:(const char *pszIp, const char *pszMask, const char *pszGateway, const char *pszDns)
NDK_EthSetAddress	../inc/NDK-bak.h	/^int NDK_EthSetAddress(const char *pszIp, const char *pszMask, const char *pszGateway, const char *pszDns);$/;"	p	signature:(const char *pszIp, const char *pszMask, const char *pszGateway, const char *pszDns)
NDK_FmtAmtStr	../env/NDK.h	/^int NDK_FmtAmtStr (const uchar* pszSource, uchar* pszTarget, int* pnTargetLen );$/;"	p	signature:(const uchar* pszSource, uchar* pszTarget, int* pnTargetLen )
NDK_FmtAmtStr	../inc/NDK-bak.h	/^int NDK_FmtAmtStr (const uchar* pszSource, uchar* pszTarget, int* pnTargetLen );$/;"	p	signature:(const uchar* pszSource, uchar* pszTarget, int* pnTargetLen )
NDK_FsClose	../env/NDK.h	/^int NDK_FsClose(int nHandle);$/;"	p	signature:(int nHandle)
NDK_FsClose	../inc/NDK-bak.h	/^int NDK_FsClose(int nHandle);$/;"	p	signature:(int nHandle)
NDK_FsCreateDirectory	../env/NDK.h	/^int NDK_FsCreateDirectory(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsCreateDirectory	../inc/NDK-bak.h	/^int NDK_FsCreateDirectory(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsDel	../env/NDK.h	/^int NDK_FsDel(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsDel	../inc/NDK-bak.h	/^int NDK_FsDel(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsDir	../env/NDK.h	/^int NDK_FsDir(const char *psPath,char *psBuf,uint *punNum);$/;"	p	signature:(const char *psPath,char *psBuf,uint *punNum)
NDK_FsDir	../inc/NDK-bak.h	/^int NDK_FsDir(const char *pPath,char *psBuf,uint *punNum);$/;"	p	signature:(const char *pPath,char *psBuf,uint *punNum)
NDK_FsExist	../env/NDK.h	/^int NDK_FsExist(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsExist	../inc/NDK-bak.h	/^int NDK_FsExist(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsFileSize	../env/NDK.h	/^int NDK_FsFileSize(const char *pszName,uint *punSize);$/;"	p	signature:(const char *pszName,uint *punSize)
NDK_FsFileSize	../inc/NDK-bak.h	/^int NDK_FsFileSize(const char *pszName,uint *punSize);$/;"	p	signature:(const char *pszName,uint *punSize)
NDK_FsFormat	../env/NDK.h	/^int NDK_FsFormat(void);$/;"	p	signature:(void)
NDK_FsFormat	../inc/NDK-bak.h	/^int NDK_FsFormat(void);$/;"	p	signature:(void)
NDK_FsGetDiskSpace	../env/NDK.h	/^int NDK_FsGetDiskSpace(uint unWhich,ulong *pulSpace);$/;"	p	signature:(uint unWhich,ulong *pulSpace)
NDK_FsGetDiskSpace	../inc/NDK-bak.h	/^int NDK_FsGetDiskSpace(uint unWhich,ulong *pulSpace);$/;"	p	signature:(uint unWhich,ulong *pulSpace)
NDK_FsOpen	../env/NDK.h	/^int NDK_FsOpen(const char *pszName,const char *pszMode);$/;"	p	signature:(const char *pszName,const char *pszMode)
NDK_FsOpen	../inc/NDK-bak.h	/^int NDK_FsOpen(const char *pszName,const char *pszMode);$/;"	p	signature:(const char *pszName,const char *pszMode)
NDK_FsRead	../env/NDK.h	/^int NDK_FsRead(int nHandle, char *psBuffer, uint unLength );$/;"	p	signature:(int nHandle, char *psBuffer, uint unLength )
NDK_FsRead	../inc/NDK-bak.h	/^int NDK_FsRead(int nHandle, char *psBuffer, uint unLength );$/;"	p	signature:(int nHandle, char *psBuffer, uint unLength )
NDK_FsRemoveDirectory	../env/NDK.h	/^int NDK_FsRemoveDirectory(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsRemoveDirectory	../inc/NDK-bak.h	/^int NDK_FsRemoveDirectory(const char *pszName);$/;"	p	signature:(const char *pszName)
NDK_FsRename	../env/NDK.h	/^int NDK_FsRename(const char *pszSrcName, const char *pszDstName );$/;"	p	signature:(const char *pszSrcName, const char *pszDstName )
NDK_FsRename	../inc/NDK-bak.h	/^int NDK_FsRename(const char *pszsSrcname, const char *pszDstname );$/;"	p	signature:(const char *pszsSrcname, const char *pszDstname )
NDK_FsSeek	../env/NDK.h	/^int NDK_FsSeek(int nHandle, ulong ulDistance, uint unPosition );$/;"	p	signature:(int nHandle, ulong ulDistance, uint unPosition )
NDK_FsSeek	../inc/NDK-bak.h	/^int NDK_FsSeek(int nHandle, ulong ulDistance, uint unPosition );$/;"	p	signature:(int nHandle, ulong ulDistance, uint unPosition )
NDK_FsTell	../env/NDK.h	/^int NDK_FsTell(int nHandle,ulong *pulRet);$/;"	p	signature:(int nHandle,ulong *pulRet)
NDK_FsTell	../inc/NDK-bak.h	/^int NDK_FsTell(int nHandle,ulong *pulRet);$/;"	p	signature:(int nHandle,ulong *pulRet)
NDK_FsTruncate	../env/NDK.h	/^int NDK_FsTruncate(const char *pszPath ,uint unLen );$/;"	p	signature:(const char *pszPath ,uint unLen )
NDK_FsTruncate	../inc/NDK-bak.h	/^int NDK_FsTruncate(const char *pszPath ,uint unLen );$/;"	p	signature:(const char *pszPath ,uint unLen )
NDK_FsWrite	../env/NDK.h	/^int NDK_FsWrite(int nHandle, const char *psBuffer, uint unLength );$/;"	p	signature:(int nHandle, const char *psBuffer, uint unLength )
NDK_FsWrite	../inc/NDK-bak.h	/^int NDK_FsWrite(int nHandle, const char *psBuffer, uint unLength );$/;"	p	signature:(int nHandle, const char *psBuffer, uint unLength )
NDK_GetDnsIp	../env/NDK.h	/^int NDK_GetDnsIp(char *pszDnsIp,const char *pszDnsName);$/;"	p	signature:(char *pszDnsIp,const char *pszDnsName)
NDK_GetDnsIp	../inc/NDK-bak.h	/^int NDK_GetDnsIp(char *pszDnsIp,const char *pszDnsName);$/;"	p	signature:(char *pszDnsIp,const char *pszDnsName)
NDK_GetIgnoreProtocol	../env/NDK.h	/^int NDK_GetIgnoreProtocol(int *pnModeCode);$/;"	p	signature:(int *pnModeCode)
NDK_GetIgnoreProtocol	../inc/NDK-bak.h	/^int NDK_GetIgnoreProtocol(int *pnModecode);$/;"	p	signature:(int *pnModecode)
NDK_GetRfidType	../env/NDK.h	/^int  NDK_GetRfidType(int *pnRfidType);$/;"	p	signature:(int *pnRfidType)
NDK_GetRfidType	../inc/NDK-bak.h	/^int  NDK_GetRfidType(int *pnRfidtype);$/;"	p	signature:(int *pnRfidtype)
NDK_GetSSLBlockingMode	../env/NDK.h	/^int NDK_GetSSLBlockingMode(NDK_HANDLE pvHandle);$/;"	p	signature:(NDK_HANDLE pvHandle)
NDK_GetSSLBlockingMode	../inc/NDK-bak.h	/^int NDK_GetSSLBlockingMode(NDK_HANDLE handle);$/;"	p	signature:(NDK_HANDLE handle)
NDK_GetSSLConnectStatus	../env/NDK.h	/^int NDK_GetSSLConnectStatus(NDK_HANDLE pvHandle, int *pnState);$/;"	p	signature:(NDK_HANDLE pvHandle, int *pnState)
NDK_GetSSLConnectStatus	../inc/NDK-bak.h	/^int NDK_GetSSLConnectStatus(NDK_HANDLE handle, int *state);$/;"	p	signature:(NDK_HANDLE handle, int *state)
NDK_GetThreadState	../env/NDK.h	/^int NDK_GetThreadState( NDK_HANDLE pvHandle, EM_THREAD_STATE *pemState );$/;"	p	signature:( NDK_HANDLE pvHandle, EM_THREAD_STATE *pemState )
NDK_GetThreadState	../inc/NDK-bak.h	/^int NDK_GetThreadState( NDK_HANDLE pvHandle, EM_THREAD_STATE *pemState );$/;"	p	signature:( NDK_HANDLE pvHandle, EM_THREAD_STATE *pemState )
NDK_GetWiFiSec	../inc/NDK-bak.h	/^int NDK_GetWiFiSec(const char *pszESSIDName, EM_WIFI_NET_SEC *pemSec);$/;"	p	signature:(const char *pszESSIDName, EM_WIFI_NET_SEC *pemSec)
NDK_Getlibver	../env/NDK.h	/^int NDK_Getlibver(char *pszVer);$/;"	p	signature:(char *pszVer)
NDK_Getlibver	../inc/NDK-bak.h	/^int NDK_Getlibver(char *pszVer);$/;"	p	signature:(char *pszVer)
NDK_HANDLE	../env/NDK.h	/^typedef void *	NDK_HANDLE;         \/\/\/<SSL、Timer句柄$/;"	t
NDK_HANDLE	../inc/NDK-bak.h	/^typedef void *	NDK_HANDLE;         \/\/\/<SSL Timer handle$/;"	t
NDK_HexToAsc	../env/NDK.h	/^int NDK_HexToAsc (const uchar* psBcdBuf, int nLen, uchar ucType, uchar* pszAsciiBuf);$/;"	p	signature:(const uchar* psBcdBuf, int nLen, uchar ucType, uchar* pszAsciiBuf)
NDK_HexToAsc	../inc/NDK-bak.h	/^int NDK_HexToAsc (const uchar* psBcdBuf, int nLen, uchar ucType, uchar* pszAsciiBuf);$/;"	p	signature:(const uchar* psBcdBuf, int nLen, uchar ucType, uchar* pszAsciiBuf)
NDK_IccDetect	../env/NDK.h	/^int NDK_IccDetect(int *pnSta);$/;"	p	signature:(int *pnSta)
NDK_IccDetect	../inc/NDK-bak.h	/^int NDK_IccDetect(int *pnSta);$/;"	p	signature:(int *pnSta)
NDK_IccGetType	../env/NDK.h	/^int NDK_IccGetType(EM_ICTYPE *pemIcType);$/;"	p	signature:(EM_ICTYPE *pemIcType)
NDK_IccGetType	../inc/NDK-bak.h	/^int NDK_IccGetType(EM_ICTYPE *pemIctype);$/;"	p	signature:(EM_ICTYPE *pemIctype)
NDK_IccGetVersion	../env/NDK.h	/^int  NDK_IccGetVersion(char *pszVersion);$/;"	p	signature:(char *pszVersion)
NDK_IccGetVersion	../inc/NDK-bak.h	/^int  NDK_IccGetVersion(char *pszVersion);$/;"	p	signature:(char *pszVersion)
NDK_IccPowerDown	../env/NDK.h	/^int NDK_IccPowerDown(EM_ICTYPE emIcType);$/;"	p	signature:(EM_ICTYPE emIcType)
NDK_IccPowerDown	../inc/NDK-bak.h	/^int NDK_IccPowerDown(EM_ICTYPE emIctype);$/;"	p	signature:(EM_ICTYPE emIctype)
NDK_IccPowerUp	../env/NDK.h	/^int NDK_IccPowerUp (EM_ICTYPE emIcType, uchar *psAtrBuf,int *pnAtrLen);$/;"	p	signature:(EM_ICTYPE emIcType, uchar *psAtrBuf,int *pnAtrLen)
NDK_IccPowerUp	../inc/NDK-bak.h	/^int NDK_IccPowerUp (EM_ICTYPE emIctype, uchar *psAtrbuf,int *pnAtrlen);$/;"	p	signature:(EM_ICTYPE emIctype, uchar *psAtrbuf,int *pnAtrlen)
NDK_IccSetType	../env/NDK.h	/^int NDK_IccSetType(EM_ICTYPE emIcType);$/;"	p	signature:(EM_ICTYPE emIcType)
NDK_IccSetType	../inc/NDK-bak.h	/^int NDK_IccSetType(EM_ICTYPE emIctype);$/;"	p	signature:(EM_ICTYPE emIctype)
NDK_Iccrw	../env/NDK.h	/^int NDK_Iccrw(EM_ICTYPE emIcType, int nSendLen,  uchar *psSendBuf, int *pnRecvLen,  uchar *psRecvBuf);$/;"	p	signature:(EM_ICTYPE emIcType, int nSendLen, uchar *psSendBuf, int *pnRecvLen, uchar *psRecvBuf)
NDK_Iccrw	../inc/NDK-bak.h	/^int NDK_Iccrw(EM_ICTYPE emIctype, int nSendlen,  uchar *psSendbuf, int *pnRecvlen,  uchar *psRecebuf);$/;"	p	signature:(EM_ICTYPE emIctype, int nSendlen, uchar *psSendbuf, int *pnRecvlen, uchar *psRecebuf)
NDK_IncNum	../env/NDK.h	/^int NDK_IncNum (uchar * pszStrNum );$/;"	p	signature:(uchar * pszStrNum )
NDK_IncNum	../inc/NDK-bak.h	/^int NDK_IncNum (uchar * pszStrNum );$/;"	p	signature:(uchar * pszStrNum )
NDK_IntToBcd	../env/NDK.h	/^int NDK_IntToBcd(uchar *psBcd, int *pnBcdLen, int nNum);$/;"	p	signature:(uchar *psBcd, int *pnBcdLen, int nNum)
NDK_IntToBcd	../inc/NDK-bak.h	/^int NDK_IntToBcd(uchar *psBcd, int *pnBcdLen, int nNum);$/;"	p	signature:(uchar *psBcd, int *pnBcdLen, int nNum)
NDK_IntToC2	../env/NDK.h	/^int NDK_IntToC2(uchar* psBuf, uint unNum );$/;"	p	signature:(uchar* psBuf, uint unNum )
NDK_IntToC2	../inc/NDK-bak.h	/^int NDK_IntToC2(uchar* psBuf, uint unNum );$/;"	p	signature:(uchar* psBuf, uint unNum )
NDK_IntToC4	../env/NDK.h	/^int NDK_IntToC4 (uchar* psBuf, uint unNum );$/;"	p	signature:(uchar* psBuf, uint unNum )
NDK_IntToC4	../inc/NDK-bak.h	/^int NDK_IntToC4 (uchar* psBuf, uint unNum );$/;"	p	signature:(uchar* psBuf, uint unNum )
NDK_IsDigitChar	../env/NDK.h	/^int NDK_IsDigitChar(uchar ucCh);$/;"	p	signature:(uchar ucCh)
NDK_IsDigitChar	../inc/NDK-bak.h	/^int NDK_IsDigitChar(uchar ch);$/;"	p	signature:(uchar ch)
NDK_IsDigitStr	../env/NDK.h	/^int NDK_IsDigitStr(const uchar *pszString);$/;"	p	signature:(const uchar *pszString)
NDK_IsDigitStr	../inc/NDK-bak.h	/^int NDK_IsDigitStr(const uchar *pszString);$/;"	p	signature:(const uchar *pszString)
NDK_IsLeapYear	../env/NDK.h	/^int NDK_IsLeapYear(int nYear);$/;"	p	signature:(int nYear)
NDK_IsLeapYear	../inc/NDK-bak.h	/^int NDK_IsLeapYear(int nYear);$/;"	p	signature:(int nYear)
NDK_IsValidDate	../env/NDK.h	/^int NDK_IsValidDate(const uchar *pszDate);$/;"	p	signature:(const uchar *pszDate)
NDK_IsValidDate	../inc/NDK-bak.h	/^int NDK_IsValidDate(const uchar *pszDate);$/;"	p	signature:(const uchar *pszDate)
NDK_KbFlush	../env/NDK.h	/^int NDK_KbFlush(void);$/;"	p	signature:(void)
NDK_KbFlush	../inc/NDK-bak.h	/^int NDK_KbFlush(void);$/;"	p	signature:(void)
NDK_KbGetCode	../env/NDK.h	/^int NDK_KbGetCode(uint unTime, int *pnCode);$/;"	p	signature:(uint unTime, int *pnCode)
NDK_KbGetCode	../inc/NDK-bak.h	/^int NDK_KbGetCode(uint unTime, int *pnCode);$/;"	p	signature:(uint unTime, int *pnCode)
NDK_KbGetInput	../env/NDK.h	/^int NDK_KbGetInput(char *pszBuf,uint unMin,uint unMaxLen,uint *punLen,EM_INPUTDISP emMode,uint unWaitTime, EM_INPUT_CONTRL emControl);$/;"	p	signature:(char *pszBuf,uint unMin,uint unMaxLen,uint *punLen,EM_INPUTDISP emMode,uint unWaitTime, EM_INPUT_CONTRL emControl)
NDK_KbGetInput	../inc/NDK-bak.h	/^int NDK_KbGetInput(char *pszBuf,uint unMin,uint unMaxlen,uint *punLen,EM_INPUTDISP emMode,uint unWaittime, EM_INPUT_CONTRL emControl);$/;"	p	signature:(char *pszBuf,uint unMin,uint unMaxlen,uint *punLen,EM_INPUTDISP emMode,uint unWaittime, EM_INPUT_CONTRL emControl)
NDK_KbGetPad	../env/NDK.h	/^int NDK_KbGetPad(ST_PADDATA *pstPaddata,uint unTimeOut);$/;"	p	signature:(ST_PADDATA *pstPaddata,uint unTimeOut)
NDK_KbGetSwitch	../env/NDK.h	/^int NDK_KbGetSwitch(int nMode,int *pnState);$/;"	p	signature:(int nMode,int *pnState)
NDK_KbGetSwitch	../inc/NDK-bak.h	/^int NDK_KbGetSwitch(int nMode,int *pnState);$/;"	p	signature:(int nMode,int *pnState)
NDK_KbHZInput	../env/NDK.h	/^int NDK_KbHZInput(char *pszS,uint unMaxLen,EM_IME emMethod);$/;"	p	signature:(char *pszS,uint unMaxLen,EM_IME emMethod)
NDK_KbHZInput	../inc/NDK-bak.h	/^int NDK_KbHZInput(char *pszS,uint unMaxlen,EM_IME emMethod);$/;"	p	signature:(char *pszS,uint unMaxlen,EM_IME emMethod)
NDK_KbHit	../env/NDK.h	/^int NDK_KbHit(int *pnCode);$/;"	p	signature:(int *pnCode)
NDK_KbHit	../inc/NDK-bak.h	/^int NDK_KbHit(int *pnCode);$/;"	p	signature:(int *pnCode)
NDK_KbSwitch	../env/NDK.h	/^int NDK_KbSwitch(int nSelect, int nMode,int *pnState);$/;"	p	signature:(int nSelect, int nMode,int *pnState)
NDK_KbSwitch	../inc/NDK-bak.h	/^int NDK_KbSwitch(int nSelect, int nMode,int *pnState);$/;"	p	signature:(int nSelect, int nMode,int *pnState)
NDK_LedSetFlickParam	../env/NDK.h	/^int NDK_LedSetFlickParam(EM_LED emStatus,ST_LED_FLICK stFlickParam);$/;"	p	signature:(EM_LED emStatus,ST_LED_FLICK stFlickParam)
NDK_LedStatus	../env/NDK.h	/^int NDK_LedStatus(EM_LED emStatus);$/;"	p	signature:(EM_LED emStatus)
NDK_LedStatus	../inc/NDK-bak.h	/^int NDK_LedStatus(EM_LED emStatus);$/;"	p	signature:(EM_LED emStatus)
NDK_LeftTrim	../env/NDK.h	/^int NDK_LeftTrim(uchar *pszBuf);$/;"	p	signature:(uchar *pszBuf)
NDK_LeftTrim	../inc/NDK-bak.h	/^int NDK_LeftTrim(uchar *pszBuf);$/;"	p	signature:(uchar *pszBuf)
NDK_LoadClientCertificate	../env/NDK.h	/^int NDK_LoadClientCertificate(NDK_HANDLE pvHandle, const char *psFileName, int nFormat);$/;"	p	signature:(NDK_HANDLE pvHandle, const char *psFileName, int nFormat)
NDK_LoadClientCertificate	../inc/NDK-bak.h	/^int NDK_LoadClientCertificate(NDK_HANDLE handle, const char *filename, int format);$/;"	p	signature:(NDK_HANDLE handle, const char *filename, int format)
NDK_LoadClientPrivateKey	../env/NDK.h	/^int NDK_LoadClientPrivateKey(NDK_HANDLE pvHandle, const char *psFileName, int nFormat,char *pszPassword);$/;"	p	signature:(NDK_HANDLE pvHandle, const char *psFileName, int nFormat,char *pszPassword)
NDK_LoadClientPrivateKey	../inc/NDK-bak.h	/^int NDK_LoadClientPrivateKey(NDK_HANDLE handle, const char *filename, int format,char *password);$/;"	p	signature:(NDK_HANDLE handle, const char *filename, int format,char *password)
NDK_LoadServerCertificate	../env/NDK.h	/^int NDK_LoadServerCertificate(NDK_HANDLE pvHandle, const char *psFileName, int nFormat);$/;"	p	signature:(NDK_HANDLE pvHandle, const char *psFileName, int nFormat)
NDK_LoadServerCertificate	../inc/NDK-bak.h	/^int NDK_LoadServerCertificate(NDK_HANDLE handle, const char *filename, int format);$/;"	p	signature:(NDK_HANDLE handle, const char *filename, int format)
NDK_LockSemaphore	../env/NDK.h	/^int NDK_LockSemaphore( NDK_HANDLE pvHandle );$/;"	p	signature:( NDK_HANDLE pvHandle )
NDK_LockSemaphore	../inc/NDK-bak.h	/^int NDK_LockSemaphore( NDK_HANDLE handle );$/;"	p	signature:( NDK_HANDLE handle )
NDK_M1Anti	../env/NDK.h	/^int NDK_M1Anti(int *pnDataLen, uchar *psDataBuf);$/;"	p	signature:(int *pnDataLen, uchar *psDataBuf)
NDK_M1Anti	../inc/NDK-bak.h	/^int NDK_M1Anti(int *pnDatalen, uchar *psDatabuf);$/;"	p	signature:(int *pnDatalen, uchar *psDatabuf)
NDK_M1Anti_SEL	../env/NDK.h	/^int  NDK_M1Anti_SEL(uchar ucSelCode, int *pnDataLen, uchar *psDataBuf);$/;"	p	signature:(uchar ucSelCode, int *pnDataLen, uchar *psDataBuf)
NDK_M1Decrement	../env/NDK.h	/^int NDK_M1Decrement(uchar ucBlockNum, int nDataLen, uchar *psDataBuf);$/;"	p	signature:(uchar ucBlockNum, int nDataLen, uchar *psDataBuf)
NDK_M1Decrement	../inc/NDK-bak.h	/^int NDK_M1Decrement(uchar ucBlocknum, int nDanalen, uchar *psDatabuf);$/;"	p	signature:(uchar ucBlocknum, int nDanalen, uchar *psDatabuf)
NDK_M1ExternalAuthen	../env/NDK.h	/^int NDK_M1ExternalAuthen(int nUidLen, uchar *psUidBuf, uchar ucKeyType, uchar *psKeyData, uchar ucBlockNum);$/;"	p	signature:(int nUidLen, uchar *psUidBuf, uchar ucKeyType, uchar *psKeyData, uchar ucBlockNum)
NDK_M1ExternalAuthen	../inc/NDK-bak.h	/^int NDK_M1ExternalAuthen(int nUidlen, uchar *psUidbuf, uchar ucKeytype, uchar *psKeydata, uchar ucBlocknum);$/;"	p	signature:(int nUidlen, uchar *psUidbuf, uchar ucKeytype, uchar *psKeydata, uchar ucBlocknum)
NDK_M1Increment	../env/NDK.h	/^int NDK_M1Increment(uchar ucBlockNum, int nDataLen, uchar *psDataBuf);$/;"	p	signature:(uchar ucBlockNum, int nDataLen, uchar *psDataBuf)
NDK_M1Increment	../inc/NDK-bak.h	/^int NDK_M1Increment(uchar ucBlocknum, int nDatalen, uchar *psDatabuf);$/;"	p	signature:(uchar ucBlocknum, int nDatalen, uchar *psDatabuf)
NDK_M1InternalAuthen	../env/NDK.h	/^int NDK_M1InternalAuthen(int nUidLen, uchar *psUidBuf, uchar ucKeyType, uchar ucBlockNum);$/;"	p	signature:(int nUidLen, uchar *psUidBuf, uchar ucKeyType, uchar ucBlockNum)
NDK_M1InternalAuthen	../inc/NDK-bak.h	/^int NDK_M1InternalAuthen(int nUidlen, uchar *psUidbuf, uchar ucKeytype, uchar ucBlocknum);$/;"	p	signature:(int nUidlen, uchar *psUidbuf, uchar ucKeytype, uchar ucBlocknum)
NDK_M1KeyLoad	../env/NDK.h	/^int NDK_M1KeyLoad(uchar ucKeyType,  uchar ucKeyNum);$/;"	p	signature:(uchar ucKeyType, uchar ucKeyNum)
NDK_M1KeyLoad	../inc/NDK-bak.h	/^int NDK_M1KeyLoad(uchar ucKeytype,  uchar ucKeynum);$/;"	p	signature:(uchar ucKeytype, uchar ucKeynum)
NDK_M1KeyStore	../env/NDK.h	/^int NDK_M1KeyStore(uchar ucKeyType,  uchar ucKeyNum, uchar *psKeyData);$/;"	p	signature:(uchar ucKeyType, uchar ucKeyNum, uchar *psKeyData)
NDK_M1KeyStore	../inc/NDK-bak.h	/^int NDK_M1KeyStore(uchar ucKeytype,  uchar ucKeynum, uchar *psKeydata);$/;"	p	signature:(uchar ucKeytype, uchar ucKeynum, uchar *psKeydata)
NDK_M1Read	../env/NDK.h	/^int NDK_M1Read(uchar ucBlockNum, int *pnDataLen, uchar *psBlockData);$/;"	p	signature:(uchar ucBlockNum, int *pnDataLen, uchar *psBlockData)
NDK_M1Read	../inc/NDK-bak.h	/^int NDK_M1Read(uchar ucBlocknum, int *pnDatalen, uchar *psBlockdata);$/;"	p	signature:(uchar ucBlocknum, int *pnDatalen, uchar *psBlockdata)
NDK_M1Request	../env/NDK.h	/^int NDK_M1Request(uchar ucReqCode, int *pnDataLen, uchar *psDataBuf);$/;"	p	signature:(uchar ucReqCode, int *pnDataLen, uchar *psDataBuf)
NDK_M1Request	../inc/NDK-bak.h	/^int NDK_M1Request(uchar ucReqcode, int *pnDatalen, uchar *psDatabuf);$/;"	p	signature:(uchar ucReqcode, int *pnDatalen, uchar *psDatabuf)
NDK_M1Restore	../env/NDK.h	/^int NDK_M1Restore(uchar ucBlockNum);$/;"	p	signature:(uchar ucBlockNum)
NDK_M1Restore	../inc/NDK-bak.h	/^int NDK_M1Restore(uchar ucBlocknum);$/;"	p	signature:(uchar ucBlocknum)
NDK_M1Select	../env/NDK.h	/^int NDK_M1Select(int nUidLen, uchar *psUidBuf, uchar *psSakBuf);$/;"	p	signature:(int nUidLen, uchar *psUidBuf, uchar *psSakBuf)
NDK_M1Select	../inc/NDK-bak.h	/^int NDK_M1Select(int nUidlen, uchar *pnUidbuf, uchar *psSakbuf);$/;"	p	signature:(int nUidlen, uchar *pnUidbuf, uchar *psSakbuf)
NDK_M1Select_SEL	../env/NDK.h	/^int  NDK_M1Select_SEL(uchar ucSelCode, int nUidLen, uchar *psUidBuf, uchar *psSakBuf);$/;"	p	signature:(uchar ucSelCode, int nUidLen, uchar *psUidBuf, uchar *psSakBuf)
NDK_M1Transfer	../env/NDK.h	/^int NDK_M1Transfer(uchar ucBlockNum);$/;"	p	signature:(uchar ucBlockNum)
NDK_M1Transfer	../inc/NDK-bak.h	/^int NDK_M1Transfer(uchar ucBlocknum);$/;"	p	signature:(uchar ucBlocknum)
NDK_M1Write	../env/NDK.h	/^int NDK_M1Write(uchar ucBlockNum, int *pnDataLen, uchar *psBlockData);$/;"	p	signature:(uchar ucBlockNum, int *pnDataLen, uchar *psBlockData)
NDK_M1Write	../inc/NDK-bak.h	/^int NDK_M1Write(uchar ucBlocknum, int *pnDatalen, uchar *psBlockdata);$/;"	p	signature:(uchar ucBlocknum, int *pnDatalen, uchar *psBlockdata)
NDK_MagClose	../env/NDK.h	/^int NDK_MagClose(void);$/;"	p	signature:(void)
NDK_MagClose	../inc/NDK-bak.h	/^int NDK_MagClose(void);$/;"	p	signature:(void)
NDK_MagOpen	../env/NDK.h	/^int NDK_MagOpen(void);$/;"	p	signature:(void)
NDK_MagOpen	../inc/NDK-bak.h	/^int NDK_MagOpen(void);$/;"	p	signature:(void)
NDK_MagReadNormal	../env/NDK.h	/^int NDK_MagReadNormal(char *pszTk1, char *pszTk2, char *pszTk3, int *pnErrorCode);$/;"	p	signature:(char *pszTk1, char *pszTk2, char *pszTk3, int *pnErrorCode)
NDK_MagReadNormal	../inc/NDK-bak.h	/^int NDK_MagReadNormal(char *pszTk1, char *pszTk2, char *pszTk3, int *pnErrorCode);$/;"	p	signature:(char *pszTk1, char *pszTk2, char *pszTk3, int *pnErrorCode)
NDK_MagReadRaw	../env/NDK.h	/^int NDK_MagReadRaw(uchar *pszTk1, ushort* pusTk1Len, uchar *pszTk2, ushort* pusTk2Len,uchar *pszTk3, ushort* pusTk3Len );$/;"	p	signature:(uchar *pszTk1, ushort* pusTk1Len, uchar *pszTk2, ushort* pusTk2Len,uchar *pszTk3, ushort* pusTk3Len )
NDK_MagReadRaw	../inc/NDK-bak.h	/^int NDK_MagReadRaw(uchar *pszTk1, ushort* punTk1Len, uchar *pszTk2, ushort* punTk2Len,uchar *pszTk3, ushort* punTk3Len );$/;"	p	signature:(uchar *pszTk1, ushort* punTk1Len, uchar *pszTk2, ushort* punTk2Len,uchar *pszTk3, ushort* punTk3Len )
NDK_MagReset	../env/NDK.h	/^int NDK_MagReset(void);$/;"	p	signature:(void)
NDK_MagReset	../inc/NDK-bak.h	/^int NDK_MagReset(void);$/;"	p	signature:(void)
NDK_MagSwiped	../env/NDK.h	/^int NDK_MagSwiped(uchar * psSwiped);$/;"	p	signature:(uchar * psSwiped)
NDK_MagSwiped	../inc/NDK-bak.h	/^int NDK_MagSwiped(uchar * pcSwiped);$/;"	p	signature:(uchar * pcSwiped)
NDK_MdmAsynInit	../env/NDK.h	/^int NDK_MdmAsynInit(EM_MDM_PatchType emType);$/;"	p	signature:(EM_MDM_PatchType emType)
NDK_MdmAsynInit	../inc/NDK-bak.h	/^int NDK_MdmAsynInit(EM_MDM_PatchType nType);$/;"	p	signature:(EM_MDM_PatchType nType)
NDK_MdmCheck	../env/NDK.h	/^int NDK_MdmCheck(EM_MDMSTATUS  *pemStatus);$/;"	p	signature:(EM_MDMSTATUS *pemStatus)
NDK_MdmCheck	../inc/NDK-bak.h	/^int NDK_MdmCheck(EM_MDMSTATUS  *pemStatus);$/;"	p	signature:(EM_MDMSTATUS *pemStatus)
NDK_MdmClrbuf	../env/NDK.h	/^int NDK_MdmClrbuf(void);$/;"	p	signature:(void)
NDK_MdmClrbuf	../inc/NDK-bak.h	/^int NDK_MdmClrbuf(void);$/;"	p	signature:(void)
NDK_MdmDial	../env/NDK.h	/^int NDK_MdmDial(const char * pszDailNum);$/;"	p	signature:(const char * pszDailNum)
NDK_MdmDial	../inc/NDK-bak.h	/^int NDK_MdmDial(const char * pszDailNum);$/;"	p	signature:(const char * pszDailNum)
NDK_MdmExCommand	../env/NDK.h	/^int NDK_MdmExCommand(uchar *psCmdStr,uchar *pszRespData,uint *punLen,uint unTimeout);$/;"	p	signature:(uchar *psCmdStr,uchar *pszRespData,uint *punLen,uint unTimeout)
NDK_MdmExCommand	../inc/NDK-bak.h	/^int NDK_MdmExCommand(uchar *pucCmdstr,uchar *pszRespData,uint *punLen,uint unTimeout);$/;"	p	signature:(uchar *pucCmdstr,uchar *pszRespData,uint *punLen,uint unTimeout)
NDK_MdmGetreadlen	../env/NDK.h	/^int NDK_MdmGetreadlen(uint *punReadLen);$/;"	p	signature:(uint *punReadLen)
NDK_MdmGetreadlen	../inc/NDK-bak.h	/^int NDK_MdmGetreadlen(uint *punReadlen);$/;"	p	signature:(uint *punReadlen)
NDK_MdmHangup	../env/NDK.h	/^int NDK_MdmHangup(void);$/;"	p	signature:(void)
NDK_MdmHangup	../inc/NDK-bak.h	/^int NDK_MdmHangup(void);$/;"	p	signature:(void)
NDK_MdmRead	../env/NDK.h	/^int NDK_MdmRead(char  *pszData,uint *punDataLen,uint unSenconds);$/;"	p	signature:(char *pszData,uint *punDataLen,uint unSenconds)
NDK_MdmRead	../inc/NDK-bak.h	/^int NDK_MdmRead(char  *pszData,uint *punDatalen,uint unSenconds);$/;"	p	signature:(char *pszData,uint *punDatalen,uint unSenconds)
NDK_MdmReset	../env/NDK.h	/^int NDK_MdmReset(void);$/;"	p	signature:(void)
NDK_MdmReset	../inc/NDK-bak.h	/^int NDK_MdmReset(void);$/;"	p	signature:(void)
NDK_MdmSdlcInit	../env/NDK.h	/^int NDK_MdmSdlcInit(EM_MDM_PatchType emType);$/;"	p	signature:(EM_MDM_PatchType emType)
NDK_MdmSdlcInit	../inc/NDK-bak.h	/^int NDK_MdmSdlcInit(EM_MDM_PatchType nType);$/;"	p	signature:(EM_MDM_PatchType nType)
NDK_MdmWrite	../env/NDK.h	/^int NDK_MdmWrite(const char *pszData,uint unDataLen);$/;"	p	signature:(const char *pszData,uint unDataLen)
NDK_MdmWrite	../inc/NDK-bak.h	/^int NDK_MdmWrite(const char *pszData,uint unDatalen);$/;"	p	signature:(const char *pszData,uint unDatalen)
NDK_MonthDays	../env/NDK.h	/^int NDK_MonthDays(int nYear, int nMon, int *pnDays);$/;"	p	signature:(int nYear, int nMon, int *pnDays)
NDK_MonthDays	../inc/NDK-bak.h	/^int NDK_MonthDays(int nYear, int nMon, int *pnDays);$/;"	p	signature:(int nYear, int nMon, int *pnDays)
NDK_NOWAIT	../env/NDK.h	/^	NDK_NOWAIT = 0,				       \/\/\/< 非阻塞$/;"	e	enum:__anon62
NDK_NOWAIT	../inc/NDK-bak.h	/^	NDK_NOWAIT = 0,				       \/\/\/< non-blocking$/;"	e	enum:__anon137
NDK_NetAddRouterTable	../env/NDK.h	/^int NDK_NetAddRouterTable(EM_COMM_TYPE emCommType,char *pszDestIP);$/;"	p	signature:(EM_COMM_TYPE emCommType,char *pszDestIP)
NDK_NetDHCP	../env/NDK.h	/^int NDK_NetDHCP(void);$/;"	p	signature:(void)
NDK_NetDHCP	../inc/NDK-bak.h	/^int NDK_NetDHCP(void);$/;"	p	signature:(void)
NDK_NetGetAddr	../env/NDK.h	/^int NDK_NetGetAddr(EM_COMM_TYPE emComtype,char *pszIp, char *pszMask, char *pszGateway, char *pszDns);$/;"	p	signature:(EM_COMM_TYPE emComtype,char *pszIp, char *pszMask, char *pszGateway, char *pszDns)
NDK_NetPing	../env/NDK.h	/^int NDK_NetPing(char *pszIp, uint nTimeout);$/;"	p	signature:(char *pszIp, uint nTimeout)
NDK_NetPing	../inc/NDK-bak.h	/^int NDK_NetPing(char *pszIp, uint nTimeout);$/;"	p	signature:(char *pszIp, uint nTimeout)
NDK_OK	../env/NDK.h	/^	NDK_OK,							\/**<操作成功*\/$/;"	e	enum:__anon1
NDK_OK	../inc/NDK-bak.h	/^	NDK_OK,					\/**<operation succeeded*\/$/;"	e	enum:__anon88
NDK_OpenSSLSocket	../env/NDK.h	/^NDK_HANDLE NDK_OpenSSLSocket(int nType,int nAuthOpt,int* pnCipher);$/;"	p	signature:(int nType,int nAuthOpt,int* pnCipher)
NDK_OpenSSLSocket	../inc/NDK-bak.h	/^NDK_HANDLE NDK_OpenSSLSocket(int type,int auth_opt,int* cipher);$/;"	p	signature:(int type,int auth_opt,int* cipher)
NDK_PiccQuickRequest	../env/NDK.h	/^int NDK_PiccQuickRequest(int nModeCode);$/;"	p	signature:(int nModeCode)
NDK_PiccQuickRequest	../inc/NDK-bak.h	/^int NDK_PiccQuickRequest(int nModecode);$/;"	p	signature:(int nModecode)
NDK_PortClose	../env/NDK.h	/^int NDK_PortClose(EM_PORT_NUM emPort);$/;"	p	signature:(EM_PORT_NUM emPort)
NDK_PortClose	../inc/NDK-bak.h	/^int NDK_PortClose(EM_PORT_NUM emPort);$/;"	p	signature:(EM_PORT_NUM emPort)
NDK_PortClrBuf	../env/NDK.h	/^int NDK_PortClrBuf(EM_PORT_NUM emPort);$/;"	p	signature:(EM_PORT_NUM emPort)
NDK_PortClrBuf	../inc/NDK-bak.h	/^int NDK_PortClrBuf(EM_PORT_NUM emPort);$/;"	p	signature:(EM_PORT_NUM emPort)
NDK_PortOpen	../env/NDK.h	/^int NDK_PortOpen(EM_PORT_NUM emPort, const char *pszAttr);$/;"	p	signature:(EM_PORT_NUM emPort, const char *pszAttr)
NDK_PortOpen	../inc/NDK-bak.h	/^int NDK_PortOpen(EM_PORT_NUM emPort, const char *pszAttr);$/;"	p	signature:(EM_PORT_NUM emPort, const char *pszAttr)
NDK_PortRead	../env/NDK.h	/^int NDK_PortRead(EM_PORT_NUM emPort, uint unLen, char *pszOutBuf,int nTimeoutMs, int *pnReadLen);$/;"	p	signature:(EM_PORT_NUM emPort, uint unLen, char *pszOutBuf,int nTimeoutMs, int *pnReadLen)
NDK_PortRead	../inc/NDK-bak.h	/^int NDK_PortRead(EM_PORT_NUM emPort, uint unLen, char *pszOutbuf,int nTimeoutMs, int *pnReadlen);$/;"	p	signature:(EM_PORT_NUM emPort, uint unLen, char *pszOutbuf,int nTimeoutMs, int *pnReadlen)
NDK_PortReadLen	../env/NDK.h	/^int NDK_PortReadLen(EM_PORT_NUM emPort,int *pnReadLen);$/;"	p	signature:(EM_PORT_NUM emPort,int *pnReadLen)
NDK_PortReadLen	../inc/NDK-bak.h	/^int NDK_PortReadLen(EM_PORT_NUM emPort,int *pnReadlen);$/;"	p	signature:(EM_PORT_NUM emPort,int *pnReadlen)
NDK_PortTxSendOver	../env/NDK.h	/^int NDK_PortTxSendOver(EM_PORT_NUM emPort);$/;"	p	signature:(EM_PORT_NUM emPort)
NDK_PortTxSendOver	../inc/NDK-bak.h	/^int NDK_PortTxSendOver(EM_PORT_NUM emPort);$/;"	p	signature:(EM_PORT_NUM emPort)
NDK_PortWrite	../env/NDK.h	/^int NDK_PortWrite(EM_PORT_NUM emPort, uint unLen,const char *pszInbuf);$/;"	p	signature:(EM_PORT_NUM emPort, uint unLen,const char *pszInbuf)
NDK_PortWrite	../inc/NDK-bak.h	/^int NDK_PortWrite(EM_PORT_NUM emPort, uint unLen,const char *pszInbuf);$/;"	p	signature:(EM_PORT_NUM emPort, uint unLen,const char *pszInbuf)
NDK_PppAddrChange	../env/NDK.h	/^int NDK_PppAddrChange(register const char *pszIp, ulong *pulIpAddr);$/;"	p	signature:(register const char *pszIp, ulong *pulIpAddr)
NDK_PppAddrChange	../inc/NDK-bak.h	/^int NDK_PppAddrChange(register const char *pszIp, ulong *pulIpAddr);$/;"	p	signature:(register const char *pszIp, ulong *pulIpAddr)
NDK_PppCheck	../env/NDK.h	/^int NDK_PppCheck(EM_PPP_STATUS *pemStatus, int *pnErrCode);$/;"	p	signature:(EM_PPP_STATUS *pemStatus, int *pnErrCode)
NDK_PppCheck	../inc/NDK-bak.h	/^int NDK_PppCheck(EM_PPP_STATUS *pemStatus, int *pnErrCode);$/;"	p	signature:(EM_PPP_STATUS *pemStatus, int *pnErrCode)
NDK_PppDial	../env/NDK.h	/^int NDK_PppDial(const char *pszUserName,const char *pszPassword);$/;"	p	signature:(const char *pszUserName,const char *pszPassword)
NDK_PppDial	../inc/NDK-bak.h	/^int NDK_PppDial(const char *pszUsername,const char *pszPassword);$/;"	p	signature:(const char *pszUsername,const char *pszPassword)
NDK_PppGetAddr	../env/NDK.h	/^int NDK_PppGetAddr(ulong *pulLocalAddr, ulong *pulHostAddr);$/;"	p	signature:(ulong *pulLocalAddr, ulong *pulHostAddr)
NDK_PppGetAddr	../inc/NDK-bak.h	/^int NDK_PppGetAddr(ulong *pulLocalAddr, ulong *pulHostAddr);$/;"	p	signature:(ulong *pulLocalAddr, ulong *pulHostAddr)
NDK_PppHangup	../env/NDK.h	/^int NDK_PppHangup(int nHangupType);$/;"	p	signature:(int nHangupType)
NDK_PppHangup	../inc/NDK-bak.h	/^int NDK_PppHangup(int nHangupType);$/;"	p	signature:(int nHangupType)
NDK_PppSetCfg	../env/NDK.h	/^int NDK_PppSetCfg(ST_PPP_CFG *pstPPPCfg, uint unValidLen);$/;"	p	signature:(ST_PPP_CFG *pstPPPCfg, uint unValidLen)
NDK_PppSetCfg	../inc/NDK-bak.h	/^int NDK_PppSetCfg(ST_PPP_CFG *pstPPPCfg, uint nuValidLen);$/;"	p	signature:(ST_PPP_CFG *pstPPPCfg, uint nuValidLen)
NDK_PrnBDFStr	../env/NDK.h	/^int NDK_PrnBDFStr(ushort *pusText);$/;"	p	signature:(ushort *pusText)
NDK_PrnBDFStr	../inc/NDK-bak.h	/^int NDK_PrnBDFStr(ushort *pusText);$/;"	p	signature:(ushort *pusText)
NDK_PrnFeedByPixel	../env/NDK.h	/^int NDK_PrnFeedByPixel(uint unPixel);$/;"	p	signature:(uint unPixel)
NDK_PrnFeedByPixel	../inc/NDK-bak.h	/^int NDK_PrnFeedByPixel(uint unPixel);$/;"	p	signature:(uint unPixel)
NDK_PrnFeedPaper	../env/NDK.h	/^int NDK_PrnFeedPaper(EM_PRN_FEEDPAPER emType);$/;"	p	signature:(EM_PRN_FEEDPAPER emType)
NDK_PrnFontRegister	../env/NDK.h	/^int NDK_PrnFontRegister(ST_PRN_FONTMSG *pstMsg);$/;"	p	signature:(ST_PRN_FONTMSG *pstMsg)
NDK_PrnFontRegister	../inc/NDK-bak.h	/^int NDK_PrnFontRegister(ST_PRN_FONTMSG *pstMsg);$/;"	p	signature:(ST_PRN_FONTMSG *pstMsg)
NDK_PrnGetAd	../env/NDK.h	/^int NDK_PrnGetAd(EM_PRN_CHANELNUM emChanelNum,uint *punAdValue);$/;"	p	signature:(EM_PRN_CHANELNUM emChanelNum,uint *punAdValue)
NDK_PrnGetDotLine	../env/NDK.h	/^int NDK_PrnGetDotLine(uint *punLine);$/;"	p	signature:(uint *punLine)
NDK_PrnGetDotLine	../inc/NDK-bak.h	/^int NDK_PrnGetDotLine(uint *punLine);$/;"	p	signature:(uint *punLine)
NDK_PrnGetStatus	../env/NDK.h	/^int NDK_PrnGetStatus(EM_PRN_STATUS *pemStatus);$/;"	p	signature:(EM_PRN_STATUS *pemStatus)
NDK_PrnGetStatus	../inc/NDK-bak.h	/^int NDK_PrnGetStatus(EM_PRN_STATUS *pemStatus);$/;"	p	signature:(EM_PRN_STATUS *pemStatus)
NDK_PrnGetVersion	../env/NDK.h	/^int NDK_PrnGetVersion(char *pszVer);$/;"	p	signature:(char *pszVer)
NDK_PrnGetVersion	../inc/NDK-bak.h	/^int NDK_PrnGetVersion(char *pszVer);$/;"	p	signature:(char *pszVer)
NDK_PrnImage	../env/NDK.h	/^int NDK_PrnImage(uint unXsize,uint unYsize,uint unXpos,const char *psImgBuf);$/;"	p	signature:(uint unXsize,uint unYsize,uint unXpos,const char *psImgBuf)
NDK_PrnImage	../inc/NDK-bak.h	/^int NDK_PrnImage(uint unXsize,uint unYsize,uint unXpos,const char *psImgBuf);$/;"	p	signature:(uint unXsize,uint unYsize,uint unXpos,const char *psImgBuf)
NDK_PrnInit	../env/NDK.h	/^int NDK_PrnInit(uint unPrnDirSwitch);$/;"	p	signature:(uint unPrnDirSwitch)
NDK_PrnInit	../inc/NDK-bak.h	/^int NDK_PrnInit(uint unPrnDirSwitch);$/;"	p	signature:(uint unPrnDirSwitch)
NDK_PrnLoadBDFFont	../env/NDK.h	/^int NDK_PrnLoadBDFFont(const char *pszPath);$/;"	p	signature:(const char *pszPath)
NDK_PrnLoadBDFFont	../inc/NDK-bak.h	/^int NDK_PrnLoadBDFFont(const char *pszPath);$/;"	p	signature:(const char *pszPath)
NDK_PrnPicture	../env/NDK.h	/^int NDK_PrnPicture(uint unXpos,const char *pszPath);$/;"	p	signature:(uint unXpos,const char *pszPath)
NDK_PrnPicture	../inc/NDK-bak.h	/^int NDK_PrnPicture(uint unXpos,const char *pszPath);$/;"	p	signature:(uint unXpos,const char *pszPath)
NDK_PrnSetBDF	../env/NDK.h	/^int NDK_PrnSetBDF(uint unXpos,uint unLineSpace,uint unWordSpace,uint unXmode,uint unYmode);$/;"	p	signature:(uint unXpos,uint unLineSpace,uint unWordSpace,uint unXmode,uint unYmode)
NDK_PrnSetBDF	../inc/NDK-bak.h	/^int NDK_PrnSetBDF(uint unXpos,uint unLineSpace,uint unWordSpace,uint unXmode,uint unYmode);$/;"	p	signature:(uint unXpos,uint unLineSpace,uint unWordSpace,uint unXmode,uint unYmode)
NDK_PrnSetFont	../env/NDK.h	/^int NDK_PrnSetFont(EM_PRN_HZ_FONT emHZFont,EM_PRN_ZM_FONT emZMFont);$/;"	p	signature:(EM_PRN_HZ_FONT emHZFont,EM_PRN_ZM_FONT emZMFont)
NDK_PrnSetFont	../inc/NDK-bak.h	/^int NDK_PrnSetFont(EM_PRN_HZ_FONT emHZFont,EM_PRN_ZM_FONT emZMFont);$/;"	p	signature:(EM_PRN_HZ_FONT emHZFont,EM_PRN_ZM_FONT emZMFont)
NDK_PrnSetForm	../env/NDK.h	/^int NDK_PrnSetForm(uint unBorder,uint unColumn, uint unRow);$/;"	p	signature:(uint unBorder,uint unColumn, uint unRow)
NDK_PrnSetForm	../inc/NDK-bak.h	/^int NDK_PrnSetForm(uint unBorder,uint unColumn, uint unRow);$/;"	p	signature:(uint unBorder,uint unColumn, uint unRow)
NDK_PrnSetGreyScale	../env/NDK.h	/^int NDK_PrnSetGreyScale(uint unGrey);$/;"	p	signature:(uint unGrey)
NDK_PrnSetGreyScale	../inc/NDK-bak.h	/^int NDK_PrnSetGreyScale(uint unGrey);$/;"	p	signature:(uint unGrey)
NDK_PrnSetMode	../env/NDK.h	/^int NDK_PrnSetMode(EM_PRN_MODE emMode,uint unSigOrDou);$/;"	p	signature:(EM_PRN_MODE emMode,uint unSigOrDou)
NDK_PrnSetMode	../inc/NDK-bak.h	/^int NDK_PrnSetMode(EM_PRN_MODE emMode,uint unSigOrDou);$/;"	p	signature:(EM_PRN_MODE emMode,uint unSigOrDou)
NDK_PrnSetPageLen	../env/NDK.h	/^int NDK_PrnSetPageLen(uint unLen);$/;"	p	signature:(uint unLen)
NDK_PrnSetPageLen	../inc/NDK-bak.h	/^int NDK_PrnSetPageLen(uint len);$/;"	p	signature:(uint len)
NDK_PrnSetUnderLine	../env/NDK.h	/^int NDK_PrnSetUnderLine(EM_PRN_UNDERLINE_STATUS emStatus);$/;"	p	signature:(EM_PRN_UNDERLINE_STATUS emStatus)
NDK_PrnSetUnderLine	../inc/NDK-bak.h	/^int NDK_PrnSetUnderLine(EM_PRN_UNDERLINE_STATUS emStatus);$/;"	p	signature:(EM_PRN_UNDERLINE_STATUS emStatus)
NDK_PrnSetUsrFont	../env/NDK.h	/^int NDK_PrnSetUsrFont(uint unFontId);$/;"	p	signature:(uint unFontId)
NDK_PrnSetUsrFont	../inc/NDK-bak.h	/^int NDK_PrnSetUsrFont(uint unFontId);$/;"	p	signature:(uint unFontId)
NDK_PrnStart	../env/NDK.h	/^int NDK_PrnStart(void);$/;"	p	signature:(void)
NDK_PrnStart	../inc/NDK-bak.h	/^int NDK_PrnStart(void);$/;"	p	signature:(void)
NDK_PrnStr	../env/NDK.h	/^int NDK_PrnStr(const char *pszBuf);$/;"	p	signature:(const char *pszBuf)
NDK_PrnStr	../inc/NDK-bak.h	/^int NDK_PrnStr(const char *pszBuf);$/;"	p	signature:(const char *pszBuf)
NDK_RegisterTimerRoutine	../env/NDK.h	/^int NDK_RegisterTimerRoutine (uint unTimeInterval, pvFUNC pRoutine);$/;"	p	signature:(uint unTimeInterval, pvFUNC pRoutine)
NDK_RegisterTimerRoutine	../inc/NDK-bak.h	/^int NDK_RegisterTimerRoutine (uint unTimeInterval, pvFUNC pRoutine);$/;"	p	signature:(uint unTimeInterval, pvFUNC pRoutine)
NDK_ReleaseSemaphore	../env/NDK.h	/^int NDK_ReleaseSemaphore( NDK_HANDLE pvHandle );$/;"	p	signature:( NDK_HANDLE pvHandle )
NDK_ReleaseSemaphore	../inc/NDK-bak.h	/^int NDK_ReleaseSemaphore( NDK_HANDLE handle );$/;"	p	signature:( NDK_HANDLE handle )
NDK_Relinquish	../env/NDK.h	/^int NDK_Relinquish( void );$/;"	p	signature:( void )
NDK_Relinquish	../inc/NDK-bak.h	/^int NDK_Relinquish( void );$/;"	p	signature:( void )
NDK_ResumeThread	../env/NDK.h	/^int NDK_ResumeThread( NDK_HANDLE pvHandle );$/;"	p	signature:( NDK_HANDLE pvHandle )
NDK_ResumeThread	../inc/NDK-bak.h	/^int NDK_ResumeThread( NDK_HANDLE handle );$/;"	p	signature:( NDK_HANDLE handle )
NDK_RfidCloseRf	../env/NDK.h	/^int NDK_RfidCloseRf(void);$/;"	p	signature:(void)
NDK_RfidCloseRf	../inc/NDK-bak.h	/^int NDK_RfidCloseRf(void);$/;"	p	signature:(void)
NDK_RfidInit	../env/NDK.h	/^int NDK_RfidInit(uchar *psStatus);$/;"	p	signature:(uchar *psStatus)
NDK_RfidInit	../inc/NDK-bak.h	/^int NDK_RfidInit(uchar *psStatus);$/;"	p	signature:(uchar *psStatus)
NDK_RfidOpenRf	../env/NDK.h	/^int NDK_RfidOpenRf(void);$/;"	p	signature:(void)
NDK_RfidOpenRf	../inc/NDK-bak.h	/^int NDK_RfidOpenRf(void);$/;"	p	signature:(void)
NDK_RfidPiccActivate	../env/NDK.h	/^int NDK_RfidPiccActivate(uchar *psPiccType, int *pnDataLen,  uchar *psDataBuf);$/;"	p	signature:(uchar *psPiccType, int *pnDataLen, uchar *psDataBuf)
NDK_RfidPiccActivate	../inc/NDK-bak.h	/^int NDK_RfidPiccActivate(uchar *psPicctype, int *pnDatalen,  uchar *psDatabuf);$/;"	p	signature:(uchar *psPicctype, int *pnDatalen, uchar *psDatabuf)
NDK_RfidPiccActivate_EMV	../env/NDK.h	/^int  NDK_RfidPiccActivate_EMV(uchar *psPiccType, int *pnDataLen,  uchar *psDataBuf);$/;"	p	signature:(uchar *psPiccType, int *pnDataLen, uchar *psDataBuf)
NDK_RfidPiccApdu	../env/NDK.h	/^int NDK_RfidPiccApdu(int nSendLen, uchar *psSendBuf, int *pnRecvLen,  uchar *psReceBuf);$/;"	p	signature:(int nSendLen, uchar *psSendBuf, int *pnRecvLen, uchar *psReceBuf)
NDK_RfidPiccApdu	../inc/NDK-bak.h	/^int NDK_RfidPiccApdu(int nSendlen, uchar *psSendbuf, int *pnRecvlen,  uchar *psRecebuf);$/;"	p	signature:(int nSendlen, uchar *psSendbuf, int *pnRecvlen, uchar *psRecebuf)
NDK_RfidPiccDeactivate	../env/NDK.h	/^int NDK_RfidPiccDeactivate(uchar ucDelayMs);$/;"	p	signature:(uchar ucDelayMs)
NDK_RfidPiccDeactivate	../inc/NDK-bak.h	/^int NDK_RfidPiccDeactivate(uchar ucDelayms);$/;"	p	signature:(uchar ucDelayms)
NDK_RfidPiccDetect	../env/NDK.h	/^int NDK_RfidPiccDetect(uchar *psPiccType);$/;"	p	signature:(uchar *psPiccType)
NDK_RfidPiccDetect	../inc/NDK-bak.h	/^int NDK_RfidPiccDetect(uchar *psPicctype);$/;"	p	signature:(uchar *psPicctype)
NDK_RfidPiccState	../env/NDK.h	/^int NDK_RfidPiccState(void);$/;"	p	signature:(void)
NDK_RfidPiccState	../inc/NDK-bak.h	/^int NDK_RfidPiccState(void);$/;"	p	signature:(void)
NDK_RfidPiccType	../env/NDK.h	/^int NDK_RfidPiccType(uchar ucPiccType);$/;"	p	signature:(uchar ucPiccType)
NDK_RfidPiccType	../inc/NDK-bak.h	/^int NDK_RfidPiccType(uchar ucPicctype);$/;"	p	signature:(uchar ucPicctype)
NDK_RfidResume	../env/NDK.h	/^int NDK_RfidResume(void);$/;"	p	signature:(void)
NDK_RfidResume	../inc/NDK-bak.h	/^int NDK_RfidResume(void);$/;"	p	signature:(void)
NDK_RfidSuspend	../env/NDK.h	/^int NDK_RfidSuspend(void);$/;"	p	signature:(void)
NDK_RfidSuspend	../inc/NDK-bak.h	/^int NDK_RfidSuspend(void);$/;"	p	signature:(void)
NDK_RfidTimeOutCtl	../env/NDK.h	/^int  NDK_RfidTimeOutCtl(uchar ucTimeOutCtl);$/;"	p	signature:(uchar ucTimeOutCtl)
NDK_RfidVersion	../env/NDK.h	/^int  NDK_RfidVersion(uchar *pszVersion);$/;"	p	signature:(uchar *pszVersion)
NDK_RfidVersion	../inc/NDK-bak.h	/^int  NDK_RfidVersion(uchar *pszVersion);$/;"	p	signature:(uchar *pszVersion)
NDK_RightTrim	../env/NDK.h	/^int NDK_RightTrim(uchar *pszBuf);$/;"	p	signature:(uchar *pszBuf)
NDK_RightTrim	../inc/NDK-bak.h	/^int NDK_RightTrim(uchar *pszBuf);$/;"	p	signature:(uchar *pszBuf)
NDK_SSLBind	../env/NDK.h	/^int NDK_SSLBind(NDK_HANDLE pvHandle, ST_SOCKET_ADDR *pstAddr);$/;"	p	signature:(NDK_HANDLE pvHandle, ST_SOCKET_ADDR *pstAddr)
NDK_SSLBind	../inc/NDK-bak.h	/^int NDK_SSLBind(NDK_HANDLE pvHandle, ST_SOCKET_ADDR *pstAddr);$/;"	p	signature:(NDK_HANDLE pvHandle, ST_SOCKET_ADDR *pstAddr)
NDK_SSLConnect	../env/NDK.h	/^int NDK_SSLConnect(NDK_HANDLE pvHandle, ST_SOCKET_ADDR *pstServer, int nTimeOut);$/;"	p	signature:(NDK_HANDLE pvHandle, ST_SOCKET_ADDR *pstServer, int nTimeOut)
NDK_SSLConnect	../inc/NDK-bak.h	/^int NDK_SSLConnect(NDK_HANDLE handle, ST_SOCKET_ADDR *pServer, int timeout);$/;"	p	signature:(NDK_HANDLE handle, ST_SOCKET_ADDR *pServer, int timeout)
NDK_SSLDataAvailable	../env/NDK.h	/^int NDK_SSLDataAvailable(NDK_HANDLE pvHandle, uint unTimeOut);$/;"	p	signature:(NDK_HANDLE pvHandle, uint unTimeOut)
NDK_SSLDataAvailable	../inc/NDK-bak.h	/^int NDK_SSLDataAvailable(NDK_HANDLE pvHandle, uint unTimeOut);$/;"	p	signature:(NDK_HANDLE pvHandle, uint unTimeOut)
NDK_SSLDisconnect	../env/NDK.h	/^int NDK_SSLDisconnect(NDK_HANDLE pvHandle);$/;"	p	signature:(NDK_HANDLE pvHandle)
NDK_SSLDisconnect	../inc/NDK-bak.h	/^int NDK_SSLDisconnect(NDK_HANDLE handle);$/;"	p	signature:(NDK_HANDLE handle)
NDK_SSLGetPeerCerificate	../env/NDK.h	/^void *NDK_SSLGetPeerCerificate(NDK_HANDLE pvHandle);$/;"	p	signature:(NDK_HANDLE pvHandle)
NDK_SSLReceive	../env/NDK.h	/^int NDK_SSLReceive(NDK_HANDLE pvHandle, void *pvBuffer, const uint unBufferLen, uint *punRecvLen);$/;"	p	signature:(NDK_HANDLE pvHandle, void *pvBuffer, const uint unBufferLen, uint *punRecvLen)
NDK_SSLReceive	../inc/NDK-bak.h	/^int NDK_SSLReceive(NDK_HANDLE pvHandle, void *pvBuffer, const uint unBufferLen, uint *punRecvLen);$/;"	p	signature:(NDK_HANDLE pvHandle, void *pvBuffer, const uint unBufferLen, uint *punRecvLen)
NDK_SSLSend	../env/NDK.h	/^int NDK_SSLSend(NDK_HANDLE pvHandle, const char *psBuffer, uint unBufferLen, uint *punSendLen);$/;"	p	signature:(NDK_HANDLE pvHandle, const char *psBuffer, uint unBufferLen, uint *punSendLen)
NDK_SSLSend	../inc/NDK-bak.h	/^int NDK_SSLSend(NDK_HANDLE pvHandle, const char *psBuffer, uint unBufferLen, uint *punSendLen);$/;"	p	signature:(NDK_HANDLE pvHandle, const char *psBuffer, uint unBufferLen, uint *punSendLen)
NDK_SUSPEND	../env/NDK.h	/^	NDK_SUSPEND = 0xFFFFFFFF,		 \/\/\/< 阻塞$/;"	e	enum:__anon62
NDK_SUSPEND	../inc/NDK-bak.h	/^	NDK_SUSPEND = 0xFFFFFFFF,		 \/\/\/< blocking$/;"	e	enum:__anon137
NDK_ScanDoScan	../env/NDK.h	/^int NDK_ScanDoScan(int nTimeOut,char *pszValue,int *pnLen);$/;"	p	signature:(int nTimeOut,char *pszValue,int *pnLen)
NDK_ScanInit	../env/NDK.h	/^int NDK_ScanInit(void);$/;"	p	signature:(void)
NDK_ScanSet	../env/NDK.h	/^int NDK_ScanSet(EM_SCAN_SETTYPE emScanSet,uint unSetValue);$/;"	p	signature:(EM_SCAN_SETTYPE emScanSet,uint unSetValue)
NDK_ScrAutoUpdate	../env/NDK.h	/^int NDK_ScrAutoUpdate(int nNewAuto, int *pnOldAuto);$/;"	p	signature:(int nNewAuto, int *pnOldAuto)
NDK_ScrAutoUpdate	../inc/NDK-bak.h	/^int NDK_ScrAutoUpdate(int nNewauto, int *pnOldauto);$/;"	p	signature:(int nNewauto, int *pnOldauto)
NDK_ScrBackLight	../env/NDK.h	/^int NDK_ScrBackLight(EM_BACKLIGHT emBL);$/;"	p	signature:(EM_BACKLIGHT emBL)
NDK_ScrBackLight	../inc/NDK-bak.h	/^int NDK_ScrBackLight(EM_BACKLIGHT emBL);$/;"	p	signature:(EM_BACKLIGHT emBL)
NDK_ScrClrLine	../env/NDK.h	/^int NDK_ScrClrLine(uint unStartY,uint unEndY);$/;"	p	signature:(uint unStartY,uint unEndY)
NDK_ScrClrLine	../inc/NDK-bak.h	/^int NDK_ScrClrLine(uint unStartY,uint unEndY);$/;"	p	signature:(uint unStartY,uint unEndY)
NDK_ScrClrbgPic	../env/NDK.h	/^int NDK_ScrClrbgPic(void);$/;"	p	signature:(void)
NDK_ScrClrbgPic	../inc/NDK-bak.h	/^int NDK_ScrClrbgPic(void);$/;"	p	signature:(void)
NDK_ScrClrs	../env/NDK.h	/^int NDK_ScrClrs(void);$/;"	p	signature:(void)
NDK_ScrClrs	../inc/NDK-bak.h	/^int NDK_ScrClrs(void);$/;"	p	signature:(void)
NDK_ScrDispBDFText	../env/NDK.h	/^int NDK_ScrDispBDFText(uint unFontId,uint unX,uint unY,ushort *pusText);$/;"	p	signature:(uint unFontId,uint unX,uint unY,ushort *pusText)
NDK_ScrDispBDFText	../inc/NDK-bak.h	/^int NDK_ScrDispBDFText(uint unFontID,uint unX,uint unY,ushort *pszText);$/;"	p	signature:(uint unFontID,uint unX,uint unY,ushort *pszText)
NDK_ScrDispPic	../env/NDK.h	/^int NDK_ScrDispPic(uint unX,uint unY,uint unWidth, uint unHeight, const char *pszPic);$/;"	p	signature:(uint unX,uint unY,uint unWidth, uint unHeight, const char *pszPic)
NDK_ScrDispPic	../inc/NDK-bak.h	/^int NDK_ScrDispPic(uint unX,uint unY,uint unWidth, uint unHeight, const char *pszPic);$/;"	p	signature:(uint unX,uint unY,uint unWidth, uint unHeight, const char *pszPic)
NDK_ScrDispString	../env/NDK.h	/^int NDK_ScrDispString(uint unX,uint unY,const char *pszS,uint unMode);$/;"	p	signature:(uint unX,uint unY,const char *pszS,uint unMode)
NDK_ScrDispString	../inc/NDK-bak.h	/^int NDK_ScrDispString(uint unX,uint unY,const char *pszS,uint unMode);$/;"	p	signature:(uint unX,uint unY,const char *pszS,uint unMode)
NDK_ScrDrawBitmap	../env/NDK.h	/^int NDK_ScrDrawBitmap(uint unX,uint unY,uint unWidth, uint unHeight, const char *psBuf);$/;"	p	signature:(uint unX,uint unY,uint unWidth, uint unHeight, const char *psBuf)
NDK_ScrDrawBitmap	../inc/NDK-bak.h	/^int NDK_ScrDrawBitmap(uint unX,uint unY,uint unWidth, uint unHeight, const char *psBuf);$/;"	p	signature:(uint unX,uint unY,uint unWidth, uint unHeight, const char *psBuf)
NDK_ScrFontAdd	../env/NDK.h	/^int NDK_ScrFontAdd(const char *psCnPath,const char *psEnPath);$/;"	p	signature:(const char *psCnPath,const char *psEnPath)
NDK_ScrFontAdd	../inc/NDK-bak.h	/^int NDK_ScrFontAdd(const char *pcCpath,const char *pcApath);$/;"	p	signature:(const char *pcCpath,const char *pcApath)
NDK_ScrFullRefresh	../env/NDK.h	/^int NDK_ScrFullRefresh(void);$/;"	p	signature:(void)
NDK_ScrFullRefresh	../inc/NDK-bak.h	/^int NDK_ScrFullRefresh(void);$/;"	p	signature:(void)
NDK_ScrGetColorDepth	../env/NDK.h	/^int NDK_ScrGetColorDepth(uint *punColorDepth);$/;"	p	signature:(uint *punColorDepth)
NDK_ScrGetColorDepth	../inc/NDK-bak.h	/^int NDK_ScrGetColorDepth(uint *puncd);$/;"	p	signature:(uint *puncd)
NDK_ScrGetFontSize	../env/NDK.h	/^int NDK_ScrGetFontSize(uint *punWidth,uint *punHeight);$/;"	p	signature:(uint *punWidth,uint *punHeight)
NDK_ScrGetFontSize	../inc/NDK-bak.h	/^int NDK_ScrGetFontSize(uint *punWidth,uint *punHeight);$/;"	p	signature:(uint *punWidth,uint *punHeight)
NDK_ScrGetLcdSize	../env/NDK.h	/^int NDK_ScrGetLcdSize(uint *punWidth,uint *punHeight);$/;"	p	signature:(uint *punWidth,uint *punHeight)
NDK_ScrGetLcdSize	../inc/NDK-bak.h	/^int NDK_ScrGetLcdSize(uint *punWidth,uint *punHeight);$/;"	p	signature:(uint *punWidth,uint *punHeight)
NDK_ScrGetPixel	../env/NDK.h	/^int NDK_ScrGetPixel(uint unX, uint unY, color_t *punColor);$/;"	p	signature:(uint unX, uint unY, color_t *punColor)
NDK_ScrGetPixel	../inc/NDK-bak.h	/^int NDK_ScrGetPixel(uint unX, uint unY, color_t *punColor);$/;"	p	signature:(uint unX, uint unY, color_t *punColor)
NDK_ScrGetVer	../env/NDK.h	/^int NDK_ScrGetVer(char *pszVer);$/;"	p	signature:(char *pszVer)
NDK_ScrGetVer	../inc/NDK-bak.h	/^int NDK_ScrGetVer(char *pszVer);$/;"	p	signature:(char *pszVer)
NDK_ScrGetViewPort	../env/NDK.h	/^int NDK_ScrGetViewPort(uint *punX,uint *punY,uint *punWidth,uint *punHeight);$/;"	p	signature:(uint *punX,uint *punY,uint *punWidth,uint *punHeight)
NDK_ScrGetViewPort	../inc/NDK-bak.h	/^int NDK_ScrGetViewPort(uint *punX,uint *punY,uint *punWidth,uint *punHeight);$/;"	p	signature:(uint *punX,uint *punY,uint *punWidth,uint *punHeight)
NDK_ScrGetxy	../env/NDK.h	/^int NDK_ScrGetxy(uint *punX, uint *punY);$/;"	p	signature:(uint *punX, uint *punY)
NDK_ScrGetxy	../inc/NDK-bak.h	/^int NDK_ScrGetxy(uint *punX, uint *punY);$/;"	p	signature:(uint *punX, uint *punY)
NDK_ScrGotoxy	../env/NDK.h	/^int NDK_ScrGotoxy(uint unX, uint unY);$/;"	p	signature:(uint unX, uint unY)
NDK_ScrGotoxy	../inc/NDK-bak.h	/^int NDK_ScrGotoxy(uint unX, uint unY);$/;"	p	signature:(uint unX, uint unY)
NDK_ScrInitGui	../env/NDK.h	/^int NDK_ScrInitGui(void);\/**	*@example NDK_disp_example.c**\/$/;"	p	signature:(void)
NDK_ScrInitGui	../inc/NDK-bak.h	/^int NDK_ScrInitGui(void);\/**	*@example NDK_disp_example.c**\/$/;"	p	signature:(void)
NDK_ScrLine	../env/NDK.h	/^int NDK_ScrLine(uint unStartX, uint unStartY, uint unEndX, uint unEndY, color_t unColor);$/;"	p	signature:(uint unStartX, uint unStartY, uint unEndX, uint unEndY, color_t unColor)
NDK_ScrLine	../inc/NDK-bak.h	/^int NDK_ScrLine(uint unStartX, uint unStartY, uint unEndX, uint unEndY, color_t unColor);$/;"	p	signature:(uint unStartX, uint unStartY, uint unEndX, uint unEndY, color_t unColor)
NDK_ScrLoadBDF	../env/NDK.h	/^int NDK_ScrLoadBDF(uint unFontId,char *pszFile,uint *punWidth,uint *punHeight);$/;"	p	signature:(uint unFontId,char *pszFile,uint *punWidth,uint *punHeight)
NDK_ScrLoadBDF	../inc/NDK-bak.h	/^int NDK_ScrLoadBDF(uint unFontID,char *pszFile,uint *punWidth,uint *punHeight);$/;"	p	signature:(uint unFontID,char *pszFile,uint *punWidth,uint *punHeight)
NDK_ScrPop	../env/NDK.h	/^int NDK_ScrPop(void);$/;"	p	signature:(void)
NDK_ScrPop	../inc/NDK-bak.h	/^int NDK_ScrPop(void);$/;"	p	signature:(void)
NDK_ScrPrintf	../env/NDK.h	/^int NDK_ScrPrintf(const char *psFormat, ...);$/;"	p	signature:(const char *psFormat, ...)
NDK_ScrPrintf	../inc/NDK-bak.h	/^int NDK_ScrPrintf(const char *format, ...);$/;"	p	signature:(const char *format, ...)
NDK_ScrPush	../env/NDK.h	/^int NDK_ScrPush(void);$/;"	p	signature:(void)
NDK_ScrPush	../inc/NDK-bak.h	/^int NDK_ScrPush(void);$/;"	p	signature:(void)
NDK_ScrPutPixel	../env/NDK.h	/^int NDK_ScrPutPixel(uint unX, uint unY, color_t unColor);$/;"	p	signature:(uint unX, uint unY, color_t unColor)
NDK_ScrPutPixel	../inc/NDK-bak.h	/^int NDK_ScrPutPixel(uint unX, uint unY, color_t unColor);$/;"	p	signature:(uint unX, uint unY, color_t unColor)
NDK_ScrRectangle	../env/NDK.h	/^int NDK_ScrRectangle(uint unX, uint unY, uint unWidth, uint unHeight, EM_RECT_PATTERNS emFillPattern, color_t unColor);$/;"	p	signature:(uint unX, uint unY, uint unWidth, uint unHeight, EM_RECT_PATTERNS emFillPattern, color_t unColor)
NDK_ScrRectangle	../inc/NDK-bak.h	/^int NDK_ScrRectangle(uint unX, uint unY, uint unWidth, uint unHeight, EM_RECT_PATTERNS emFill_pattern, color_t unColor);$/;"	p	signature:(uint unX, uint unY, uint unWidth, uint unHeight, EM_RECT_PATTERNS emFill_pattern, color_t unColor)
NDK_ScrRefresh	../env/NDK.h	/^int NDK_ScrRefresh(void);$/;"	p	signature:(void)
NDK_ScrRefresh	../inc/NDK-bak.h	/^int NDK_ScrRefresh(void);$/;"	p	signature:(void)
NDK_ScrSetAttr	../env/NDK.h	/^int NDK_ScrSetAttr(EM_TEXT_ATTRIBUTE emNewAttr, EM_TEXT_ATTRIBUTE *pemOldAttr);$/;"	p	signature:(EM_TEXT_ATTRIBUTE emNewAttr, EM_TEXT_ATTRIBUTE *pemOldAttr)
NDK_ScrSetAttr	../inc/NDK-bak.h	/^int NDK_ScrSetAttr(EM_TEXT_ATTRIBUTE emNewattr, EM_TEXT_ATTRIBUTE *pemOldattr);$/;"	p	signature:(EM_TEXT_ATTRIBUTE emNewattr, EM_TEXT_ATTRIBUTE *pemOldattr)
NDK_ScrSetContrast	../env/NDK.h	/^int NDK_ScrSetContrast(uint unContrast);$/;"	p	signature:(uint unContrast)
NDK_ScrSetContrast	../inc/NDK-bak.h	/^int NDK_ScrSetContrast(uint unContrast);$/;"	p	signature:(uint unContrast)
NDK_ScrSetFontColor	../env/NDK.h	/^int NDK_ScrSetFontColor(color_t unColor, EM_FONTCOLOR emType);$/;"	p	signature:(color_t unColor, EM_FONTCOLOR emType)
NDK_ScrSetFontColor	../inc/NDK-bak.h	/^int NDK_ScrSetFontColor(color_t unColor, EM_FONTCOLOR emType);$/;"	p	signature:(color_t unColor, EM_FONTCOLOR emType)
NDK_ScrSetFontType	../env/NDK.h	/^int NDK_ScrSetFontType(EM_DISPFONT emType);$/;"	p	signature:(EM_DISPFONT emType)
NDK_ScrSetFontType	../inc/NDK-bak.h	/^int NDK_ScrSetFontType(EM_DISPFONT emType);$/;"	p	signature:(EM_DISPFONT emType)
NDK_ScrSetSpace	../env/NDK.h	/^int NDK_ScrSetSpace(uint unWspace,uint unHspace);$/;"	p	signature:(uint unWspace,uint unHspace)
NDK_ScrSetSpace	../inc/NDK-bak.h	/^int NDK_ScrSetSpace(uint unWspace,uint unHpace);$/;"	p	signature:(uint unWspace,uint unHpace)
NDK_ScrSetViewPort	../env/NDK.h	/^int NDK_ScrSetViewPort(uint unX,uint unY,uint unWidth, uint unHeight);$/;"	p	signature:(uint unX,uint unY,uint unWidth, uint unHeight)
NDK_ScrSetViewPort	../inc/NDK-bak.h	/^int NDK_ScrSetViewPort(uint unX,uint unY,uint unWidth, uint unHeight);$/;"	p	signature:(uint unX,uint unY,uint unWidth, uint unHeight)
NDK_ScrSetbgPic	../env/NDK.h	/^int NDK_ScrSetbgPic(char *pszFilePath);$/;"	p	signature:(char *pszFilePath)
NDK_ScrSetbgPic	../inc/NDK-bak.h	/^int NDK_ScrSetbgPic(char *pszfilepath);$/;"	p	signature:(char *pszfilepath)
NDK_ScrStatusbar	../env/NDK.h	/^int NDK_ScrStatusbar(EM_STATUSBAR emFlag);$/;"	p	signature:(EM_STATUSBAR emFlag)
NDK_ScrStatusbar	../inc/NDK-bak.h	/^int NDK_ScrStatusbar(uint unFlag);$/;"	p	signature:(uint unFlag)
NDK_SecCalcDes	../env/NDK.h	/^int NDK_SecCalcDes(uchar ucKeyType, uchar ucKeyIdx, uchar * psDataIn, int nDataInLen, uchar *psDataOut, uchar ucMode);$/;"	p	signature:(uchar ucKeyType, uchar ucKeyIdx, uchar * psDataIn, int nDataInLen, uchar *psDataOut, uchar ucMode)
NDK_SecCalcDes	../inc/NDK-bak.h	/^int NDK_SecCalcDes(uchar ucKeyType, uchar ucKeyIdx, uchar * psDataIn, int nDataInLen, uchar *psDataOut, uchar ucMode);$/;"	p	signature:(uchar ucKeyType, uchar ucKeyIdx, uchar * psDataIn, int nDataInLen, uchar *psDataOut, uchar ucMode)
NDK_SecCalcDesDukpt	../env/NDK.h	/^int NDK_SecCalcDesDukpt(uchar ucGroupIdx, uchar ucKeyVarType, uchar *psIV, ushort usDataInLen, uchar *psDataIn,uchar *psDataOut,uchar *psKsnOut ,uchar ucMode);$/;"	p	signature:(uchar ucGroupIdx, uchar ucKeyVarType, uchar *psIV, ushort usDataInLen, uchar *psDataIn,uchar *psDataOut,uchar *psKsnOut ,uchar ucMode)
NDK_SecCalcDesDukpt	../inc/NDK-bak.h	/^int NDK_SecCalcDesDukpt(uchar ucGroupIdx, uchar ucKeyVarType, uchar *psIV, ushort usDataInLen, uchar *psDataIn,uchar *psDataOut,uchar *psKsnOut ,uchar ucMode);$/;"	p	signature:(uchar ucGroupIdx, uchar ucKeyVarType, uchar *psIV, ushort usDataInLen, uchar *psDataIn,uchar *psDataOut,uchar *psKsnOut ,uchar ucMode)
NDK_SecGetCfg	../env/NDK.h	/^int NDK_SecGetCfg(uint *punCfgInfo);$/;"	p	signature:(uint *punCfgInfo)
NDK_SecGetCfg	../inc/NDK-bak.h	/^int NDK_SecGetCfg(uint *punCfgInfo);$/;"	p	signature:(uint *punCfgInfo)
NDK_SecGetDukptKsn	../env/NDK.h	/^int NDK_SecGetDukptKsn(uchar ucGroupIdx, uchar * psKsnOut);$/;"	p	signature:(uchar ucGroupIdx, uchar * psKsnOut)
NDK_SecGetDukptKsn	../inc/NDK-bak.h	/^int NDK_SecGetDukptKsn(uchar ucGroupIdx, uchar * psKsnOut);$/;"	p	signature:(uchar ucGroupIdx, uchar * psKsnOut)
NDK_SecGetKcv	../env/NDK.h	/^int NDK_SecGetKcv(uchar ucKeyType, uchar ucKeyIdx, ST_SEC_KCV_INFO *pstKcvInfoOut);$/;"	p	signature:(uchar ucKeyType, uchar ucKeyIdx, ST_SEC_KCV_INFO *pstKcvInfoOut)
NDK_SecGetKcv	../inc/NDK-bak.h	/^int NDK_SecGetKcv(uchar ucKeyType, uchar ucKeyIdx, ST_SEC_KCV_INFO *pstKcvInfoOut);$/;"	p	signature:(uchar ucKeyType, uchar ucKeyIdx, ST_SEC_KCV_INFO *pstKcvInfoOut)
NDK_SecGetMac	../env/NDK.h	/^int NDK_SecGetMac(uchar ucKeyIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar ucMod);$/;"	p	signature:(uchar ucKeyIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar ucMod)
NDK_SecGetMac	../inc/NDK-bak.h	/^int NDK_SecGetMac(uchar ucKeyIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar ucMod);$/;"	p	signature:(uchar ucKeyIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar ucMod)
NDK_SecGetMacDukpt	../env/NDK.h	/^int NDK_SecGetMacDukpt(uchar ucGroupIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar *psKsnOut, uchar ucMode);$/;"	p	signature:(uchar ucGroupIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar *psKsnOut, uchar ucMode)
NDK_SecGetMacDukpt	../inc/NDK-bak.h	/^int NDK_SecGetMacDukpt(uchar ucGroupIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar *psKsnOut, uchar ucMode);$/;"	p	signature:(uchar ucGroupIdx, uchar *psDataIn, int nDataInLen, uchar *psMacOut, uchar *psKsnOut, uchar ucMode)
NDK_SecGetPin	../env/NDK.h	/^int NDK_SecGetPin(uchar ucKeyIdx, uchar *pszExpPinLenIn,const uchar * pszDataIn, uchar *psPinBlockOut, uchar ucMode, uint nTimeOutMs);$/;"	p	signature:(uchar ucKeyIdx, uchar *pszExpPinLenIn,const uchar * pszDataIn, uchar *psPinBlockOut, uchar ucMode, uint nTimeOutMs)
NDK_SecGetPin	../inc/NDK-bak.h	/^int NDK_SecGetPin(uchar ucKeyIdx, uchar *pszExpPinLenIn,const uchar * pszDataIn, uchar *psPinBlockOut, uchar ucMode, uint nTimeOutMs);$/;"	p	signature:(uchar ucKeyIdx, uchar *pszExpPinLenIn,const uchar * pszDataIn, uchar *psPinBlockOut, uchar ucMode, uint nTimeOutMs)
NDK_SecGetPinDukpt	../env/NDK.h	/^int NDK_SecGetPinDukpt(uchar ucGroupIdx, uchar *pszExpPinLenIn, uchar * psDataIn, uchar* psKsnOut, uchar *psPinBlockOut, uchar ucMode, uint unTimeoutMs);$/;"	p	signature:(uchar ucGroupIdx, uchar *pszExpPinLenIn, uchar * psDataIn, uchar* psKsnOut, uchar *psPinBlockOut, uchar ucMode, uint unTimeoutMs)
NDK_SecGetPinDukpt	../inc/NDK-bak.h	/^int NDK_SecGetPinDukpt(uchar ucGroupIdx, uchar *pszExpPinLenIn, uchar * psDataIn, uchar* psKsnOut, uchar *psPinBlockOut, uchar ucMode, uint unTimeoutMs);$/;"	p	signature:(uchar ucGroupIdx, uchar *pszExpPinLenIn, uchar * psDataIn, uchar* psKsnOut, uchar *psPinBlockOut, uchar ucMode, uint unTimeoutMs)
NDK_SecGetPinResult	../env/NDK.h	/^int NDK_SecGetPinResult(uchar *psPinBlock, int *nStatus);$/;"	p	signature:(uchar *psPinBlock, int *nStatus)
NDK_SecGetPinResult	../inc/NDK-bak.h	/^int NDK_SecGetPinResult(uchar *psPinBlock, int *nStatus);$/;"	p	signature:(uchar *psPinBlock, int *nStatus)
NDK_SecGetPinResultDukpt	../env/NDK.h	/^int NDK_SecGetPinResultDukpt(uchar *psPinBlock, uchar *psKsn, int *nStatus);$/;"	p	signature:(uchar *psPinBlock, uchar *psKsn, int *nStatus)
NDK_SecGetRandom	../env/NDK.h	/^int NDK_SecGetRandom(int nRandLen , void *pvRandom);$/;"	p	signature:(int nRandLen , void *pvRandom)
NDK_SecGetRandom	../inc/NDK-bak.h	/^int NDK_SecGetRandom(int nRandLen , void *pvRandom);$/;"	p	signature:(int nRandLen , void *pvRandom)
NDK_SecGetTamperStatus	../env/NDK.h	/^int NDK_SecGetTamperStatus(int *pnStatus);$/;"	p	signature:(int *pnStatus)
NDK_SecGetTamperStatus	../inc/NDK-bak.h	/^int NDK_SecGetTamperStatus(int *status);$/;"	p	signature:(int *status)
NDK_SecGetVer	../env/NDK.h	/^int NDK_SecGetVer(uchar * pszVerInfoOut);$/;"	p	signature:(uchar * pszVerInfoOut)
NDK_SecGetVer	../inc/NDK-bak.h	/^int NDK_SecGetVer(uchar * pszVerInfoOut);$/;"	p	signature:(uchar * pszVerInfoOut)
NDK_SecIncreaseDukptKsn	../env/NDK.h	/^int NDK_SecIncreaseDukptKsn(uchar ucGroupIdx);$/;"	p	signature:(uchar ucGroupIdx)
NDK_SecIncreaseDukptKsn	../inc/NDK-bak.h	/^int NDK_SecIncreaseDukptKsn(uchar ucGroupIdx);$/;"	p	signature:(uchar ucGroupIdx)
NDK_SecKeyErase	../env/NDK.h	/^int NDK_SecKeyErase(void);$/;"	p	signature:(void)
NDK_SecKeyErase	../inc/NDK-bak.h	/^int NDK_SecKeyErase(void);$/;"	p	signature:(void)
NDK_SecLoadKey	../env/NDK.h	/^int NDK_SecLoadKey(ST_SEC_KEY_INFO * pstKeyInfoIn, ST_SEC_KCV_INFO * pstKcvInfoIn);$/;"	p	signature:(ST_SEC_KEY_INFO * pstKeyInfoIn, ST_SEC_KCV_INFO * pstKcvInfoIn)
NDK_SecLoadKey	../inc/NDK-bak.h	/^int NDK_SecLoadKey(ST_SEC_KEY_INFO * pstKeyInfoIn, ST_SEC_KCV_INFO * pstKcvInfoIn);$/;"	p	signature:(ST_SEC_KEY_INFO * pstKeyInfoIn, ST_SEC_KCV_INFO * pstKcvInfoIn)
NDK_SecLoadRsaKey	../env/NDK.h	/^int NDK_SecLoadRsaKey(uchar ucRsaKeyIndex, ST_SEC_RSA_KEY *pstRsaKeyIn);$/;"	p	signature:(uchar ucRsaKeyIndex, ST_SEC_RSA_KEY *pstRsaKeyIn)
NDK_SecLoadRsaKey	../inc/NDK-bak.h	/^int NDK_SecLoadRsaKey(uchar ucRSAKeyIndex, ST_SEC_RSA_KEY *pstRsakeyIn);$/;"	p	signature:(uchar ucRSAKeyIndex, ST_SEC_RSA_KEY *pstRsakeyIn)
NDK_SecLoadTIK	../env/NDK.h	/^int NDK_SecLoadTIK(uchar ucGroupIdx, uchar ucSrcKeyIdx, uchar ucKeyLen, uchar * psKeyValueIn, uchar * psKsnIn, ST_SEC_KCV_INFO * pstKcvInfoIn);$/;"	p	signature:(uchar ucGroupIdx, uchar ucSrcKeyIdx, uchar ucKeyLen, uchar * psKeyValueIn, uchar * psKsnIn, ST_SEC_KCV_INFO * pstKcvInfoIn)
NDK_SecLoadTIK	../inc/NDK-bak.h	/^int NDK_SecLoadTIK(uchar ucGroupIdx, uchar ucSrcKeyIdx, uchar ucKeyLen, uchar * psKeyValueIn, uchar * psKsnIn, ST_SEC_KCV_INFO * pstKcvInfoIn);$/;"	p	signature:(uchar ucGroupIdx, uchar ucSrcKeyIdx, uchar ucKeyLen, uchar * psKeyValueIn, uchar * psKsnIn, ST_SEC_KCV_INFO * pstKcvInfoIn)
NDK_SecRecover	../env/NDK.h	/^int NDK_SecRecover(uchar ucRsaKeyIndex, const uchar *psDataIn, int nDataLen, uchar *psDataOut);$/;"	p	signature:(uchar ucRsaKeyIndex, const uchar *psDataIn, int nDataLen, uchar *psDataOut)
NDK_SecRecover	../inc/NDK-bak.h	/^int NDK_SecRecover(uchar ucRSAKeyIndex, const uchar *psDataIn, int nDataInLen, uchar *psDataOut, uchar *psKeyInfoOut);$/;"	p	signature:(uchar ucRSAKeyIndex, const uchar *psDataIn, int nDataInLen, uchar *psDataOut, uchar *psKeyInfoOut)
NDK_SecSetCfg	../env/NDK.h	/^int NDK_SecSetCfg(uint unCfgInfo);$/;"	p	signature:(uint unCfgInfo)
NDK_SecSetCfg	../inc/NDK-bak.h	/^int NDK_SecSetCfg(uint unCfgInfo);$/;"	p	signature:(uint unCfgInfo)
NDK_SecSetFunctionKey	../env/NDK.h	/^int NDK_SecSetFunctionKey(uchar ucType);$/;"	p	signature:(uchar ucType)
NDK_SecSetFunctionKey	../inc/NDK-bak.h	/^int NDK_SecSetFunctionKey(uchar ucType);$/;"	p	signature:(uchar ucType)
NDK_SecSetIntervaltime	../env/NDK.h	/^int NDK_SecSetIntervaltime(uint unTPKIntervalTimeMs, uint unTAKIntervalTimeMs);$/;"	p	signature:(uint unTPKIntervalTimeMs, uint unTAKIntervalTimeMs)
NDK_SecSetIntervaltime	../inc/NDK-bak.h	/^int NDK_SecSetIntervaltime(uint unTPKIntervalTimeMs, uint unTAKIntervalTimeMs);$/;"	p	signature:(uint unTPKIntervalTimeMs, uint unTAKIntervalTimeMs)
NDK_SecSetKeyOwner	../env/NDK.h	/^int NDK_SecSetKeyOwner(char *pszName);$/;"	p	signature:(char *pszName)
NDK_SecSetKeyOwner	../inc/NDK-bak.h	/^int NDK_SecSetKeyOwner(char *pszName);$/;"	p	signature:(char *pszName)
NDK_SecVerifyCipherPin	../env/NDK.h	/^int NDK_SecVerifyCipherPin(uchar ucIccSlot, uchar *pszExpPinLenIn, ST_SEC_RSA_KEY *pstRsaPinKeyIn, uchar *psIccRespOut, uchar ucMode, uint unTimeoutMs);$/;"	p	signature:(uchar ucIccSlot, uchar *pszExpPinLenIn, ST_SEC_RSA_KEY *pstRsaPinKeyIn, uchar *psIccRespOut, uchar ucMode, uint unTimeoutMs)
NDK_SecVerifyCipherPin	../inc/NDK-bak.h	/^int NDK_SecVerifyCipherPin(uchar ucIccSlot, uchar *pszExpPinLenIn, ST_SEC_RSA_KEY *pstRsaPinKeyIn, uchar *psIccRespOut, uchar ucMode, uint unTimeoutMs);$/;"	p	signature:(uchar ucIccSlot, uchar *pszExpPinLenIn, ST_SEC_RSA_KEY *pstRsaPinKeyIn, uchar *psIccRespOut, uchar ucMode, uint unTimeoutMs)
NDK_SecVerifyPlainPin	../env/NDK.h	/^int NDK_SecVerifyPlainPin(uchar ucIccSlot, uchar *pszExpPinLenIn, uchar *psIccRespOut, uchar ucMode,  uint unTimeoutMs);$/;"	p	signature:(uchar ucIccSlot, uchar *pszExpPinLenIn, uchar *psIccRespOut, uchar ucMode, uint unTimeoutMs)
NDK_SecVerifyPlainPin	../inc/NDK-bak.h	/^int NDK_SecVerifyPlainPin(uchar ucIccSlot, uchar *pszExpPinLenIn, uchar *psIccRespOut, uchar ucMode,  uint unTimeoutMs);$/;"	p	signature:(uchar ucIccSlot, uchar *pszExpPinLenIn, uchar *psIccRespOut, uchar ucMode, uint unTimeoutMs)
NDK_SetIgnoreProtocol	../env/NDK.h	/^int NDK_SetIgnoreProtocol(int nModeCode);$/;"	p	signature:(int nModeCode)
NDK_SetIgnoreProtocol	../inc/NDK-bak.h	/^int NDK_SetIgnoreProtocol(int nModecode);$/;"	p	signature:(int nModecode)
NDK_SetSSLBlockingMode	../env/NDK.h	/^int NDK_SetSSLBlockingMode(NDK_HANDLE pvHandle,int nMode);$/;"	p	signature:(NDK_HANDLE pvHandle,int nMode)
NDK_SetSSLBlockingMode	../inc/NDK-bak.h	/^int NDK_SetSSLBlockingMode(NDK_HANDLE handle,int mode);$/;"	p	signature:(NDK_HANDLE handle,int mode)
NDK_SubStr	../env/NDK.h	/^int NDK_SubStr(const uchar *pszSouStr, int nStartPos, int nNum, uchar *pszObjStr, int *pnObjStrLen);$/;"	p	signature:(const uchar *pszSouStr, int nStartPos, int nNum, uchar *pszObjStr, int *pnObjStrLen)
NDK_SubStr	../inc/NDK-bak.h	/^int NDK_SubStr(const uchar *pszSouStr, int nStartPos, int nNum, uchar *pszObjStr, int *pnObjStrLen);$/;"	p	signature:(const uchar *pszSouStr, int nStartPos, int nNum, uchar *pszObjStr, int *pnObjStrLen)
NDK_SuspendThread	../env/NDK.h	/^int NDK_SuspendThread( NDK_HANDLE pvHandle );$/;"	p	signature:( NDK_HANDLE pvHandle )
NDK_SuspendThread	../inc/NDK-bak.h	/^int NDK_SuspendThread( NDK_HANDLE handle );$/;"	p	signature:( NDK_HANDLE handle )
NDK_SysBeep	../env/NDK.h	/^int NDK_SysBeep(void);$/;"	p	signature:(void)
NDK_SysBeep	../inc/NDK-bak.h	/^int NDK_SysBeep(void);$/;"	p	signature:(void)
NDK_SysDelay	../env/NDK.h	/^int NDK_SysDelay(uint unDelayTime);$/;"	p	signature:(uint unDelayTime)
NDK_SysDelay	../inc/NDK-bak.h	/^int NDK_SysDelay(uint unDelayTime);$/;"	p	signature:(uint unDelayTime)
NDK_SysExit	../env/NDK.h	/^int NDK_SysExit(int nErrCode);$/;"	p	signature:(int nErrCode)
NDK_SysExit	../inc/NDK-bak.h	/^int NDK_SysExit(int nErrcode);$/;"	p	signature:(int nErrcode)
NDK_SysGetBeepVol	../env/NDK.h	/^int NDK_SysGetBeepVol(uint *punVolNum);$/;"	p	signature:(uint *punVolNum)
NDK_SysGetBeepVol	../inc/NDK-bak.h	/^int NDK_SysGetBeepVol(uint *punVolumn);$/;"	p	signature:(uint *punVolumn)
NDK_SysGetConfigInfo	../env/NDK.h	/^int NDK_SysGetConfigInfo(EM_SYS_CONFIG emConfig,int *pnValue);$/;"	p	signature:(EM_SYS_CONFIG emConfig,int *pnValue)
NDK_SysGetConfigInfo	../inc/NDK-bak.h	/^int NDK_SysGetConfigInfo(EM_SYS_CONFIG emConfig,int *pnvalue);$/;"	p	signature:(EM_SYS_CONFIG emConfig,int *pnvalue)
NDK_SysGetFirmwareInfo	../env/NDK.h	/^int NDK_SysGetFirmwareInfo(EM_SYS_FWINFO *emFWinfo);$/;"	p	signature:(EM_SYS_FWINFO *emFWinfo)
NDK_SysGetFirmwareInfo	../inc/NDK-bak.h	/^int NDK_SysGetFirmwareInfo(EM_SYS_FWINFO *emFWinfo);$/;"	p	signature:(EM_SYS_FWINFO *emFWinfo)
NDK_SysGetPosInfo	../env/NDK.h	/^int NDK_SysGetPosInfo(EM_SYS_HWINFO emFlag,uint *punLen,char *psBuf);$/;"	p	signature:(EM_SYS_HWINFO emFlag,uint *punLen,char *psBuf)
NDK_SysGetPosInfo	../inc/NDK-bak.h	/^int NDK_SysGetPosInfo(EM_SYS_HWINFO emFlag,uint *punLen,char *psBuf);$/;"	p	signature:(EM_SYS_HWINFO emFlag,uint *punLen,char *psBuf)
NDK_SysGetPosTime	../env/NDK.h	/^int NDK_SysGetPosTime(struct tm *pstTime);$/;"	p	signature:(struct tm *pstTime)
NDK_SysGetPosTime	../inc/NDK-bak.h	/^int NDK_SysGetPosTime(struct tm *pstTime);$/;"	p	signature:(struct tm *pstTime)
NDK_SysGetPowerInfo	../env/NDK.h	/^int NDK_SysGetPowerInfo(ST_POWER_INFO *pstPowerInfo);$/;"	p	signature:(ST_POWER_INFO *pstPowerInfo)
NDK_SysGetPowerVol	../env/NDK.h	/^int NDK_SysGetPowerVol(uint *punVol);$/;"	p	signature:(uint *punVol)
NDK_SysGetPowerVol	../inc/NDK-bak.h	/^int NDK_SysGetPowerVol(uint *punVol);$/;"	p	signature:(uint *punVol)
NDK_SysGetStatisticsData	../env/NDK.h	/^int NDK_SysGetStatisticsData(EM_SS_DEV_ID emDevId,ulong *pulValue);$/;"	p	signature:(EM_SS_DEV_ID emDevId,ulong *pulValue)
NDK_SysGoSuspend	../env/NDK.h	/^int NDK_SysGoSuspend(void);$/;"	p	signature:(void)
NDK_SysGoSuspend	../inc/NDK-bak.h	/^int NDK_SysGoSuspend(void);$/;"	p	signature:(void)
NDK_SysInit	../env/NDK.h	/^int NDK_SysInit(void);$/;"	p	signature:(void)
NDK_SysInit	../inc/NDK-bak.h	/^int NDK_SysInit(void);$/;"	p	signature:(void)
NDK_SysInitStatisticsData	../env/NDK.h	/^int NDK_SysInitStatisticsData(void);$/;"	p	signature:(void)
NDK_SysMsDelay	../env/NDK.h	/^int NDK_SysMsDelay(uint unDelayTime);$/;"	p	signature:(uint unDelayTime)
NDK_SysMsDelay	../inc/NDK-bak.h	/^int NDK_SysMsDelay(uint unDelayTime);$/;"	p	signature:(uint unDelayTime)
NDK_SysReadFont	../env/NDK.h	/^int NDK_SysReadFont(const char * psPath,uint unOffSet,char *psBuf,uint unLen);$/;"	p	signature:(const char * psPath,uint unOffSet,char *psBuf,uint unLen)
NDK_SysReadFont	../inc/NDK-bak.h	/^int NDK_SysReadFont(const char * pPath,uint unOffset,char *psBuf,uint unLen);$/;"	p	signature:(const char * pPath,uint unOffset,char *psBuf,uint unLen)
NDK_SysReboot	../env/NDK.h	/^int NDK_SysReboot(void);$/;"	p	signature:(void)
NDK_SysReboot	../inc/NDK-bak.h	/^int NDK_SysReboot(void);$/;"	p	signature:(void)
NDK_SysSetBeepVol	../env/NDK.h	/^int NDK_SysSetBeepVol(uint unVolNum);$/;"	p	signature:(uint unVolNum)
NDK_SysSetBeepVol	../inc/NDK-bak.h	/^int NDK_SysSetBeepVol(uint unVolumn);$/;"	p	signature:(uint unVolumn)
NDK_SysSetPosTime	../env/NDK.h	/^int NDK_SysSetPosTime(struct tm stTime);$/;"	p	signature:(struct tm stTime)
NDK_SysSetPosTime	../inc/NDK-bak.h	/^int NDK_SysSetPosTime(struct tm stTime);$/;"	p	signature:(struct tm stTime)
NDK_SysSetSuspend	../env/NDK.h	/^int NDK_SysSetSuspend(uint unFlag);$/;"	p	signature:(uint unFlag)
NDK_SysSetSuspend	../inc/NDK-bak.h	/^int NDK_SysSetSuspend(uint unFlag);$/;"	p	signature:(uint unFlag)
NDK_SysSetSuspendDuration	../env/NDK.h	/^int NDK_SysSetSuspendDuration(uint unSec);$/;"	p	signature:(uint unSec)
NDK_SysShutDown	../env/NDK.h	/^int NDK_SysShutDown(void);$/;"	p	signature:(void)
NDK_SysShutDown	../inc/NDK-bak.h	/^int NDK_SysShutDown(void);$/;"	p	signature:(void)
NDK_SysStartWatch	../env/NDK.h	/^int NDK_SysStartWatch(void);$/;"	p	signature:(void)
NDK_SysStartWatch	../inc/NDK-bak.h	/^int NDK_SysStartWatch(void);$/;"	p	signature:(void)
NDK_SysStopWatch	../env/NDK.h	/^int NDK_SysStopWatch(uint *punTime);$/;"	p	signature:(uint *punTime)
NDK_SysStopWatch	../inc/NDK-bak.h	/^int NDK_SysStopWatch(uint *punTime);$/;"	p	signature:(uint *punTime)
NDK_SysTime	../env/NDK.h	/^int NDK_SysTime(ulong *ulTime);$/;"	p	signature:(ulong *ulTime)
NDK_SysTimeBeep	../env/NDK.h	/^int NDK_SysTimeBeep(uint unFrequency,uint unMsSeconds);$/;"	p	signature:(uint unFrequency,uint unMsSeconds)
NDK_SysTimeBeep	../inc/NDK-bak.h	/^int NDK_SysTimeBeep(uint unFrequency,uint unSeconds);$/;"	p	signature:(uint unFrequency,uint unSeconds)
NDK_THREAD_RUNNING	../env/NDK.h	/^	NDK_THREAD_RUNNING,		\/\/\/< 线程运行中$/;"	e	enum:ndk_thread_state
NDK_THREAD_RUNNING	../inc/NDK-bak.h	/^	NDK_THREAD_RUNNING,		\/\/\/< Thread is running$/;"	e	enum:ndk_thread_state
NDK_THREAD_STOPPED	../env/NDK.h	/^	NDK_THREAD_STOPPED,		\/\/\/< 线程停止$/;"	e	enum:ndk_thread_state
NDK_THREAD_STOPPED	../inc/NDK-bak.h	/^	NDK_THREAD_STOPPED,		\/\/\/< Thread is stopped$/;"	e	enum:ndk_thread_state
NDK_THREAD_SUSPEND	../env/NDK.h	/^	NDK_THREAD_SUSPEND,		\/\/\/< 线程暂停$/;"	e	enum:ndk_thread_state
NDK_THREAD_SUSPEND	../inc/NDK-bak.h	/^	NDK_THREAD_SUSPEND,		\/\/\/< Thread is suspended$/;"	e	enum:ndk_thread_state
NDK_TcpAccept	../env/NDK.h	/^int NDK_TcpAccept(uint unFd, const char *pszPeerIp, ushort usPeerPort, uint *punNewFd);$/;"	p	signature:(uint unFd, const char *pszPeerIp, ushort usPeerPort, uint *punNewFd)
NDK_TcpAccept	../inc/NDK-bak.h	/^int NDK_TcpAccept(uint unFd, const char *pszPeerIp, ushort usPeerPort, uint *punNewFd);$/;"	p	signature:(uint unFd, const char *pszPeerIp, ushort usPeerPort, uint *punNewFd)
NDK_TcpBind	../env/NDK.h	/^int NDK_TcpBind(uint unFd, const char *pszMyIp, ushort usMyPort);$/;"	p	signature:(uint unFd, const char *pszMyIp, ushort usMyPort)
NDK_TcpBind	../inc/NDK-bak.h	/^int NDK_TcpBind(uint unFd, const char *pszMyIp, ushort usMyPort);$/;"	p	signature:(uint unFd, const char *pszMyIp, ushort usMyPort)
NDK_TcpClose	../env/NDK.h	/^int NDK_TcpClose(uint unFd);$/;"	p	signature:(uint unFd)
NDK_TcpClose	../inc/NDK-bak.h	/^int NDK_TcpClose(uint unFd);$/;"	p	signature:(uint unFd)
NDK_TcpConnect	../env/NDK.h	/^int NDK_TcpConnect(uint unFd, const char *pszRemoteIp, ushort usRemotePort, uint unTimeout);$/;"	p	signature:(uint unFd, const char *pszRemoteIp, ushort usRemotePort, uint unTimeout)
NDK_TcpConnect	../inc/NDK-bak.h	/^int NDK_TcpConnect(uint unFd, const char *pszRemoteIp, ushort usRemotePort, uint unTimeout);$/;"	p	signature:(uint unFd, const char *pszRemoteIp, ushort usRemotePort, uint unTimeout)
NDK_TcpListen	../env/NDK.h	/^int NDK_TcpListen(uint unFd, int nBacklog);$/;"	p	signature:(uint unFd, int nBacklog)
NDK_TcpListen	../inc/NDK-bak.h	/^int NDK_TcpListen(uint unFd, int nBacklog);$/;"	p	signature:(uint unFd, int nBacklog)
NDK_TcpOpen	../env/NDK.h	/^int NDK_TcpOpen(uint *punFd);$/;"	p	signature:(uint *punFd)
NDK_TcpOpen	../inc/NDK-bak.h	/^int NDK_TcpOpen(uint *punFd);$/;"	p	signature:(uint *punFd)
NDK_TcpRead	../env/NDK.h	/^int NDK_TcpRead(uint unFd, void *pvOutBuf, uint unLen, uint unTimeout, uint *punReadLen);$/;"	p	signature:(uint unFd, void *pvOutBuf, uint unLen, uint unTimeout, uint *punReadLen)
NDK_TcpRead	../inc/NDK-bak.h	/^int NDK_TcpRead(uint unFd, void *pOutbuf, uint unLen, uint unTimeout, uint *punReadlen);$/;"	p	signature:(uint unFd, void *pOutbuf, uint unLen, uint unTimeout, uint *punReadlen)
NDK_TcpWait	../env/NDK.h	/^int NDK_TcpWait(uint unFd);$/;"	p	signature:(uint unFd)
NDK_TcpWait	../inc/NDK-bak.h	/^int NDK_TcpWait(uint unFd);$/;"	p	signature:(uint unFd)
NDK_TcpWrite	../env/NDK.h	/^int NDK_TcpWrite(uint unFd, const void *pvInbuf, uint unLen, uint unTimeout, uint *punWriteLen);$/;"	p	signature:(uint unFd, const void *pvInbuf, uint unLen, uint unTimeout, uint *punWriteLen)
NDK_TcpWrite	../inc/NDK-bak.h	/^int NDK_TcpWrite(uint unFd, const void *pInbuf, uint unLen, uint unTimeout, uint *punWriteLen);$/;"	p	signature:(uint unFd, const void *pInbuf, uint unLen, uint unTimeout, uint *punWriteLen)
NDK_TerminateThread	../env/NDK.h	/^int NDK_TerminateThread( NDK_HANDLE pvHandle );$/;"	p	signature:( NDK_HANDLE pvHandle )
NDK_TerminateThread	../inc/NDK-bak.h	/^int NDK_TerminateThread( NDK_HANDLE handle );$/;"	p	signature:( NDK_HANDLE handle )
NDK_ThreadSleep	../env/NDK.h	/^int NDK_ThreadSleep( int nWaitMs );$/;"	p	signature:( int nWaitMs )
NDK_ThreadSleep	../inc/NDK-bak.h	/^int NDK_ThreadSleep( int ms_wait );$/;"	p	signature:( int ms_wait )
NDK_VoiceCtrl	../env/NDK.h	/^ int NDK_VoiceCtrl(uint unVoiceId,EM_VOICE_CTRL emCtrlId,uint unValue);$/;"	p	signature:(uint unVoiceId,EM_VOICE_CTRL emCtrlId,uint unValue)
NDK_VoiceLoadFile	../env/NDK.h	/^int NDK_VoiceLoadFile(uint unVoiceId,char *pszFile);$/;"	p	signature:(uint unVoiceId,char *pszFile)
NDK_WL_ATCMD	../env/NDK.h	/^typedef struct NDK_WL_ATCMD{$/;"	s
NDK_WL_ATCMD	../inc/NDK-bak.h	/^typedef struct NDK_WL_ATCMD{$/;"	s
NDK_WL_ATCMD::AtCmdNo	../env/NDK.h	/^		EM_WLM_CMD AtCmdNo;		\/**<命令号*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
NDK_WL_ATCMD::AtCmdNo	../inc/NDK-bak.h	/^		EM_WLM_CMD AtCmdNo;	\/**<command No.*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
NDK_WL_ATCMD::pcAddParam	../env/NDK.h	/^		char *pcAddParam;		\/**<附加参数*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
NDK_WL_ATCMD::pcAddParam	../inc/NDK-bak.h	/^		char *pcAddParam;		\/**<additional parameters*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
NDK_WL_ATCMD::pcAtCmd	../env/NDK.h	/^		char *pcAtCmd;			\/**<命令字串*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
NDK_WL_ATCMD::pcAtCmd	../inc/NDK-bak.h	/^		char *pcAtCmd;			\/**<command string*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
NDK_Wait	../env/NDK.h	/^void NDK_Wait(uint  unWaitDuration);$/;"	p	signature:(uint unWaitDuration)
NDK_Wait	../inc/NDK-bak.h	/^void NDK_Wait(uint  unWaitDuration);$/;"	p	signature:(uint unWaitDuration)
NDK_WaitAndFlag	../env/NDK.h	/^NDK_HANDLE NDK_WaitAndFlag(uint unWaitDuration,uint *punFlag);$/;"	p	signature:(uint unWaitDuration,uint *punFlag)
NDK_WaitAndFlag	../inc/NDK-bak.h	/^NDK_HANDLE NDK_WaitAndFlag(uint unWaitDuration,uint *punFlag);$/;"	p	signature:(uint unWaitDuration,uint *punFlag)
NDK_WiFiConnect	../env/NDK.h	/^int NDK_WiFiConnect(const char *pszESSIDName, const ST_WIFI_PARAM *pstParam);$/;"	p	signature:(const char *pszESSIDName, const ST_WIFI_PARAM *pstParam)
NDK_WiFiConnect	../inc/NDK-bak.h	/^int NDK_WiFiConnect(const char *pszESSIDName, const ST_WIFI_PARAM *pstParam);$/;"	p	signature:(const char *pszESSIDName, const ST_WIFI_PARAM *pstParam)
NDK_WiFiConnectState	../env/NDK.h	/^int NDK_WiFiConnectState(EM_WPA_CONSTATE *pemState);$/;"	p	signature:(EM_WPA_CONSTATE *pemState)
NDK_WiFiConnectState	../inc/NDK-bak.h	/^int NDK_WiFiConnectState(EM_WPA_CONSTATE *pemState);$/;"	p	signature:(EM_WPA_CONSTATE *pemState)
NDK_WiFiGetMac	../env/NDK.h	/^int NDK_WiFiGetMac(char *pszMac);$/;"	p	signature:(char *pszMac)
NDK_WiFiGetMac	../inc/NDK-bak.h	/^int NDK_WiFiGetMac(char *pszMac);$/;"	p	signature:(char *pszMac)
NDK_WiFiGetNetInfo	../env/NDK.h	/^int NDK_WiFiGetNetInfo(ST_WIFI_APINFO *pstList, unsigned int unMaxNum, int *pnNumList);$/;"	p	signature:(ST_WIFI_APINFO *pstList, unsigned int unMaxNum, int *pnNumList)
NDK_WiFiGetNetInfo	../inc/NDK-bak.h	/^int NDK_WiFiGetNetInfo(ST_WIFI_APINFO *pstList, unsigned int unMaxNum, int *pnNumList);$/;"	p	signature:(ST_WIFI_APINFO *pstList, unsigned int unMaxNum, int *pnNumList)
NDK_WiFiGetNetList	../env/NDK.h	/^int NDK_WiFiGetNetList(char **ppszESSIDlist, int *pnNumList);$/;"	p	signature:(char **ppszESSIDlist, int *pnNumList)
NDK_WiFiGetNetList	../inc/NDK-bak.h	/^int NDK_WiFiGetNetList(char **ppszESSIDlist, int *pnNumList);$/;"	p	signature:(char **ppszESSIDlist, int *pnNumList)
NDK_WiFiGetSec	../env/NDK.h	/^int NDK_WiFiGetSec(const char *pszESSIDName, EM_WIFI_NET_SEC *pemSec);$/;"	p	signature:(const char *pszESSIDName, EM_WIFI_NET_SEC *pemSec)
NDK_WiFiInit	../env/NDK.h	/^int NDK_WiFiInit(void);$/;"	p	signature:(void)
NDK_WiFiInit	../inc/NDK-bak.h	/^int NDK_WiFiInit(void);$/;"	p	signature:(void)
NDK_WiFiIsConnected	../env/NDK.h	/^int NDK_WiFiIsConnected(void);$/;"	p	signature:(void)
NDK_WiFiIsConnected	../inc/NDK-bak.h	/^int NDK_WiFiIsConnected(void);$/;"	p	signature:(void)
NDK_WiFiShutdown	../env/NDK.h	/^int NDK_WiFiShutdown(void);$/;"	p	signature:(void)
NDK_WiFiShutdown	../inc/NDK-bak.h	/^int NDK_WiFiShutdown(void);$/;"	p	signature:(void)
NDK_WiFiSignalCover	../env/NDK.h	/^int NDK_WiFiSignalCover(const char *pszNetName, int *pnSignal);$/;"	p	signature:(const char *pszNetName, int *pnSignal)
NDK_WiFiSignalCover	../inc/NDK-bak.h	/^int NDK_WiFiSignalCover(const char *pszNetName, int *pnSignal);$/;"	p	signature:(const char *pszNetName, int *pnSignal)
NDK_WiFiSleep	../env/NDK.h	/^int NDK_WiFiSleep(void);$/;"	p	signature:(void)
NDK_WiFiWakeUp	../env/NDK.h	/^int NDK_WiFiWakeUp(void);$/;"	p	signature:(void)
NDK_WlCloseRF	../env/NDK.h	/^int NDK_WlCloseRF(void);$/;"	p	signature:(void)
NDK_WlCloseRF	../inc/NDK-bak.h	/^int NDK_WlCloseRF(void);$/;"	p	signature:(void)
NDK_WlGetInfo	../env/NDK.h	/^int NDK_WlGetInfo(EM_WLM_TYPE_INFO emType,char *pszValue,uint unBufLen);$/;"	p	signature:(EM_WLM_TYPE_INFO emType,char *pszValue,uint unBufLen)
NDK_WlGetStationInfo	../env/NDK.h	/^int NDK_WlGetStationInfo(ST_MOBILE_STATION_INFO * pstStationInfo);$/;"	p	signature:(ST_MOBILE_STATION_INFO * pstStationInfo)
NDK_WlInit	../env/NDK.h	/^int NDK_WlInit(int nTimeout,const char *pszPinPassWord,EM_WLM_STATUS *pemStatus);$/;"	p	signature:(int nTimeout,const char *pszPinPassWord,EM_WLM_STATUS *pemStatus)
NDK_WlInit	../inc/NDK-bak.h	/^int NDK_WlInit(int nTimeout,const char *pszPINPassWord,EM_WLM_STATUS *pemStatus);$/;"	p	signature:(int nTimeout,const char *pszPINPassWord,EM_WLM_STATUS *pemStatus)
NDK_WlModemClose	../env/NDK.h	/^int NDK_WlModemClose(void);$/;"	p	signature:(void)
NDK_WlModemClose	../inc/NDK-bak.h	/^int NDK_WlModemClose(void);$/;"	p	signature:(void)
NDK_WlModemGetSQ	../env/NDK.h	/^int NDK_WlModemGetSQ(int *pnSq);$/;"	p	signature:(int *pnSq)
NDK_WlModemGetSQ	../inc/NDK-bak.h	/^int NDK_WlModemGetSQ(int *pnSq);$/;"	p	signature:(int *pnSq)
NDK_WlModemReset	../env/NDK.h	/^int NDK_WlModemReset(void);$/;"	p	signature:(void)
NDK_WlModemReset	../inc/NDK-bak.h	/^int NDK_WlModemReset(void);$/;"	p	signature:(void)
NDK_WlSelSIM	../env/NDK.h	/^int NDK_WlSelSIM(uchar ucSimNo);$/;"	p	signature:(uchar ucSimNo)
NDK_WlSelSIM	../inc/NDK-bak.h	/^int NDK_WlSelSIM(uchar ucSimNo);$/;"	p	signature:(uchar ucSimNo)
NDK_WlSendATCmd	../env/NDK.h	/^int NDK_WlSendATCmd(const ST_ATCMD_PACK *pstATCmdPack,char *pszOutput,uint unMaxLen,uint unTimeout,EM_WLM_STATUS *pemStatus);$/;"	p	signature:(const ST_ATCMD_PACK *pstATCmdPack,char *pszOutput,uint unMaxLen,uint unTimeout,EM_WLM_STATUS *pemStatus)
NDK_WlSendATCmd	../inc/NDK-bak.h	/^int NDK_WlSendATCmd(const ST_ATCMD_PACK *pstATCmdPack,char *pszOutput,uint unMaxlen,uint unTimeout,EM_WLM_STATUS *pemStatus);$/;"	p	signature:(const ST_ATCMD_PACK *pstATCmdPack,char *pszOutput,uint unMaxlen,uint unTimeout,EM_WLM_STATUS *pemStatus)
NEW_CERT_FILE	../inc/PriKeyDownload.h	115;"	d
NEW_ENQ	../inc/PriKeyDownload.h	161;"	d
NEW_ENQ_ACK	../inc/PriKeyDownload.h	162;"	d
NINE	../inc/PriKeyDownload.h	49;"	d
NL8000	../libapi/lui.h	42;"	d
NL8080	../libapi/lui.h	43;"	d
NL8200	../libapi/lui.h	45;"	d
NL8300	../libapi/lui.h	46;"	d
NL8510	../libapi/lui.h	47;"	d
NLE80	../libapi/lui.h	44;"	d
NLGP710	../libapi/lui.h	49;"	d
NLGP720	../libapi/lui.h	50;"	d
NLGP730	../libapi/lui.h	51;"	d
NLGP730CS	../libapi/lui.h	52;"	d
NLGP750	../libapi/lui.h	53;"	d
NLGP8510	../libapi/lui.h	48;"	d
NL_CA_CERT_FILE	../inc/key.h	86;"	d
NL_CA_PATH	../inc/key.h	85;"	d
NL_COLOR_T	../env/NDK.h	303;"	d
NL_COLOR_T	../inc/NDK-bak.h	296;"	d
NL_KLD_AUTH_CERT_NAME	../inc/key.h	90;"	d
NL_KLD_AUTH_CERT_PATH	../inc/key.h	89;"	d
NL_KLD_AUTH_KEY	../inc/key.h	88;"	d
NL_KLD_ENC_CERT_NAME	../inc/key.h	94;"	d
NL_KLD_ENC_CERT_PATH	../inc/key.h	93;"	d
NL_KLD_ENC_KEY	../inc/key.h	92;"	d
NL_KLD_RSA_KEY_SIZE	../inc/key.h	84;"	d
NN_ASSIGN_DIGIT	../inc/emvnn.h	103;"	d
NN_Add	../inc/emvnn.h	/^NN_DIGIT NN_Add PROTO_LIST((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_Add	../src/emvnn.c	/^NN_DIGIT NN_Add (a, b, c, digits)$/;"	f
NN_AddDigitMult	../src/emvnn.c	/^static NN_DIGIT NN_AddDigitMult (a, b, c, d, digits)$/;"	f	file:
NN_AddDigitMult	../src/emvnn.c	/^static NN_DIGIT NN_AddDigitMult PROTO_LIST$/;"	p	file:	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT, NN_DIGIT *, unsigned int)
NN_Assign	../inc/emvnn.h	/^void NN_Assign PROTO_LIST ((NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_Assign	../src/emvnn.c	/^void NN_Assign (a, b, digits)$/;"	f
NN_Assign2Exp	../inc/emvnn.h	/^void NN_Assign2Exp PROTO_LIST ((NN_DIGIT *, unsigned int, unsigned int));$/;"	p	signature:(NN_DIGIT *, unsigned int, unsigned int)
NN_Assign2Exp	../src/emvnn.c	/^void NN_Assign2Exp (a, b, digits)$/;"	f
NN_AssignZero	../inc/emvnn.h	/^void NN_AssignZero PROTO_LIST ((NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, unsigned int)
NN_AssignZero	../src/emvnn.c	/^void NN_AssignZero (a, digits)$/;"	f
NN_Bits	../inc/emvnn.h	/^unsigned int NN_Bits PROTO_LIST ((NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, unsigned int)
NN_Bits	../src/emvnn.c	/^unsigned int NN_Bits (a, digits)$/;"	f
NN_Cmp	../inc/emvnn.h	/^int NN_Cmp PROTO_LIST ((NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_Cmp	../src/emvnn.c	/^int NN_Cmp (a, b, digits)$/;"	f
NN_DIGIT	../inc/emvnn.h	/^typedef UINT4 NN_DIGIT;$/;"	t
NN_DIGIT_BITS	../inc/emvnn.h	26;"	d
NN_DIGIT_LEN	../inc/emvnn.h	29;"	d
NN_Decode	../inc/emvnn.h	/^void NN_Decode PROTO_LIST((NN_DIGIT *, unsigned int, unsigned char *, unsigned int));$/;"	p	signature:(NN_DIGIT *, unsigned int, unsigned char *, unsigned int)
NN_Decode	../src/emvnn.c	/^void NN_Decode (a, digits, b, len)$/;"	f
NN_DigitBits	../src/emvnn.c	/^static unsigned int NN_DigitBits (a)$/;"	f	file:
NN_DigitBits	../src/emvnn.c	/^static unsigned int NN_DigitBits PROTO_LIST ((NN_DIGIT));$/;"	p	file:	signature:(NN_DIGIT)
NN_DigitDiv	../src/emvnn.c	/^void NN_DigitDiv (a, b, c)$/;"	f
NN_DigitMult	../src/emvnn.c	/^void NN_DigitMult (a, b, c)$/;"	f
NN_Digits	../inc/emvnn.h	/^unsigned int NN_Digits PROTO_LIST ((NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, unsigned int)
NN_Digits	../src/emvnn.c	/^unsigned int NN_Digits (a, digits)$/;"	f
NN_Div	../inc/emvnn.h	/^void NN_Div PROTO_LIST((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int, NN_DIGIT *,unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int, NN_DIGIT *,unsigned int)
NN_Div	../src/emvnn.c	/^void NN_Div (a, b, c, cDigits, d, dDigits)$/;"	f
NN_EQUAL	../inc/emvnn.h	104;"	d
NN_EVEN	../inc/emvnn.h	105;"	d
NN_Encode	../inc/emvnn.h	/^void NN_Encode PROTO_LIST((unsigned char *, unsigned int, NN_DIGIT *, unsigned int));$/;"	p	signature:(unsigned char *, unsigned int, NN_DIGIT *, unsigned int)
NN_Encode	../src/emvnn.c	/^void NN_Encode (a, len, b, digits)$/;"	f
NN_Gcd	../inc/emvnn.h	/^void NN_Gcd PROTO_LIST ((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_Gcd	../src/emvnn.c	/^void NN_Gcd (a, b, c, digits)$/;"	f
NN_HALF_DIGIT	../inc/emvnn.h	/^typedef UINT2 NN_HALF_DIGIT;$/;"	t
NN_HALF_DIGIT_BITS	../inc/emvnn.h	27;"	d
NN_LShift	../inc/emvnn.h	/^NN_DIGIT NN_LShift PROTO_LIST((NN_DIGIT *, NN_DIGIT *, unsigned int, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, unsigned int, unsigned int)
NN_LShift	../src/emvnn.c	/^NN_DIGIT NN_LShift (a, b, c, digits)$/;"	f
NN_Mod	../inc/emvnn.h	/^void NN_Mod PROTO_LIST((NN_DIGIT *, NN_DIGIT *, unsigned int, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, unsigned int, NN_DIGIT *, unsigned int)
NN_Mod	../src/emvnn.c	/^void NN_Mod (a, b, bDigits, c, cDigits)$/;"	f
NN_ModExp	../inc/emvnn.h	/^void NN_ModExp PROTO_LIST((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int, NN_DIGIT *,unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int, NN_DIGIT *,unsigned int)
NN_ModExp	../src/emvnn.c	/^void NN_ModExp (a, b, c, cDigits, d, dDigits)$/;"	f
NN_ModInv	../inc/emvnn.h	/^void NN_ModInv PROTO_LIST((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_ModInv	../src/emvnn.c	/^void NN_ModInv (a, b, c, digits)$/;"	f
NN_ModMult	../inc/emvnn.h	/^void NN_ModMult PROTO_LIST((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_ModMult	../src/emvnn.c	/^void NN_ModMult (a, b, c, d, digits)$/;"	f
NN_Mult	../inc/emvnn.h	/^void NN_Mult PROTO_LIST ((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_Mult	../src/emvnn.c	/^void NN_Mult (a, b, c, digits)$/;"	f
NN_RShift	../inc/emvnn.h	/^NN_DIGIT NN_RShift PROTO_LIST((NN_DIGIT *, NN_DIGIT *, unsigned int, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, unsigned int, unsigned int)
NN_RShift	../src/emvnn.c	/^NN_DIGIT NN_RShift (a, b, c, digits)$/;"	f
NN_Sub	../inc/emvnn.h	/^NN_DIGIT NN_Sub PROTO_LIST((NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT *, unsigned int)
NN_Sub	../src/emvnn.c	/^NN_DIGIT NN_Sub (a, b, c, digits)$/;"	f
NN_SubDigitMult	../src/emvnn.c	/^static NN_DIGIT NN_SubDigitMult (a, b, c, d, digits)$/;"	f	file:
NN_SubDigitMult	../src/emvnn.c	/^static NN_DIGIT NN_SubDigitMult PROTO_LIST$/;"	p	file:	signature:(NN_DIGIT *, NN_DIGIT *, NN_DIGIT, NN_DIGIT *, unsigned int)
NN_Zero	../inc/emvnn.h	/^int NN_Zero PROTO_LIST ((NN_DIGIT *, unsigned int));$/;"	p	signature:(NN_DIGIT *, unsigned int)
NN_Zero	../src/emvnn.c	/^int NN_Zero (a, digits)$/;"	f
NO	../libapi/ltool.h	/^	NO   = '0',$/;"	e	enum:__anon178
NOMAINTK	../libapi/lposcard.h	/^	NOMAINTK = 0x00,							\/**<没有优先道，只要有1个磁道对 	*\/$/;"	e	enum:EM_MAINTK
NONEENQ	../inc/PriKeyDownload.h	128;"	d
NORMALOPER	../inc/oper.h	18;"	d
NORMALOPERPWD	../src/oper.c	15;"	d	file:
NORMALPWDLEN	../src/oper.c	20;"	d	file:
NULL	../inc/tr31_format.h	19;"	d
NUM_STA	../inc/theme.h	/^    NUM_STA = 3$/;"	e	enum:__anon164
N_	../inc/intl.h	32;"	d
N_	../inc/intl.h	34;"	d
N_	../inc/intl.h	38;"	d
NormalShow	../inc/Pri_DownloadTool.h	/^void NormalShow(char *szChinese, char *szEnglish, int nSeconds);$/;"	p	signature:(char *szChinese, char *szEnglish, int nSeconds)
NormalShow	../src/Pri_DownloadTool.c	/^void NormalShow(char *szChinese, char *szEnglish, int nSeconds)$/;"	f	signature:(char *szChinese, char *szEnglish, int nSeconds)
OBJS	../build/Makefile	/^OBJS=$(patsubst $(VPATH)\/%.c,%.o,$(SRCS))$/;"	m
OBJS	../src/Makefile	/^OBJS=$(patsubst $(VPATH)\/%.c,%.o,$(SRCS))$/;"	m
ONE	../inc/PriKeyDownload.h	41;"	d
ONEMILLISECOND	../env/NDK.h	5429;"	d
ONEMILLISECOND	../inc/NDK-bak.h	4323;"	d
ONEMINUTE	../env/NDK.h	5431;"	d
ONEMINUTE	../inc/NDK-bak.h	4325;"	d
ONESECOND	../env/NDK.h	5430;"	d
ONESECOND	../inc/NDK-bak.h	4324;"	d
OPENLINE	../src/main.c	32;"	d	file:
OPER	../inc/posdef.h	8;"	d
OPERCODELEN	../inc/oper.h	23;"	d
OPT2_ID	../inc/tr31_format.h	70;"	d
OPT2_LEN	../inc/tr31_format.h	72;"	d
OPT2_NR	../inc/tr31_format.h	71;"	d
OPT_ID	../inc/tr31_format.h	67;"	d
OPT_LEN	../inc/tr31_format.h	69;"	d
OPT_NR	../inc/tr31_format.h	68;"	d
PADSTATE_DOWN	../env/NDK.h	/^        PADSTATE_DOWN,       \/**<像素坐标点按下*\/$/;"	e	enum:__anon11
PADSTATE_KEY	../env/NDK.h	/^        PADSTATE_KEY,           \/**<有按键被按下*\/$/;"	e	enum:__anon11
PADSTATE_UP	../env/NDK.h	/^        PADSTATE_UP,             \/**<像素坐标点弹起*\/$/;"	e	enum:__anon11
PARSECFG_H_INCLUDED	../inc/parsecfg.h	26;"	d
PARSECFG_VERSION	../inc/parsecfg.h	29;"	d
PARSECFG_VERSION	../inc/parsecfg.h	30;"	d
PDEBUG	../inc/PriKeyDownload.h	11;"	d
PDEBUG	../inc/PriKeyDownload.h	13;"	d
PDEBUG	../inc/selftest.h	20;"	d
PDEBUG	../inc/selftest.h	22;"	d
PIC_H	../inc/selftest.h	66;"	d
POINTER	../inc/emvrsa.h	/^typedef unsigned char *POINTER;$/;"	t
PORT_AUX	../inc/PriKeyDownload.h	73;"	d
PORT_NONE	../inc/PriKeyDownload.h	72;"	d
PORT_NUM_BT	../env/NDK.h	/^    PORT_NUM_BT = 11   \/**<BT 主设备串口*\/$/;"	e	enum:__anon40
PORT_NUM_COM1	../env/NDK.h	/^    PORT_NUM_COM1 = 0,	\/**<串口1*\/$/;"	e	enum:__anon40
PORT_NUM_COM1	../inc/NDK-bak.h	/^    PORT_NUM_COM1 = 0,	\/**<serial port 1*\/$/;"	e	enum:__anon123
PORT_NUM_COM2	../env/NDK.h	/^    PORT_NUM_COM2 = 1,	\/**<串口2*\/$/;"	e	enum:__anon40
PORT_NUM_COM2	../inc/NDK-bak.h	/^    PORT_NUM_COM2 = 1,	\/**<serial port 2*\/$/;"	e	enum:__anon123
PORT_NUM_MODEM	../env/NDK.h	/^    PORT_NUM_MODEM = 6,	\/**<有线模块*\/$/;"	e	enum:__anon40
PORT_NUM_MODEM	../inc/NDK-bak.h	/^    PORT_NUM_MODEM = 6,	\/**<The cable module*\/$/;"	e	enum:__anon123
PORT_NUM_MUX1	../env/NDK.h	/^    PORT_NUM_MUX1 = 3,	\/**<多路复用1*\/$/;"	e	enum:__anon40
PORT_NUM_MUX1	../inc/NDK-bak.h	/^    PORT_NUM_MUX1 = 3,	\/**<Multiplexing 1*\/$/;"	e	enum:__anon123
PORT_NUM_MUX2	../env/NDK.h	/^    PORT_NUM_MUX2 = 4,	\/**<多路复用2*\/$/;"	e	enum:__anon40
PORT_NUM_MUX2	../inc/NDK-bak.h	/^    PORT_NUM_MUX2 = 4,	\/**<Multiplexing 2*\/$/;"	e	enum:__anon123
PORT_NUM_MUX3	../env/NDK.h	/^    PORT_NUM_MUX3 = 5,	\/**<多路复用3*\/$/;"	e	enum:__anon40
PORT_NUM_MUX3	../inc/NDK-bak.h	/^    PORT_NUM_MUX3 = 5,	\/**<Multiplexing 3*\/$/;"	e	enum:__anon123
PORT_NUM_SCAN	../env/NDK.h	/^    PORT_NUM_SCAN = 9,   \/**<扫描模块*\/$/;"	e	enum:__anon40
PORT_NUM_USB	../env/NDK.h	/^    PORT_NUM_USB = 8,	\/**<USB模块*\/$/;"	e	enum:__anon40
PORT_NUM_USB	../inc/NDK-bak.h	/^    PORT_NUM_USB = 8	\/**<USB module*\/$/;"	e	enum:__anon123
PORT_NUM_USB_HOST	../env/NDK.h	/^    PORT_NUM_USB_HOST = 10,  \/**<USB 主设备串口*\/$/;"	e	enum:__anon40
PORT_NUM_WIFI	../env/NDK.h	/^    PORT_NUM_WIFI = 7,	\/**<Wifi模块*\/$/;"	e	enum:__anon40
PORT_NUM_WIFI	../inc/NDK-bak.h	/^    PORT_NUM_WIFI = 7,	\/**<Wifi module*\/$/;"	e	enum:__anon123
PORT_NUM_WIRELESS	../env/NDK.h	/^    PORT_NUM_WIRELESS = 2,	\/**<无线模块*\/$/;"	e	enum:__anon40
PORT_NUM_WIRELESS	../inc/NDK-bak.h	/^    PORT_NUM_WIRELESS = 2,	\/**<wireless module*\/$/;"	e	enum:__anon123
PORT_USB	../inc/PriKeyDownload.h	75;"	d
POS_CENTER	../env/widget.h	/^	POS_CENTER    = 0x00000022,$/;"	e	enum:__anon79
POS_DOWN	../env/widget.h	/^	POS_DOWN      = 0x00000010,$/;"	e	enum:__anon79
POS_HCENTER	../env/widget.h	/^	POS_HCENTER   = 0x00000002,$/;"	e	enum:__anon79
POS_HORIZ	../env/widget.h	/^	POS_HORIZ     = 0x00000018,$/;"	e	enum:__anon79
POS_LEFT	../env/widget.h	/^	POS_LEFT      = 0x00000001,$/;"	e	enum:__anon79
POS_MODEL	../inc/posdef.h	68;"	d
POS_MODEL	../inc/posdef.h	72;"	d
POS_MODEL	../inc/posdef.h	76;"	d
POS_RIGHT	../env/widget.h	/^	POS_RIGHT     = 0x00000004,$/;"	e	enum:__anon79
POS_UP	../env/widget.h	/^	POS_UP        = 0x00000008,$/;"	e	enum:__anon79
POS_VCENTER	../env/widget.h	/^	POS_VCENTER   = 0x00000020,$/;"	e	enum:__anon79
POS_VERT	../env/widget.h	/^	POS_VERT	  = 0x00000005,$/;"	e	enum:__anon79
POWER	../inc/NDK-bak.h	/^    POWER,			\/**<ON OFF*\/$/;"	e	enum:__anon134
PPPIntervalTimeOut	../env/NDK.h	/^    unsigned int PPPIntervalTimeOut; \/**<维持长链接的数据包发送的时间间隔,<30S将不会进行长链接的维持*\/$/;"	m	struct:__anon50	access:public
PPPIntervalTimeOut	../inc/NDK-bak.h	/^    unsigned int PPPIntervalTimeOut; \/**<time interval of sending data package of long-polling maintenance, <if it is 30S, no maintenance will be done to long-polling*\/$/;"	m	struct:__anon127	access:public
PPP_STATUS_CONNECTED	../env/NDK.h	/^    PPP_STATUS_CONNECTED=5,			\/**<PPP已连接*\/$/;"	e	enum:__anon49
PPP_STATUS_CONNECTED	../inc/NDK-bak.h	/^    PPP_STATUS_CONNECTED=5,			\/**<PPP connected*\/$/;"	e	enum:__anon126
PPP_STATUS_CONNECTING	../env/NDK.h	/^    PPP_STATUS_CONNECTING=2,		\/**<PPP正在连接*\/$/;"	e	enum:__anon49
PPP_STATUS_CONNECTING	../inc/NDK-bak.h	/^    PPP_STATUS_CONNECTING=2,		\/**<PPP connecting*\/$/;"	e	enum:__anon126
PPP_STATUS_DISCONNECT	../env/NDK.h	/^    PPP_STATUS_DISCONNECT=0,		\/**<PPP未连接*\/$/;"	e	enum:__anon49
PPP_STATUS_DISCONNECT	../inc/NDK-bak.h	/^    PPP_STATUS_DISCONNECT=0,		\/**<PPP not connected*\/$/;"	e	enum:__anon126
PPP_STATUS_DISCONNECTING	../env/NDK.h	/^    PPP_STATUS_DISCONNECTING=6		\/**<正在挂断*\/$/;"	e	enum:__anon49
PPP_STATUS_DISCONNECTING	../inc/NDK-bak.h	/^    PPP_STATUS_DISCONNECTING=6		\/**<hanging up*\/$/;"	e	enum:__anon126
PRESSED	../inc/theme.h	/^    PRESSED = 2,$/;"	e	enum:__anon164
PRINTER	../inc/NDK-bak.h	/^    PRINTER,		\/**<printer*\/$/;"	e	enum:__anon134
PRINT_LOG	../inc/debug.h	26;"	d
PRINT_LOG	../inc/debug.h	30;"	d
PRIVATE_DEC_TMP_FILE_IN	../src/PriKey_app.c	1633;"	d	file:
PRIVATE_DEC_TMP_FILE_OUT	../src/PriKey_app.c	1634;"	d	file:
PRI_KEY_FILE	../inc/PriKeyDownload.h	113;"	d
PRN_CHANELNUM_TEMPERATURE	../env/NDK.h	/^	PRN_CHANELNUM_TEMPERATURE	\/**<温度采样*\/$/;"	e	enum:__anon15
PRN_CHANELNUM_VOLTAGE	../env/NDK.h	/^	PRN_CHANELNUM_VOLTAGE, 		\/**<电压采样*\/$/;"	e	enum:__anon15
PRN_FEEDPAPER_AFTER	../env/NDK.h	/^    PRN_FEEDPAPER_AFTER             \/**<单页打印完成后进纸*\/$/;"	e	enum:__anon21
PRN_FEEDPAPER_BEFORE	../env/NDK.h	/^    PRN_FEEDPAPER_BEFORE = 0,         \/**<单页打印前退纸*\/$/;"	e	enum:__anon21
PRN_HZ_FONT_12x12A	../env/NDK.h	/^	PRN_HZ_FONT_12x12A ,			\/**<宋体12x12点阵*\/$/;"	e	enum:__anon12
PRN_HZ_FONT_12x12A	../inc/NDK-bak.h	/^	PRN_HZ_FONT_12x12A ,			\/**<SimSun 12x12 bitmap*\/$/;"	e	enum:__anon97
PRN_HZ_FONT_12x16	../env/NDK.h	/^	PRN_HZ_FONT_12x16 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_12x16	../inc/NDK-bak.h	/^	PRN_HZ_FONT_12x16 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_16x16	../env/NDK.h	/^	PRN_HZ_FONT_16x16 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_16x16	../inc/NDK-bak.h	/^	PRN_HZ_FONT_16x16 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_16x32	../env/NDK.h	/^	PRN_HZ_FONT_16x32 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_16x32	../inc/NDK-bak.h	/^	PRN_HZ_FONT_16x32 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_16x8	../env/NDK.h	/^	PRN_HZ_FONT_16x8 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_16x8	../inc/NDK-bak.h	/^	PRN_HZ_FONT_16x8 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_24x24	../env/NDK.h	/^	PRN_HZ_FONT_24x24 = 1,$/;"	e	enum:__anon12
PRN_HZ_FONT_24x24	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x24 = 1,$/;"	e	enum:__anon97
PRN_HZ_FONT_24x24A	../env/NDK.h	/^	PRN_HZ_FONT_24x24A ,			\/**<自有宋体24x24点阵*\/$/;"	e	enum:__anon12
PRN_HZ_FONT_24x24A	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x24A ,			\/**<ProprietarySong 24x24 bitmap*\/$/;"	e	enum:__anon97
PRN_HZ_FONT_24x24B	../env/NDK.h	/^	PRN_HZ_FONT_24x24B ,			\/**<仿宋24x24点阵*\/$/;"	e	enum:__anon12
PRN_HZ_FONT_24x24B	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x24B ,			\/**<FangSong 24x24 bitmap*\/$/;"	e	enum:__anon97
PRN_HZ_FONT_24x24C	../env/NDK.h	/^	PRN_HZ_FONT_24x24C ,			\/**<楷体24x24点阵*\/$/;"	e	enum:__anon12
PRN_HZ_FONT_24x24C	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x24C ,			\/**<KaiTi 24x24 bitmap*\/$/;"	e	enum:__anon97
PRN_HZ_FONT_24x24USER	../env/NDK.h	/^	PRN_HZ_FONT_24x24USER ,$/;"	e	enum:__anon12
PRN_HZ_FONT_24x24USER	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x24USER ,$/;"	e	enum:__anon97
PRN_HZ_FONT_24x32	../env/NDK.h	/^	PRN_HZ_FONT_24x32 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_24x32	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x32 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_24x48A	../env/NDK.h	/^	PRN_HZ_FONT_24x48A ,$/;"	e	enum:__anon12
PRN_HZ_FONT_24x48A	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x48A ,$/;"	e	enum:__anon97
PRN_HZ_FONT_24x48B	../env/NDK.h	/^	PRN_HZ_FONT_24x48B ,$/;"	e	enum:__anon12
PRN_HZ_FONT_24x48B	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x48B ,$/;"	e	enum:__anon97
PRN_HZ_FONT_24x48C	../env/NDK.h	/^	PRN_HZ_FONT_24x48C ,$/;"	e	enum:__anon12
PRN_HZ_FONT_24x48C	../inc/NDK-bak.h	/^	PRN_HZ_FONT_24x48C ,$/;"	e	enum:__anon97
PRN_HZ_FONT_32x16	../env/NDK.h	/^	PRN_HZ_FONT_32x16 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_32x16	../inc/NDK-bak.h	/^	PRN_HZ_FONT_32x16 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_32x32	../env/NDK.h	/^	PRN_HZ_FONT_32x32 ,$/;"	e	enum:__anon12
PRN_HZ_FONT_32x32	../inc/NDK-bak.h	/^	PRN_HZ_FONT_32x32 ,$/;"	e	enum:__anon97
PRN_HZ_FONT_48x24A	../env/NDK.h	/^	PRN_HZ_FONT_48x24A ,$/;"	e	enum:__anon12
PRN_HZ_FONT_48x24A	../inc/NDK-bak.h	/^	PRN_HZ_FONT_48x24A ,$/;"	e	enum:__anon97
PRN_HZ_FONT_48x24B	../env/NDK.h	/^	PRN_HZ_FONT_48x24B ,$/;"	e	enum:__anon12
PRN_HZ_FONT_48x24B	../inc/NDK-bak.h	/^	PRN_HZ_FONT_48x24B ,$/;"	e	enum:__anon97
PRN_HZ_FONT_48x24C	../env/NDK.h	/^	PRN_HZ_FONT_48x24C ,$/;"	e	enum:__anon12
PRN_HZ_FONT_48x24C	../inc/NDK-bak.h	/^	PRN_HZ_FONT_48x24C ,$/;"	e	enum:__anon97
PRN_HZ_FONT_48x48A	../env/NDK.h	/^	PRN_HZ_FONT_48x48A ,$/;"	e	enum:__anon12
PRN_HZ_FONT_48x48A	../inc/NDK-bak.h	/^	PRN_HZ_FONT_48x48A ,$/;"	e	enum:__anon97
PRN_HZ_FONT_48x48B	../env/NDK.h	/^	PRN_HZ_FONT_48x48B ,$/;"	e	enum:__anon12
PRN_HZ_FONT_48x48B	../inc/NDK-bak.h	/^	PRN_HZ_FONT_48x48B ,$/;"	e	enum:__anon97
PRN_HZ_FONT_48x48C	../env/NDK.h	/^	PRN_HZ_FONT_48x48C$/;"	e	enum:__anon12
PRN_HZ_FONT_48x48C	../inc/NDK-bak.h	/^	PRN_HZ_FONT_48x48C$/;"	e	enum:__anon97
PRN_MODE_ALL_DOUBLE	../env/NDK.h	/^	PRN_MODE_ALL_DOUBLE = 0,			\/**<横向放大、纵向放大*\/$/;"	e	enum:__anon17
PRN_MODE_ALL_DOUBLE	../inc/NDK-bak.h	/^	PRN_MODE_ALL_DOUBLE = 0,			\/**<In longitudinal and transverse magnification zoom in*\/$/;"	e	enum:__anon101
PRN_MODE_HEIGHT_DOUBLE	../env/NDK.h	/^	PRN_MODE_HEIGHT_DOUBLE,       \/**<横向正常、纵向放大*\/$/;"	e	enum:__anon17
PRN_MODE_HEIGHT_DOUBLE	../inc/NDK-bak.h	/^	PRN_MODE_HEIGHT_DOUBLE,       \/**<Transverse, longitudinal magnification normally*\/$/;"	e	enum:__anon101
PRN_MODE_NORMAL	../env/NDK.h	/^	PRN_MODE_NORMAL               \/**<横向正常、纵向正常*\/$/;"	e	enum:__anon17
PRN_MODE_NORMAL	../inc/NDK-bak.h	/^	PRN_MODE_NORMAL               \/**<Transverse, longitudinal normal to normal*\/$/;"	e	enum:__anon101
PRN_MODE_WIDTH_DOUBLE	../env/NDK.h	/^	PRN_MODE_WIDTH_DOUBLE ,			\/**<横向放大、纵向正常*\/$/;"	e	enum:__anon17
PRN_MODE_WIDTH_DOUBLE	../inc/NDK-bak.h	/^	PRN_MODE_WIDTH_DOUBLE ,			\/**<In longitudinal and transverse magnification is normal*\/$/;"	e	enum:__anon101
PRN_STATUS_BUSY	../env/NDK.h	/^	PRN_STATUS_BUSY = 8,			\/**<打印机正在打印*\/$/;"	e	enum:__anon14
PRN_STATUS_BUSY	../inc/NDK-bak.h	/^	PRN_STATUS_BUSY = 8,			\/**<printer is printing*\/$/;"	e	enum:__anon99
PRN_STATUS_NOPAPER	../env/NDK.h	/^	PRN_STATUS_NOPAPER = 2,       \/**<打印机缺纸*\/$/;"	e	enum:__anon14
PRN_STATUS_NOPAPER	../inc/NDK-bak.h	/^	PRN_STATUS_NOPAPER = 2,       \/**<printer out of paper*\/$/;"	e	enum:__anon99
PRN_STATUS_OK	../env/NDK.h	/^	PRN_STATUS_OK = 0,			\/**<打印机正常*\/$/;"	e	enum:__anon14
PRN_STATUS_OK	../inc/NDK-bak.h	/^	PRN_STATUS_OK = 0,			\/**<printer operates well*\/$/;"	e	enum:__anon99
PRN_STATUS_OVERHEAT	../env/NDK.h	/^	PRN_STATUS_OVERHEAT = 4,      \/**<打印机过热*\/$/;"	e	enum:__anon14
PRN_STATUS_OVERHEAT	../inc/NDK-bak.h	/^	PRN_STATUS_OVERHEAT = 4,      \/**<printer overheat*\/$/;"	e	enum:__anon99
PRN_STATUS_VOLERR	../env/NDK.h	/^	PRN_STATUS_VOLERR = 112       \/**<打印机电压异常*\/$/;"	e	enum:__anon14
PRN_STATUS_VOLERR	../inc/NDK-bak.h	/^	PRN_STATUS_VOLERR = 112       \/**<printer has abnormal voltage*\/$/;"	e	enum:__anon99
PRN_TYPE_END	../env/NDK.h	/^    PRN_TYPE_END               \/**<无*\/$/;"	e	enum:__anon16
PRN_TYPE_END	../inc/NDK-bak.h	/^    PRN_TYPE_END               \/**<NULL*\/$/;"	e	enum:__anon100
PRN_TYPE_FIP	../env/NDK.h	/^    PRN_TYPE_FIP,              \/**<摩擦针打*\/$/;"	e	enum:__anon16
PRN_TYPE_FIP	../inc/NDK-bak.h	/^    PRN_TYPE_FIP,              \/**<Friction & Dot-matrix*\/$/;"	e	enum:__anon100
PRN_TYPE_HIP	../env/NDK.h	/^    PRN_TYPE_HIP,              \/**<穿孔针打*\/$/;"	e	enum:__anon16
PRN_TYPE_HIP	../inc/NDK-bak.h	/^    PRN_TYPE_HIP,              \/**<Punch & dot-matrix*\/$/;"	e	enum:__anon100
PRN_TYPE_TP	../env/NDK.h	/^    PRN_TYPE_TP = 0,             \/**<热敏打印机*\/$/;"	e	enum:__anon16
PRN_TYPE_TP	../inc/NDK-bak.h	/^    PRN_TYPE_TP = 0,             \/**<thermal printer*\/$/;"	e	enum:__anon100
PRN_UNDERLINE_STATUS_CLOSE	../env/NDK.h	/^	PRN_UNDERLINE_STATUS_CLOSE			   \/**<下划线功能关*\/$/;"	e	enum:__anon18
PRN_UNDERLINE_STATUS_CLOSE	../inc/NDK-bak.h	/^	PRN_UNDERLINE_STATUS_CLOSE			   \/**<underline function OFF*\/$/;"	e	enum:__anon102
PRN_UNDERLINE_STATUS_OPEN	../env/NDK.h	/^	PRN_UNDERLINE_STATUS_OPEN = 0,			\/**<下划线功能开*\/$/;"	e	enum:__anon18
PRN_UNDERLINE_STATUS_OPEN	../inc/NDK-bak.h	/^	PRN_UNDERLINE_STATUS_OPEN = 0,			\/**<underline function ON*\/$/;"	e	enum:__anon102
PRN_ZM_FONT_10x16	../env/NDK.h	/^	PRN_ZM_FONT_10x16 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_10x16	../inc/NDK-bak.h	/^	PRN_ZM_FONT_10x16 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_10x8	../env/NDK.h	/^	PRN_ZM_FONT_10x8 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_10x8	../inc/NDK-bak.h	/^	PRN_ZM_FONT_10x8 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_12x12	../env/NDK.h	/^	PRN_ZM_FONT_12x12 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_12x12	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x12$/;"	e	enum:__anon98
PRN_ZM_FONT_12x16A	../env/NDK.h	/^	PRN_ZM_FONT_12x16A ,       \/**<MSGothic粗体12x16点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_12x16A	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x16A ,       \/**<MSGothic bold 12x16 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_12x16B	../env/NDK.h	/^	PRN_ZM_FONT_12x16B ,				\/**<MSGothic粗体12x16点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_12x16B	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x16B ,				\/**<MSGothic bold 12x16 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_12x16C	../env/NDK.h	/^	PRN_ZM_FONT_12x16C ,				\/**<楷体粗体12x16点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_12x16C	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x16C ,				\/**<KaiTi bold 12x16 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_12x24A	../env/NDK.h	/^	PRN_ZM_FONT_12x24A ,				\/**<Gulimche字体12x24点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_12x24A	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x24A ,				\/**<Gulimche font 12x24 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_12x24B	../env/NDK.h	/^	PRN_ZM_FONT_12x24B ,				\/**<MSGothic粗体12x24点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_12x24B	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x24B ,				\/**<MSGothic bold 12x24 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_12x24C	../env/NDK.h	/^	PRN_ZM_FONT_12x24C ,				\/**<楷体粗体12x24点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_12x24C	../inc/NDK-bak.h	/^	PRN_ZM_FONT_12x24C ,				\/**<KaiTi bold 12x24 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_16x16	../env/NDK.h	/^	PRN_ZM_FONT_16x16 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_16x16	../inc/NDK-bak.h	/^	PRN_ZM_FONT_16x16 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_16x32	../env/NDK.h	/^	PRN_ZM_FONT_16x32 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_16x32	../inc/NDK-bak.h	/^	PRN_ZM_FONT_16x32 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_16x32A	../env/NDK.h	/^	PRN_ZM_FONT_16x32A ,				\/**<MSGothic粗体16x32点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_16x32A	../inc/NDK-bak.h	/^	PRN_ZM_FONT_16x32A ,				\/**<MSGothic bold 16x32 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_16x32B	../env/NDK.h	/^	PRN_ZM_FONT_16x32B ,				\/**<MSGothic粗体16x32点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_16x32B	../inc/NDK-bak.h	/^	PRN_ZM_FONT_16x32B ,				\/**<MSGothic bold 16x32 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_16x32C	../env/NDK.h	/^	PRN_ZM_FONT_16x32C ,				\/**<楷体粗体16x32点阵*\/$/;"	e	enum:__anon13
PRN_ZM_FONT_16x32C	../inc/NDK-bak.h	/^	PRN_ZM_FONT_16x32C ,				\/**<KaiTi bold 16x32 bitmap*\/$/;"	e	enum:__anon98
PRN_ZM_FONT_24x24A	../env/NDK.h	/^	PRN_ZM_FONT_24x24A ,$/;"	e	enum:__anon13
PRN_ZM_FONT_24x24A	../inc/NDK-bak.h	/^	PRN_ZM_FONT_24x24A ,$/;"	e	enum:__anon98
PRN_ZM_FONT_24x24B	../env/NDK.h	/^	PRN_ZM_FONT_24x24B ,$/;"	e	enum:__anon13
PRN_ZM_FONT_24x24B	../inc/NDK-bak.h	/^	PRN_ZM_FONT_24x24B ,$/;"	e	enum:__anon98
PRN_ZM_FONT_24x24C	../env/NDK.h	/^	PRN_ZM_FONT_24x24C ,$/;"	e	enum:__anon13
PRN_ZM_FONT_24x24C	../inc/NDK-bak.h	/^	PRN_ZM_FONT_24x24C ,$/;"	e	enum:__anon98
PRN_ZM_FONT_24x32	../env/NDK.h	/^	PRN_ZM_FONT_24x32 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_24x32	../inc/NDK-bak.h	/^	PRN_ZM_FONT_24x32 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_32x32A	../env/NDK.h	/^	PRN_ZM_FONT_32x32A ,$/;"	e	enum:__anon13
PRN_ZM_FONT_32x32A	../inc/NDK-bak.h	/^	PRN_ZM_FONT_32x32A ,$/;"	e	enum:__anon98
PRN_ZM_FONT_32x32B	../env/NDK.h	/^	PRN_ZM_FONT_32x32B ,$/;"	e	enum:__anon13
PRN_ZM_FONT_32x32B	../inc/NDK-bak.h	/^	PRN_ZM_FONT_32x32B ,$/;"	e	enum:__anon98
PRN_ZM_FONT_32x32C	../env/NDK.h	/^	PRN_ZM_FONT_32x32C ,$/;"	e	enum:__anon13
PRN_ZM_FONT_32x32C	../inc/NDK-bak.h	/^	PRN_ZM_FONT_32x32C ,$/;"	e	enum:__anon98
PRN_ZM_FONT_5x16	../env/NDK.h	/^	PRN_ZM_FONT_5x16 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_5x16	../inc/NDK-bak.h	/^	PRN_ZM_FONT_5x16 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_5x7	../env/NDK.h	/^	PRN_ZM_FONT_5x7 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_5x7	../inc/NDK-bak.h	/^	PRN_ZM_FONT_5x7 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_6x8	../env/NDK.h	/^	PRN_ZM_FONT_6x8 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_6x8	../inc/NDK-bak.h	/^	PRN_ZM_FONT_6x8 ,$/;"	e	enum:__anon98
PRN_ZM_FONT_8x16	../env/NDK.h	/^	PRN_ZM_FONT_8x16 = 1,$/;"	e	enum:__anon13
PRN_ZM_FONT_8x16	../inc/NDK-bak.h	/^	PRN_ZM_FONT_8x16 = 1,$/;"	e	enum:__anon98
PRN_ZM_FONT_8x32	../env/NDK.h	/^	PRN_ZM_FONT_8x32$/;"	e	enum:__anon13
PRN_ZM_FONT_8x8	../env/NDK.h	/^	PRN_ZM_FONT_8x8 ,$/;"	e	enum:__anon13
PRN_ZM_FONT_8x8	../inc/NDK-bak.h	/^	PRN_ZM_FONT_8x8 ,$/;"	e	enum:__anon98
PROGRESSBAR_LEFT	../inc/theme.h	10;"	d
PROGRESSBAR_LEFT	../inc/theme.h	84;"	d
PROGRESSBAR_MID	../inc/theme.h	11;"	d
PROGRESSBAR_MID	../inc/theme.h	85;"	d
PROGRESSBAR_MIN_H	../inc/theme.h	13;"	d
PROGRESSBAR_MIN_H	../inc/theme.h	87;"	d
PROGRESSBAR_RIGHT	../inc/theme.h	12;"	d
PROGRESSBAR_RIGHT	../inc/theme.h	86;"	d
PROTO_LIST	../inc/emvrsa.h	28;"	d
PSAM_CARD	../src/PSam.c	15;"	d	file:
PSAM_MAX_APDU_BUFLEN	../src/PSam.c	14;"	d	file:
PollAuxPort	../inc/Pri_DownloadApi.h	/^int PollAuxPort();$/;"	p	signature:()
PollAuxPort	../src/Pri_DownloadApi.c	/^int PollAuxPort()$/;"	f
PollSeriPort	../inc/Pri_DownloadApi.h	/^int PollSeriPort();$/;"	p	signature:()
PollSeriPort	../src/Pri_DownloadApi.c	/^int PollSeriPort()$/;"	f
PollUSBPort	../inc/Pri_DownloadApi.h	/^int PollUSBPort();$/;"	p	signature:()
PollUSBPort	../src/Pri_DownloadApi.c	/^int PollUSBPort()$/;"	f
PortEnableCtrl	../src/PriKey_app.c	/^unsigned int PortEnableCtrl = (1<<PORT_AUX) | (1<<PORT_USB);        \/\/ 默认RS232\/USB串口均可用$/;"	v
PriFile_Creat	../inc/PriKeyDownload.h	/^int PriFile_Creat(R_RSA_PRIVATE_KEY *prikey);$/;"	p	signature:(R_RSA_PRIVATE_KEY *prikey)
PriFile_Creat	../src/PriKey_app.c	/^int PriFile_Creat(R_RSA_PRIVATE_KEY *prikey)$/;"	f	signature:(R_RSA_PRIVATE_KEY *prikey)
PriKeyConfDeal	../inc/PriKeyDownload.h	/^int PriKeyConfDeal(unsigned char *owner,unsigned char *ver,char *filenamebuf);$/;"	p	signature:(unsigned char *owner,unsigned char *ver,char *filenamebuf)
PriKeyConfDeal	../src/PriKey_app.c	/^int PriKeyConfDeal(unsigned char *owner,unsigned char *ver,char *filenamebuf)$/;"	f	signature:(unsigned char *owner,unsigned char *ver,char *filenamebuf)
PriKeyDownload	../inc/PriKeyDownload.h	/^int PriKeyDownload(R_RSA_PRIVATE_KEY *prikey);$/;"	p	signature:(R_RSA_PRIVATE_KEY *prikey)
PriKeyDownload	../src/PriKey_app.c	/^int PriKeyDownload(R_RSA_PRIVATE_KEY *prikey)$/;"	f	signature:(R_RSA_PRIVATE_KEY *prikey)
PriKeyInput	../inc/PriKeyDownload.h	/^int PriKeyInput();$/;"	p	signature:()
PriKeyInput	../src/PriKey_app.c	/^int PriKeyInput()$/;"	f
PriKeyOutput	../inc/PriKeyDownload.h	/^int PriKeyOutput();$/;"	p	signature:()
PriKeyOutput	../src/PriKey_app.c	/^int PriKeyOutput()$/;"	f
PriKey_Deal	../inc/PriKey_Deal.h	/^int PriKey_Deal();$/;"	p	signature:()
PriKey_Deal	../src/PriKey_Deal.c	/^int PriKey_Deal(R_RSA_PRIVATE_KEY *prikey,char *inbuf,char *outbuf,int flag)$/;"	f	signature:(R_RSA_PRIVATE_KEY *prikey,char *inbuf,char *outbuf,int flag)
ProMsgDlg	../src/main.c	/^extern int ProMsgDlg(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut, int nMode);$/;"	p	file:	signature:(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut, int nMode)
ProMsgDlg	../src/oper.c	/^extern int ProMsgDlg(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut, int nMode);$/;"	p	file:	signature:(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut, int nMode)
ProMsgDlg	../src/tools.c	/^int ProMsgDlg(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut, int nMode)$/;"	f	signature:(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut, int nMode)
Prompt	../inc/Pri_DownloadTool.h	/^int Prompt(char *s, int nAttr, int nSeconds);$/;"	p	signature:(char *s, int nAttr, int nSeconds)
Prompt	../src/Pri_DownloadTool.c	/^int Prompt(char *s, int nAttr, int nSeconds)$/;"	f	signature:(char *s, int nAttr, int nSeconds)
PubAddDigitStr	../libapi/ltool.h	/^int PubAddDigitStr (const char* pszDigStr1, const char* pszDigStr2, char* pszResult, int* pnResultLen );$/;"	p	signature:(const char* pszDigStr1, const char* pszDigStr2, char* pszResult, int* pnResultLen )
PubAddRec	../libapi/ltool.h	/^int PubAddRec (const char *pszFileName, const char *pszRec);$/;"	p	signature:(const char *pszFileName, const char *pszRec)
PubAddSymbolToStr	../libapi/ltool.h	/^int PubAddSymbolToStr(char *pszString, int nLen, char ch, int nOption);$/;"	p	signature:(char *pszString, int nLen, char ch, int nOption)
PubAllTrim	../libapi/ltool.h	/^void PubAllTrim(char *pszSrc);$/;"	p	signature:(char *pszSrc)
PubAscAddAsc	../libapi/ltool.h	/^void PubAscAddAsc(uchar *pszAsc1, uchar *pszAsc2, uchar *pszSum);$/;"	p	signature:(uchar *pszAsc1, uchar *pszAsc2, uchar *pszSum)
PubAscMulAsc	../libapi/ltool.h	/^void PubAscMulAsc(uchar *pszAsc1, uchar *pszAsc2, uchar *pszProduct );$/;"	p	signature:(uchar *pszAsc1, uchar *pszAsc2, uchar *pszProduct )
PubAscSubAsc	../libapi/ltool.h	/^void PubAscSubAsc(uchar *pszAsc1, uchar *pszAsc2, uchar *pszResult);$/;"	p	signature:(uchar *pszAsc1, uchar *pszAsc2, uchar *pszResult)
PubAscToHex	../libapi/ltool.h	/^int PubAscToHex (const unsigned char* pszAsciiBuf, int nLen, char cType, unsigned char* pszBcdBuf);$/;"	p	signature:(const unsigned char* pszAsciiBuf, int nLen, char cType, unsigned char* pszBcdBuf)
PubBcdToByte	../libapi/ltool.h	/^int PubBcdToByte(char ch, int *pnNum);$/;"	p	signature:(char ch, int *pnNum)
PubBcdToInt	../libapi/ltool.h	/^int PubBcdToInt(const char * psBcd, int *nNum);$/;"	p	signature:(const char * psBcd, int *nNum)
PubBeep	../libapi/ltool.h	/^void PubBeep(int nTimes);$/;"	p	signature:(int nTimes)
PubByteToBcd	../libapi/ltool.h	/^int PubByteToBcd(int nNum, char *ch);$/;"	p	signature:(int nNum, char *ch)
PubC2ToInt	../libapi/ltool.h	/^void PubC2ToInt(unsigned int *nNum, unsigned char *pszBuf);$/;"	p	signature:(unsigned int *nNum, unsigned char *pszBuf)
PubC4ToInt	../libapi/ltool.h	/^void PubC4ToInt (unsigned int* nNum, unsigned char * pszBuf );$/;"	p	signature:(unsigned int* nNum, unsigned char * pszBuf )
PubCalcLRC	../libapi/ltool.h	/^int PubCalcLRC(const char *psBuf, int nLen, char *chLRC);$/;"	p	signature:(const char *psBuf, int nLen, char *chLRC)
PubCardPowerDown	../libapi/lposcard.h	/^int PubCardPowerDown();$/;"	p	signature:()
PubCardPowerUp	../libapi/lposcard.h	/^int PubCardPowerUp(char *pszRes);$/;"	p	signature:(char *pszRes)
PubCardrw	../libapi/lposcard.h	/^int PubCardrw(const int nCommandLen, const char *pszCommand, int *pnLen, char *pszResponse);$/;"	p	signature:(const int nCommandLen, const char *pszCommand, int *pnLen, char *pszResponse)
PubClear2To4	../libapi/lui.h	/^void PubClear2To4 ( void );$/;"	p	signature:( void )
PubClearAll	../libapi/lui.h	/^void PubClearAll(void);$/;"	p	signature:(void)
PubClearLine	../libapi/lui.h	/^void PubClearLine(uchar ucStartLine, uchar ucEndLine);$/;"	p	signature:(uchar ucStartLine, uchar ucEndLine)
PubClearLines	../libapi/lui.h	/^void PubClearLines(uchar ucStartLine, uchar ucEndLine);$/;"	p	signature:(uchar ucStartLine, uchar ucEndLine)
PubCloseFile	../libapi/ltool.h	/^int PubCloseFile (int *pnFileHandle);$/;"	p	signature:(int *pnFileHandle)
PubCloseShowRtc	../libapi/lui.h	/^void PubCloseShowRtc(void);$/;"	p	signature:(void)
PubCloseShowStatusBar	../libapi/lui.h	/^void PubCloseShowStatusBar();$/;"	p	signature:()
PubConfirmDlg	../libapi/lui.h	/^int PubConfirmDlg(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut);$/;"	p	signature:(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut)
PubConvAmount	../libapi/ltool.h	/^void PubConvAmount(uchar *pszPrefix, uchar *pszIn, uchar ucRadPt, uchar *pszOut);$/;"	p	signature:(uchar *pszPrefix, uchar *pszIn, uchar ucRadPt, uchar *pszOut)
PubCopyIso	../libapi/ltool.h	/^int PubCopyIso(STISODataStru *pSourceIsoStru, STISODataStru *pTargetIsoStru);$/;"	p	signature:(STISODataStru *pSourceIsoStru, STISODataStru *pTargetIsoStru)
PubCreatRecFile	../libapi/ltool.h	/^int PubCreatRecFile(const STRECFILE *pstRecFile);$/;"	p	signature:(const STRECFILE *pstRecFile)
PubDeReclFile	../libapi/ltool.h	/^int PubDeReclFile (const char *pszFileName);$/;"	p	signature:(const char *pszFileName)
PubDebug	../libapi/ltool.h	/^void PubDebug(char* lpszFormat, ...);$/;"	p	signature:(char* lpszFormat, ...)
PubDebugData	../libapi/ltool.h	/^void PubDebugData(const char* pszTitle,const void* pData,int nLen);$/;"	p	signature:(const char* pszTitle,const void* pData,int nLen)
PubDelAllBit	../libapi/ltool.h	/^int PubDelAllBit(STISODataStru *pIsoStru);$/;"	p	signature:(STISODataStru *pIsoStru)
PubDelFile	../libapi/ltool.h	/^int PubDelFile (const char *pszFileName);$/;"	p	signature:(const char *pszFileName)
PubDelOneBit	../libapi/ltool.h	/^int PubDelOneBit(STISODataStru *pIsoStru, int nPosition);$/;"	p	signature:(STISODataStru *pIsoStru, int nPosition)
PubDelRec	../libapi/ltool.h	/^int PubDelRec(const char *pszFileName, const char *psIndexStr1,  const char *psIndexStr2);$/;"	p	signature:(const char *pszFileName, const char *psIndexStr1, const char *psIndexStr2)
PubDelSymbolFromStr	../libapi/ltool.h	/^void PubDelSymbolFromStr(uchar *pszString, uchar ucSymbol);$/;"	p	signature:(uchar *pszString, uchar ucSymbol)
PubDispErr	../libapi/lui.h	/^int PubDispErr(const char *pszTitle);$/;"	p	signature:(const char *pszTitle)
PubDispMultLines	../libapi/lui.h	/^void PubDispMultLines(int nFont, int nLineno, int nClumno, char * pFormat,...);$/;"	p	signature:(int nFont, int nLineno, int nClumno, char * pFormat,...)
PubDispPicList	../libapi/lui.h	/^void PubDispPicList(const uint unWidth, const uint unHeight, const char *pszPic, const char *pszStr, int nTimeout, int* pnItemNum);$/;"	p	signature:(const uint unWidth, const uint unHeight, const char *pszPic, const char *pszStr, int nTimeout, int* pnItemNum)
PubDispSelectMenu	../libapi/lui.h	/^int PubDispSelectMenu (const char * pszTitle, STMENU_LIST * pstMenu, const char* pszFunKey, int nTimeOut, int* pnKey);$/;"	p	signature:(const char * pszTitle, STMENU_LIST * pstMenu, const char* pszFunKey, int nTimeOut, int* pnKey)
PubDispStrFormat	../libapi/lui.h	/^void PubDispStrFormat(int nFont, int nLineno, char * pFormat,...);$/;"	p	signature:(int nFont, int nLineno, char * pFormat,...)
PubDisplayGen	../libapi/lui.h	/^void PubDisplayGen(int nLineno, char *pStr); $/;"	p	signature:(int nLineno, char *pStr)
PubDisplayGens	../libapi/lui.h	/^void PubDisplayGens(int nAlign, int nLineno, char *pStr);$/;"	p	signature:(int nAlign, int nLineno, char *pStr)
PubDisplayInv	../libapi/lui.h	/^void PubDisplayInv(int nLineno, char *pstr);$/;"	p	signature:(int nLineno, char *pstr)
PubDisplayInvs	../libapi/lui.h	/^void PubDisplayInvs(int nAlign, int nLineno, char *pstr); $/;"	p	signature:(int nAlign, int nLineno, char *pstr)
PubDisplayLogo	../libapi/lui.h	/^void PubDisplayLogo(char *pszPath, int nX, int nY);$/;"	p	signature:(char *pszPath, int nX, int nY)
PubDisplayStr	../libapi/lui.h	/^void PubDisplayStr(int nMode, int nLineno, int nClumno, char * pFormat,...);$/;"	p	signature:(int nMode, int nLineno, int nClumno, char * pFormat,...)
PubDisplayStrInline	../libapi/lui.h	/^void PubDisplayStrInline(int nMode, int nLineno, char *pFormat,...);$/;"	p	signature:(int nMode, int nLineno, char *pFormat,...)
PubDisplayStrInlines	../libapi/lui.h	/^void PubDisplayStrInlines(int nAlign, int nMode, int nLineno, char *pFormat,...);$/;"	p	signature:(int nAlign, int nMode, int nLineno, char *pFormat,...)
PubDisplayStrs	../libapi/lui.h	/^void PubDisplayStrs(int nAlign, int nMode, int nLineno, int nClumno, char *pFormat,...);$/;"	p	signature:(int nAlign, int nMode, int nLineno, int nClumno, char *pFormat,...)
PubDisplayTail	../libapi/lui.h	/^void PubDisplayTail(int nFont, int nMode, int nIsInv, char * pFormat,...);$/;"	p	signature:(int nFont, int nMode, int nIsInv, char * pFormat,...)
PubDisplayTitle	../libapi/lui.h	/^void PubDisplayTitle(char *pszTitle);$/;"	p	signature:(char *pszTitle)
PubDrawBitmapList	../libapi/lui.h	/^void PubDrawBitmapList(const uint unWidth, const uint unHeight, const char *pszBitmap, const char *pszStr, int nTimeout, int* pnItemNum);$/;"	p	signature:(const uint unWidth, const uint unHeight, const char *pszBitmap, const char *pszStr, int nTimeout, int* pnItemNum)
PubErrLog	../libapi/ltool.h	/^int PubErrLog (const int nErrorCode, const char *pszLogFileName, char *pszMoudleName, int nLine );$/;"	p	signature:(const int nErrorCode, const char *pszLogFileName, char *pszMoudleName, int nLine )
PubExportDebugFile	../libapi/ltool.h	/^void PubExportDebugFile();$/;"	p	signature:()
PubExtInputDate	../libapi/lui.h	/^int PubExtInputDate(const char *pszTitle, const char *pszContent, const char *pInfo, int x, int y,\\$/;"	p	signature:(const char *pszTitle, const char *pszContent, const char *pInfo, int x, int y,\ char *pszDate,int nFormat, int nTimeOut)
PubExtInputDlg	../libapi/lui.h	/^int PubExtInputDlg(const char *pszTitle, const char *pszContent, char* psInfo, \\$/;"	p	signature:(const char *pszTitle, const char *pszContent, char* psInfo, \ int x, int y, char *pszOut, int *pnOutLen,int nMinLen, \ int nMaxLen, int nTimeOut, int nEditMask)
PubFLALengthGet	../libapi/ltool.h	/^void PubFLALengthGet(STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount);$/;"	p	signature:(STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount)
PubFLALengthSet	../libapi/ltool.h	/^void PubFLALengthSet(STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount);$/;"	p	signature:(STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount)
PubFLBLengthGet	../libapi/ltool.h	/^void PubFLBLengthGet(STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount);$/;"	p	signature:(STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount)
PubFLBLengthSet	../libapi/ltool.h	/^void PubFLBLengthSet(STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount);$/;"	p	signature:(STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount)
PubFLHLengthGet	../libapi/ltool.h	/^void PubFLHLengthGet(STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount);$/;"	p	signature:(STISO_FIELD_DEF *pthis, unsigned char *pindata, int *plen, int *pcount)
PubFLHLengthSet	../libapi/ltool.h	/^void PubFLHLengthSet(STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount);$/;"	p	signature:(STISO_FIELD_DEF *pthis, int len, unsigned char *poutdata, int *pcount)
PubFPABitmapPack	../libapi/ltool.h	/^int PubFPABitmapPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPABitmapUnPack	../libapi/ltool.h	/^int PubFPABitmapUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPACharPack	../libapi/ltool.h	/^int PubFPACharPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPACharUnPack	../libapi/ltool.h	/^int PubFPACharUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPADigitPack	../libapi/ltool.h	/^int PubFPADigitPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPADigitUnPack	../libapi/ltool.h	/^int PubFPADigitUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPAMsgIDPack	../libapi/ltool.h	/^int PubFPAMsgIDPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPAMsgIDUnpack	../libapi/ltool.h	/^int PubFPAMsgIDUnpack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int  *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBAmountPack	../libapi/ltool.h	/^int PubFPBAmountPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPBAmountUnPack	../libapi/ltool.h	/^int PubFPBAmountUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBBinaryPack	../libapi/ltool.h	/^int PubFPBBinaryPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPBBinaryUnPack	../libapi/ltool.h	/^int PubFPBBinaryUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBBitmapPack	../libapi/ltool.h	/^int PubFPBBitmapPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPBBitmapUnPack	../libapi/ltool.h	/^int PubFPBBitmapUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBCharPack	../libapi/ltool.h	/^int PubFPBCharPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPBCharUnPack	../libapi/ltool.h	/^int PubFPBCharUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBDigitPack	../libapi/ltool.h	/^int PubFPBDigitPack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFPBDigitUnPack	../libapi/ltool.h	/^int PubFPBDigitUnPack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBMsgIDUnpack	../libapi/ltool.h	/^int PubFPBMsgIDUnpack(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, unsigned char *pfieldbuf, int *pfieldlen, unsigned char *pindata)
PubFPBMsgIDpack	../libapi/ltool.h	/^int PubFPBMsgIDpack(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata);$/;"	p	signature:(STISO_FIELD_DEF * pthis, const unsigned char *pfieldbuf, int fieldlen, unsigned char *poutdata)
PubFindParam	../libapi/ltool.h	/^int PubFindParam (const int pnHandle, const int nPosition, const char *psID, char *psParamValue, int *pnParamLen);$/;"	p	signature:(const int pnHandle, const int nPosition, const char *psID, char *psParamValue, int *pnParamLen)
PubFindRec	../libapi/ltool.h	/^int PubFindRec(const char *pszFileName, const char *psIndexStr1, const char *psIndexStr2,const int nBeginRecNo, char *psRec, int *pnRecNo);$/;"	p	signature:(const char *pszFileName, const char *psIndexStr1, const char *psIndexStr2,const int nBeginRecNo, char *psRec, int *pnRecNo)
PubFmtAmtStr	../libapi/ltool.h	/^int PubFmtAmtStr (const char* pszSource, char* pszTarget, int* pnTargetLen );$/;"	p	signature:(const char* pszSource, char* pszTarget, int* pnTargetLen )
PubFormatDisp8583	../libapi/ltool.h	/^void PubFormatDisp8583(STISODataStru *pIsoStru);$/;"	p	signature:(STISODataStru *pIsoStru)
PubGetBit	../libapi/ltool.h	/^int PubGetBit(STISODataStru *pSourceIsoStru, int nPosition, char *pcTargetStr, int *pnLen);$/;"	p	signature:(STISODataStru *pSourceIsoStru, int nPosition, char *pcTargetStr, int *pnLen)
PubGetCardErrorCode	../libapi/lposcard.h	/^int PubGetCardErrorCode(void);$/;"	p	signature:(void)
PubGetCardLibVer	../libapi/lposcard.h	/^int PubGetCardLibVer(char* psVer);$/;"	p	signature:(char* psVer)
PubGetCardStatus	../libapi/lposcard.h	/^int PubGetCardStatus();$/;"	p	signature:()
PubGetCurrentDatetime	../libapi/ltool.h	/^void PubGetCurrentDatetime(char *pDatetime);$/;"	p	signature:(char *pDatetime)
PubGetDebugMode	../libapi/ltool.h	/^int PubGetDebugMode();$/;"	p	signature:()
PubGetErrorCode	../libapi/ltool.h	/^void PubGetErrorCode(int *pnErrorCode, char *pszErr, int *pnNdkErrorCode);$/;"	p	signature:(int *pnErrorCode, char *pszErr, int *pnNdkErrorCode)
PubGetHardwareSuppot	../libapi/ltool.h	/^int PubGetHardwareSuppot(int emFlag, char* pszBuf);$/;"	p	signature:(int emFlag, char* pszBuf)
PubGetICStatus	../libapi/lposcard.h	/^int PubGetICStatus(char *pszStatus);$/;"	p	signature:(char *pszStatus)
PubGetINIItemInt	../libapi/ltool.h	/^int PubGetINIItemInt (const int nHandle,const char *psSeg, const char *psItem, int *pnValue);$/;"	p	signature:(const int nHandle,const char *psSeg, const char *psItem, int *pnValue)
PubGetINIItemStr	../libapi/ltool.h	/^int PubGetINIItemStr (const int nHandle, const char *psSeg, const char *psItem, const int nMaxStrLen, char *psValueStr, int *pnValueLen);$/;"	p	signature:(const int nHandle, const char *psSeg, const char *psItem, const int nMaxStrLen, char *psValueStr, int *pnValueLen)
PubGetKeyCode	../libapi/lui.h	/^int PubGetKeyCode(int nTimeout);$/;"	p	signature:(int nTimeout)
PubGetKeyCode	../src/tools.c	/^int PubGetKeyCode(uiSecond)$/;"	f
PubGetOverTimer	../libapi/ltool.h	/^uint PubGetOverTimer(uint unMsTime);$/;"	p	signature:(uint unMsTime)
PubGetPosInfo	../libapi/ltool.h	/^int PubGetPosInfo(int emFlag, char* pszBuf);$/;"	p	signature:(int emFlag, char* pszBuf)
PubGetPosType	../libapi/lui.h	/^int PubGetPosType();$/;"	p	signature:()
PubGetPosTypeStr	../libapi/lui.h	/^char * PubGetPosTypeStr();$/;"	p	signature:()
PubGetReaderVer	../libapi/lposcard.h	/^void PubGetReaderVer(char *pszVer);$/;"	p	signature:(char *pszVer)
PubGetRecSum	../libapi/ltool.h	/^int PubGetRecSum (const char *pszFileName, int *pnRecSum);$/;"	p	signature:(const char *pszFileName, int *pnRecSum)
PubGetRfCardType	../libapi/lposcard.h	/^int PubGetRfCardType(void);$/;"	p	signature:(void)
PubGetStrFormat	../libapi/lui.h	/^void PubGetStrFormat(int nFont, char * pOutStr, char * pFormat,...);$/;"	p	signature:(int nFont, char * pOutStr, char * pFormat,...)
PubGetToolsVer	../libapi/ltool.h	/^void PubGetToolsVer(char *pszVer);$/;"	p	signature:(char *pszVer)
PubGetUIVer	../libapi/lui.h	/^void PubGetUIVer(char *pszVer);$/;"	p	signature:(char *pszVer)
PubGetVar	../libapi/ltool.h	/^int PubGetVar (char *psBuf, const int nStart, const int nLen);$/;"	p	signature:(char *psBuf, const int nStart, const int nLen)
PubHexToAsc	../libapi/ltool.h	/^int PubHexToAsc (const unsigned char* pszBcdBuf, int nLen, char cType, unsigned char* pszAsciiBuf);$/;"	p	signature:(const unsigned char* pszBcdBuf, int nLen, char cType, unsigned char* pszAsciiBuf)
PubICComm	../libapi/lposcard.h	/^int PubICComm (const int nCardPort, const char cCLA, const char cINS,$/;"	p	signature:(const int nCardPort, const char cCLA, const char cINS, const char cP1, const char cP2, const uchar ucInLen, const char *psInData, int nLe, uchar *pucOutLen, char *psOutData, char *pszSW1, char *pszSW2)
PubICPowerDown	../libapi/lposcard.h	/^int PubICPowerDown(const int nCardPort);$/;"	p	signature:(const int nCardPort)
PubICPowerUp	../libapi/lposcard.h	/^int PubICPowerUp (const int nCardPort,const int nCardType,char *psAtr);$/;"	p	signature:(const int nCardPort,const int nCardType,char *psAtr)
PubICrw	../libapi/lposcard.h	/^int PubICrw(const int nCardPort, const int nCommandLen, const char *pszCommand, int *pnLen, char *pszResponse);$/;"	p	signature:(const int nCardPort, const int nCommandLen, const char *pszCommand, int *pnLen, char *pszResponse)
PubImport8583	../libapi/ltool.h	/^int PubImport8583(const struct STISO_FIELD_DEF *pNewDef);$/;"	p	signature:(const struct STISO_FIELD_DEF *pNewDef)
PubIncNum	../libapi/ltool.h	/^int PubIncNum (char* pcStrNum );$/;"	p	signature:(char* pcStrNum )
PubInitRFCardParam	../libapi/lposcard.h	/^int PubInitRFCardParam (const STRFIDCARDPARAM * pstRFIDCardParam);$/;"	p	signature:(const STRFIDCARDPARAM * pstRFIDCardParam)
PubInitUiParam	../libapi/lui.h	/^int PubInitUiParam();$/;"	p	signature:()
PubInputAmount	../libapi/lui.h	/^int PubInputAmount(const char *pszTitle, const char *pszContent, char *pszAmount, int *pnInputLen,\\$/;"	p	signature:(const char *pszTitle, const char *pszContent, char *pszAmount, int *pnInputLen,\ int nNoneFlag, int nTimeOut)
PubInputCNMode	../libapi/lui.h	/^int PubInputCNMode(const char *pszTitle, const char *pszContent,char *pszStr, int *pnInputLen, int nMinLen, int nMaxLen, int nImeMode);$/;"	p	signature:(const char *pszTitle, const char *pszContent,char *pszStr, int *pnInputLen, int nMinLen, int nMaxLen, int nImeMode)
PubInputDate	../libapi/lui.h	/^int PubInputDate(const char *pszTitle, const char *pszContent, char *pszDate, int nFormat, int nTimeOut);$/;"	p	signature:(const char *pszTitle, const char *pszContent, char *pszDate, int nFormat, int nTimeOut)
PubInputDlg	../libapi/lui.h	/^int PubInputDlg(const char *pszTitle, const char *pszContent, char *pszOut, int *pnOutLen, \\$/;"	p	signature:(const char *pszTitle, const char *pszContent, char *pszOut, int *pnOutLen, \ int nMinLen, int nMaxLen, int nTimeOut, int nEditMask)
PubInputIp	../libapi/lui.h	/^int PubInputIp(const char * pszTitle, const char * pszContent, char * pszOut, int * pnOutLen);$/;"	p	signature:(const char * pszTitle, const char * pszContent, char * pszOut, int * pnOutLen)
PubInputPin	../libapi/lui.h	/^int PubInputPin(const char *pszTitle,const char * pszAmount,const char * pszContent,int nMinLen, int nMaxLen,char *pszOut);$/;"	p	signature:(const char *pszTitle,const char * pszAmount,const char * pszContent,int nMinLen, int nMaxLen,char *pszOut)
PubInputxy	../libapi/lui.h	/^int PubInputxy(int nX, int nY, char* pszOut, int* pnOutLen, int nMinLen, int nMaxLen, int nTimeOut, int nEditMask);$/;"	p	signature:(int nX, int nY, char* pszOut, int* pnOutLen, int nMinLen, int nMaxLen, int nTimeOut, int nEditMask)
PubIntToBcd	../libapi/ltool.h	/^int PubIntToBcd(char *psBcd, int *pnBcdLen, int nNum);$/;"	p	signature:(char *psBcd, int *pnBcdLen, int nNum)
PubIntToC2	../libapi/ltool.h	/^void PubIntToC2 (unsigned char* pszBuf, unsigned int nNum );$/;"	p	signature:(unsigned char* pszBuf, unsigned int nNum )
PubIntToC4	../libapi/ltool.h	/^void PubIntToC4 (unsigned char* pszBuf, unsigned int nNum );$/;"	p	signature:(unsigned char* pszBuf, unsigned int nNum )
PubIsDigitChar	../libapi/ltool.h	/^int PubIsDigitChar(char ch);$/;"	p	signature:(char ch)
PubIsDigitStr	../libapi/ltool.h	/^int PubIsDigitStr(const char *pszString);$/;"	p	signature:(const char *pszString)
PubIsLeapYear	../libapi/ltool.h	/^int PubIsLeapYear(int nYear);$/;"	p	signature:(int nYear)
PubIsValidDate	../libapi/ltool.h	/^int PubIsValidDate(const char *pDate);$/;"	p	signature:(const char *pDate)
PubIsoToStr	../libapi/ltool.h	/^int PubIsoToStr(char *pcTargetStr, STISODataStru *SourceIsoStru, int *pnLen);$/;"	p	signature:(char *pcTargetStr, STISODataStru *SourceIsoStru, int *pnLen)
PubKbHit	../libapi/lui.h	/^int PubKbHit();$/;"	p	signature:()
PubLeftTrim	../libapi/ltool.h	/^void PubLeftTrim(char *pszSrc);$/;"	p	signature:(char *pszSrc)
PubLeftTrimChar	../libapi/ltool.h	/^void PubLeftTrimChar(uchar *pszSrc, uchar ucRemoveChar);$/;"	p	signature:(uchar *pszSrc, uchar ucRemoveChar)
PubMonthDays	../libapi/ltool.h	/^int PubMonthDays(int nYear, int nMon, int *pnDays);$/;"	p	signature:(int nYear, int nMon, int *pnDays)
PubMsgDlg	../libapi/lui.h	/^int PubMsgDlg(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut);$/;"	p	signature:(const char *pszTitle, const char *pszContent, int nBeep, int nTimeOut)
PubOpenEasyMenu	../libapi/lui.h	/^int PubOpenEasyMenu(const STMENUTYPE * pstMenu, const char * pszTitle, char cMenuFlag);$/;"	p	signature:(const STMENUTYPE * pstMenu, const char * pszTitle, char cMenuFlag)
PubOpenFile	../libapi/ltool.h	/^int PubOpenFile (const char *pszFileName, const char *pszMode,int *pnFileHandle);$/;"	p	signature:(const char *pszFileName, const char *pszMode,int *pnFileHandle)
PubOpenMenu	../libapi/lui.h	/^int PubOpenMenu(const STMENUTYPE *pstMenu, const char *pszTitle, char cMenuFlag, int(*pnTimer)(), int nInterval);$/;"	p	signature:(const STMENUTYPE *pstMenu, const char *pszTitle, char cMenuFlag, int(*pnTimer)(), int nInterval)
PubPOSInitKey	../inc/posdef.h	11;"	d
PubPOSInitKey	../inc/posdef.h	13;"	d
PubPosChar	../libapi/ltool.h	/^int PubPosChar(const char *pszData,char cSubChar);$/;"	p	signature:(const char *pszData,char cSubChar)
PubPosReadCard	../libapi/lposcard.h	/^int PubPosReadCard(const STREADCARDPARAM *pstReadCardParm,char *pszTk1, char *pszTk2, char *pszTk3, int *pnCardType);$/;"	p	signature:(const STREADCARDPARAM *pstReadCardParm,char *pszTk1, char *pszTk2, char *pszTk3, int *pnCardType)
PubPosStr	../libapi/ltool.h	/^int PubPosStr(const char *pszData,const char *pszSub);$/;"	p	signature:(const char *pszData,const char *pszSub)
PubRFAuthByKey	../libapi/lposcard.h	/^int PubRFAuthByKey(uchar ucKeySector,uchar ucKeyMode,const char * psKey);$/;"	p	signature:(uchar ucKeySector,uchar ucKeyMode,const char * psKey)
PubRFAuthCard	../libapi/lposcard.h	/^int PubRFAuthCard(uchar ucKeySector,uchar ucKeyMode);$/;"	p	signature:(uchar ucKeySector,uchar ucKeyMode)
PubRFCPUComm	../libapi/lposcard.h	/^int PubRFCPUComm(char *psSend, int nSendLen,char *psRecv, int *pnRecvLen);$/;"	p	signature:(char *psSend, int nSendLen,char *psRecv, int *pnRecvLen)
PubRFCPUPowerDown	../libapi/lposcard.h	/^int PubRFCPUPowerDown (void);$/;"	p	signature:(void)
PubRFCPUPowerUp	../libapi/lposcard.h	/^int PubRFCPUPowerUp (char *psUID);$/;"	p	signature:(char *psUID)
PubRFDec	../libapi/lposcard.h	/^int PubRFDec(uchar ucBlockNo,const char *psData);$/;"	p	signature:(uchar ucBlockNo,const char *psData)
PubRFFreeCard	../libapi/lposcard.h	/^int PubRFFreeCard(void);$/;"	p	signature:(void)
PubRFInc	../libapi/lposcard.h	/^int PubRFInc(uchar ucBlockNo,const char *psData);$/;"	p	signature:(uchar ucBlockNo,const char *psData)
PubRFReStore	../libapi/lposcard.h	/^int PubRFReStore(uchar ucBlockNo);$/;"	p	signature:(uchar ucBlockNo)
PubRFRead	../libapi/lposcard.h	/^int PubRFRead(uchar ucBlockNo,char *psData);$/;"	p	signature:(uchar ucBlockNo,char *psData)
PubRFSeekCard	../libapi/lposcard.h	/^int PubRFSeekCard(char* psUid,ENM_RFIDCARDTYPE *pnType);$/;"	p	signature:(char* psUid,ENM_RFIDCARDTYPE *pnType)
PubRFStoreKey	../libapi/lposcard.h	/^int PubRFStoreKey(uchar ucKeySector,const char * psAKey,const char * psBKey);$/;"	p	signature:(uchar ucKeySector,const char * psAKey,const char * psBKey)
PubRFTransfer	../libapi/lposcard.h	/^int PubRFTransfer(uchar ucBlockNo);$/;"	p	signature:(uchar ucBlockNo)
PubRFWrite	../libapi/lposcard.h	/^int PubRFWrite(uchar ucBlockNo,const char *psData);$/;"	p	signature:(uchar ucBlockNo,const char *psData)
PubReadCardDisp	../libapi/lposcard.h	/^int PubReadCardDisp(char cFlag,const char* pszAmount,const char* pszBalance );$/;"	p	signature:(char cFlag,const char* pszAmount,const char* pszBalance )
PubReadOneRec	../libapi/ltool.h	/^int PubReadOneRec(const char *pszFileName, const int nRecNo, char *psRec);$/;"	p	signature:(const char *pszFileName, const int nRecNo, char *psRec)
PubReadRec	../libapi/ltool.h	/^int PubReadRec (const int nFileHandle, const int nRecNo, char *psRec);$/;"	p	signature:(const int nFileHandle, const int nRecNo, char *psRec)
PubRf24First	../libapi/lposcard.h	/^void PubRf24First(char cRf24First);$/;"	p	signature:(char cRf24First)
PubRfReaderBeep	../libapi/lposcard.h	/^int PubRfReaderBeep(int nDelayTime, int nTimes,int nInterval);$/;"	p	signature:(int nDelayTime, int nTimes,int nInterval)
PubRightTrim	../libapi/ltool.h	/^void PubRightTrim(char *pszSrc);$/;"	p	signature:(char *pszSrc)
PubRightTrimChar	../libapi/ltool.h	/^void PubRightTrimChar(uchar *pszSrc, uchar ucRemoveChar);$/;"	p	signature:(uchar *pszSrc, uchar ucRemoveChar)
PubSaveVar	../libapi/ltool.h	/^int PubSaveVar (const char *psSaveBuf, const int nStart, const int nLen);$/;"	p	signature:(const char *psSaveBuf, const int nStart, const int nLen)
PubSelectCardType	../libapi/lposcard.h	/^void PubSelectCardType(ENM_CARDTYPE eCardType);$/;"	p	signature:(ENM_CARDTYPE eCardType)
PubSelectList	../inc/posdef.h	16;"	d
PubSelectListItem	../libapi/lui.h	/^int PubSelectListItem(const char *pszStr, const char *pszTitle, const char* pszContent, int nDefault, int *pnItemnum);$/;"	p	signature:(const char *pszStr, const char *pszTitle, const char* pszContent, int nDefault, int *pnItemnum)
PubSelectListItemExtend	../libapi/lui.h	/^int PubSelectListItemExtend( const char* pszStr, const char* pszTitle, const char* pszContent, int nDefault,\\$/;"	p	signature:( const char* pszStr, const char* pszTitle, const char* pszContent, int nDefault,\ int* pnItemNum, int nTimeOut, char* pszFunKey)
PubSetBit	../libapi/ltool.h	/^int PubSetBit(STISODataStru *pTargetIsoStru, int nPosition, char *pcSourceStr, int nStrLen);$/;"	p	signature:(STISODataStru *pTargetIsoStru, int nPosition, char *pcSourceStr, int nStrLen)
PubSetDefine8583	../libapi/ltool.h	/^int PubSetDefine8583(int nPosition, int nMaxLen, EM_LENGTH_TYPE	LenType, EM_ALIGN_TYPE AlignType, char chPadChar, FIELD_PACKAGER_PACK PackFunc, FIELD_PACKAGER_UNPACK UnpackFunc);$/;"	p	signature:(int nPosition, int nMaxLen, EM_LENGTH_TYPE LenType, EM_ALIGN_TYPE AlignType, char chPadChar, FIELD_PACKAGER_PACK PackFunc, FIELD_PACKAGER_UNPACK UnpackFunc)
PubSetErrorCode	../libapi/ltool.h	/^void PubSetErrorCode(int nErrCode,const char *pszErr,int nNdkErrCode);$/;"	p	signature:(int nErrCode,const char *pszErr,int nNdkErrCode)
PubSetErrorInfo	../libapi/ltool.h	/^void PubSetErrorInfo(int nErrCode,const char *ppszErr[MAX_ERR_BUF_LEN],int nNdkErrCode);$/;"	p	signature:(int nErrCode,const char *ppszErr[MAX_ERR_BUF_LEN],int nNdkErrCode)
PubSetFieldLengthCalc	../libapi/ltool.h	/^int PubSetFieldLengthCalc(const struct STISO_FIELD_LENGTH_CALC *pNewCalc);$/;"	p	signature:(const struct STISO_FIELD_LENGTH_CALC *pNewCalc)
PubSetPosDateTime	../libapi/ltool.h	/^int PubSetPosDateTime(const char *pszDate, const char *pszDateFormat, const char *pszTime);$/;"	p	signature:(const char *pszDate, const char *pszDateFormat, const char *pszTime)
PubSetUiStyle	../libapi/lui.h	/^void PubSetUiStyle(STUIFUN_STYLE stUiFunStyle);$/;"	p	signature:(STUIFUN_STYLE stUiFunStyle)
PubShowBattery	../libapi/lui.h	/^void PubShowBattery(int nX, int nY);$/;"	p	signature:(int nX, int nY)
PubShowRtc	../libapi/lui.h	/^void PubShowRtc(int nLineno, int nClumno, int nStyle);$/;"	p	signature:(int nLineno, int nClumno, int nStyle)
PubShowSignal	../libapi/lui.h	/^void PubShowSignal(int nX, int nY);$/;"	p	signature:(int nX, int nY)
PubShowStatusBar	../libapi/lui.h	/^void PubShowStatusBar();$/;"	p	signature:()
PubShutDown	../libapi/ltool.h	/^int PubShutDown();$/;"	p	signature:()
PubStartWatch	../libapi/ltool.h	/^int PubStartWatch();$/;"	p	signature:()
PubStopWatch	../libapi/ltool.h	/^int PubStopWatch(uint * punTime);$/;"	p	signature:(uint * punTime)
PubStrToIso	../libapi/ltool.h	/^int PubStrToIso(char *pcSourceStr, int nStrLen, STISODataStru *pTargetIsoStru, int *pnPosition);$/;"	p	signature:(char *pcSourceStr, int nStrLen, STISODataStru *pTargetIsoStru, int *pnPosition)
PubTimerIsOver	../libapi/ltool.h	/^int PubTimerIsOver(uint unOverTime);$/;"	p	signature:(uint unOverTime)
PubUpDownConfirmDlg	../libapi/lui.h	/^int PubUpDownConfirmDlg(const char* pszTitle,const char* pszContent,int nBeep,int nTimeOut);$/;"	p	signature:(const char* pszTitle,const char* pszContent,int nBeep,int nTimeOut)
PubUpDownMsgDlg	../libapi/lui.h	/^int PubUpDownMsgDlg(const char* pszTitle,const char* pszContent,int nIsResKey,int nTimeOut,int* nResKey);$/;"	p	signature:(const char* pszTitle,const char* pszContent,int nIsResKey,int nTimeOut,int* nResKey)
PubUpdateRec	../libapi/ltool.h	/^int PubUpdateRec (const char *pszFileName, const int nRecNo, const char *psRec);$/;"	p	signature:(const char *pszFileName, const int nRecNo, const char *psRec)
PubUpdateRecByHandle	../libapi/ltool.h	/^int PubUpdateRecByHandle (int nFileHandle, const int nRecNo, const char *psRec);$/;"	p	signature:(int nFileHandle, const int nRecNo, const char *psRec)
PubUpdateWindow	../libapi/lui.h	/^void PubUpdateWindow(void);$/;"	p	signature:(void)
QUIT	../inc/PriKeyDownload.h	57;"	d
QUIT	../inc/selftest.h	32;"	d
RD_SHOWBALANCE	../libapi/lposcard.h	/^	RD_SHOWBALANCE = 0x00,			\/**< 显示交易余额*\/$/;"	e	enum:__anon175
RD_SHOWEMPTY	../libapi/lposcard.h	/^	RD_SHOWEMPTY = 0x06				\/**< 显示空闲状态*\/$/;"	e	enum:__anon175
RD_SHOWEXCEPTION	../libapi/lposcard.h	/^	RD_SHOWEXCEPTION =0x04,			\/**< 显示交易异常*\/$/;"	e	enum:__anon175
RD_SHOWFAIL	../libapi/lposcard.h	/^	RD_SHOWFAIL =0x02,					\/**< 显示交易失败*\/$/;"	e	enum:__anon175
RD_SHOWLITTEBALANCE	../libapi/lposcard.h	/^	RD_SHOWLITTEBALANCE= 0x03,		\/**< 显示余额不足*\/$/;"	e	enum:__anon175
RD_SHOWSUCC	../libapi/lposcard.h	/^	RD_SHOWSUCC = 0x01,				\/**< 显示交易成功*\/$/;"	e	enum:__anon175
RD_SHOWSWIPCARD	../libapi/lposcard.h	/^	RD_SHOWSWIPCARD =0x05,			\/**< 显示请求刷卡*\/$/;"	e	enum:__anon175
RECT_PATTERNS_NO_FILL	../env/NDK.h	/^    RECT_PATTERNS_NO_FILL,        \/**<非填充，只绘制边框*\/$/;"	e	enum:__anon6
RECT_PATTERNS_NO_FILL	../inc/NDK-bak.h	/^    RECT_PATTERNS_NO_FILL,        \/**<no fill, only draw borders*\/$/;"	e	enum:__anon93
RECT_PATTERNS_SOLID_FILL	../env/NDK.h	/^    RECT_PATTERNS_SOLID_FILL      \/**<填充模式*\/$/;"	e	enum:__anon6
RECT_PATTERNS_SOLID_FILL	../inc/NDK-bak.h	/^    RECT_PATTERNS_SOLID_FILL      \/**<fill mode*\/$/;"	e	enum:__anon93
RE_DATA	../inc/emvrsa.h	43;"	d
RE_LEN	../inc/emvrsa.h	39;"	d
RE_MODULUS_LEN	../inc/emvrsa.h	40;"	d
RE_PRIVATE_KEY	../inc/emvrsa.h	41;"	d
RE_PUBLIC_KEY	../inc/emvrsa.h	42;"	d
RFCARDTYPE_CPU_INSIDE	../libapi/lposcard.h	/^	RFCARDTYPE_CPU_INSIDE=0,	\/**<内置CPU卡*\/$/;"	e	enum:__anon173
RFCARDTYPE_CPU_OUTSIDE	../libapi/lposcard.h	/^	RFCARDTYPE_CPU_OUTSIDE,	\/**<外置CPU卡*\/$/;"	e	enum:__anon173
RFCARDTYPE_M1_INSIDE	../libapi/lposcard.h	/^	RFCARDTYPE_M1_INSIDE,		\/**<内置M1卡*\/$/;"	e	enum:__anon173
RFCARDTYPE_M1_OUTSIDE	../libapi/lposcard.h	/^	RFCARDTYPE_M1_OUTSIDE	\/**<外置M1卡*\/$/;"	e	enum:__anon173
RFID	../inc/NDK-bak.h	/^    RFID,			\/**<RF card *\/$/;"	e	enum:__anon134
RFIDREADER_829	../libapi/lposcard.h	/^	RFIDREADER_829			\/**<我司829*\/$/;"	e	enum:__anon170
RFIDREADER_POS	../libapi/lposcard.h	/^	RFIDREADER_POS=1,			\/**<内置读卡器*\/$/;"	e	enum:__anon170
RFIDREADER_SH	../libapi/lposcard.h	/^	RFIDREADER_SH,	 		 	\/**<盛华(直通)读卡器*\/$/;"	e	enum:__anon170
RFIDREADER_ZX	../libapi/lposcard.h	/^	RFIDREADER_ZX,	 		 	\/**<中兴读卡器*\/$/;"	e	enum:__anon170
RFID_Autoscan	../env/NDK.h	/^	RFID_Autoscan=		0x00,$/;"	e	enum:__anon53
RFID_Autoscan	../inc/NDK-bak.h	/^	RFID_Autoscan=		0x00,$/;"	e	enum:__anon129
RFID_No	../env/NDK.h	/^	RFID_No=			0xFF,$/;"	e	enum:__anon53
RFID_No	../inc/NDK-bak.h	/^	RFID_No=			0xFF,$/;"	e	enum:__anon129
RFID_PN512	../env/NDK.h	/^	RFID_PN512=			0x02,$/;"	e	enum:__anon53
RFID_PN512	../inc/NDK-bak.h	/^	RFID_PN512=			0x02,$/;"	e	enum:__anon129
RFID_RC531	../env/NDK.h	/^	RFID_RC531=			0x01,$/;"	e	enum:__anon53
RFID_RC531	../inc/NDK-bak.h	/^	RFID_RC531=			0x01,$/;"	e	enum:__anon129
RIGHT	../inc/PriKeyDownload.h	27;"	d
RM	../build/Makefile	/^RM=rm$/;"	m
RM	../src/Makefile	/^RM=rm$/;"	m
RMFL	../inc/PriKeyDownload.h	65;"	d
RSAPublicBlock	../src/emvrsa.c	/^static int RSAPublicBlock (unsigned char *output, unsigned int * outputLen,$/;"	f	file:	signature:(unsigned char *output, unsigned int * outputLen, unsigned char * input, unsigned int inputLen,R_RSA_PRIVATE_KEY *publicKey)
RSAPublicBlock	../src/emvrsa.c	/^static int RSAPublicBlock PROTO_LIST$/;"	p	file:	signature:(unsigned char *, unsigned int *, unsigned char *, unsigned int, R_RSA_PRIVATE_KEY *)
RSAPublicDecrypt	../inc/emvrsa.h	/^int RSAPublicDecrypt PROTO_LIST$/;"	p	signature:(unsigned char *, unsigned int *, unsigned char *, unsigned int, R_RSA_PRIVATE_KEY *)
RSAPublicDecrypt	../src/emvrsa.c	/^int RSAPublicDecrypt (unsigned char *output, unsigned int *outputLen,$/;"	f	signature:(unsigned char *output, unsigned int *outputLen, unsigned char *input, unsigned int inputLen, R_RSA_PRIVATE_KEY *publicKey)
RSAPublicEncrypt	../inc/emvrsa.h	/^int RSAPublicEncrypt PROTO_LIST$/;"	p	signature:(unsigned char *, unsigned int *, unsigned char *, unsigned int, R_RSA_PRIVATE_KEY *)
RSAPublicEncrypt	../src/emvrsa.c	/^int RSAPublicEncrypt(unsigned char *output, unsigned int *outputLen,$/;"	f	signature:(unsigned char *output, unsigned int *outputLen, unsigned char *input, unsigned int inputLen, R_RSA_PRIVATE_KEY * publicKey)
RSA_EXP_10001	../env/NDK.h	/^	RSA_EXP_10001 = 0x10001,$/;"	e	enum:__anon24
RSA_EXP_10001	../inc/NDK-bak.h	/^	RSA_EXP_10001 = 0x10001,$/;"	e	enum:__anon107
RSA_EXP_3	../env/NDK.h	/^	RSA_EXP_3 = 0x03,$/;"	e	enum:__anon24
RSA_EXP_3	../inc/NDK-bak.h	/^	RSA_EXP_3 = 0x03,$/;"	e	enum:__anon107
RSA_KEY_LEN_1024	../env/NDK.h	/^	RSA_KEY_LEN_1024 = 1024,$/;"	e	enum:__anon23
RSA_KEY_LEN_1024	../inc/NDK-bak.h	/^	RSA_KEY_LEN_1024 = 1024,$/;"	e	enum:__anon106
RSA_KEY_LEN_2048	../env/NDK.h	/^	RSA_KEY_LEN_2048 = 2048,$/;"	e	enum:__anon23
RSA_KEY_LEN_2048	../inc/NDK-bak.h	/^	RSA_KEY_LEN_2048 = 2048,$/;"	e	enum:__anon106
RSA_KEY_LEN_512	../env/NDK.h	/^	RSA_KEY_LEN_512  = 512,$/;"	e	enum:__anon23
RSA_KEY_LEN_512	../inc/NDK-bak.h	/^	RSA_KEY_LEN_512  = 512,$/;"	e	enum:__anon106
R_RSA_PRIVATE_KEY	../inc/PriKeyDownload.h	/^} R_RSA_PRIVATE_KEY;$/;"	t	typeref:struct:__anon161
R_memcmp	../inc/emvrsa.h	25;"	d
R_memcpy	../inc/emvrsa.h	24;"	d
R_memset	../inc/emvrsa.h	23;"	d
RecOneFrame	../inc/Pri_DownloadTool.h	/^int RecOneFrame(int len, char *buf, int time);$/;"	p	signature:(int len, char *buf, int time)
RecOneFrame	../src/Pri_DownloadTool.c	/^int RecOneFrame(int len, char *buf, int time)$/;"	f	signature:(int len, char *buf, int time)
RecOneFrameWithRepeat	../inc/Pri_DownloadTool.h	/^int RecOneFrameWithRepeat(int len, char *buf, int time);$/;"	p	signature:(int len, char *buf, int time)
RecOneFrameWithRepeat	../src/Pri_DownloadTool.c	/^int RecOneFrameWithRepeat(int len, char *buf, int time)$/;"	f	signature:(int len, char *buf, int time)
RecieveCertFile	../src/Pri_DownloadTool.c	/^int RecieveCertFile(char *pFilename)$/;"	f	signature:(char *pFilename)
RecieveCertFile	../src/genreq.c	/^extern int RecieveCertFile(char *pFilename);$/;"	p	file:	signature:(char *pFilename)
RecieveCertFile	../src/signcert.c	/^extern int RecieveCertFile(char *pFilename);$/;"	p	file:	signature:(char *pFilename)
ResetOperPwd	../inc/oper.h	/^extern int ResetOperPwd(int nRole);$/;"	p	signature:(int nRole)
ResetOperPwd	../src/oper.c	/^int ResetOperPwd(int nRole)$/;"	f	signature:(int nRole)
ResetPass	../src/main.c	/^static void ResetPass()$/;"	f	file:
ResetPass	../src/main.c	/^static void ResetPass(void);$/;"	p	file:	signature:(void)
SCAN_SETTYPE_FACTORYDEFAULT	../env/NDK.h	/^        SCAN_SETTYPE_FACTORYDEFAULT = 3        \/**<出厂默认设置*\/$/;"	e	enum:__anon77
SCAN_SETTYPE_FLOODLIGHT	../env/NDK.h	/^        SCAN_SETTYPE_FLOODLIGHT =0,                 \/**<照明灯设置*\/$/;"	e	enum:__anon77
SCAN_SETTYPE_FOCUSLIGHT	../env/NDK.h	/^        SCAN_SETTYPE_FOCUSLIGHT = 1,                \/**<对焦灯设置*\/$/;"	e	enum:__anon77
SCAN_SETTYPE_SENSITIVITY	../env/NDK.h	/^        SCAN_SETTYPE_SENSITIVITY = 2,               \/**<灵敏度设置*\/$/;"	e	enum:__anon77
SCROLLBARDOWN	../inc/theme.h	107;"	d
SCROLLBARDOWN	../inc/theme.h	33;"	d
SCROLLBARLEFT	../inc/theme.h	104;"	d
SCROLLBARLEFT	../inc/theme.h	30;"	d
SCROLLBARRIGHT	../inc/theme.h	105;"	d
SCROLLBARRIGHT	../inc/theme.h	31;"	d
SCROLLBARUP	../inc/theme.h	106;"	d
SCROLLBARUP	../inc/theme.h	32;"	d
SCROLLBAR_H_HIGHT	../inc/theme.h	103;"	d
SCROLLBAR_H_HIGHT	../inc/theme.h	29;"	d
SCROLLBAR_V_WIDTH	../inc/theme.h	102;"	d
SCROLLBAR_V_WIDTH	../inc/theme.h	28;"	d
SCR_SIZE	../inc/PriKeyDownload.h	/^} SCR_SIZE;$/;"	t	typeref:enum:__anon160
SCR_SIZE	../inc/selftest.h	/^}SCR_SIZE;$/;"	t	typeref:enum:__anon163
SDDISK	../env/NDK.h	/^	SDDISK =1     \/**<选择SD卡*\/$/;"	e	enum:__anon69
SDDISK	../inc/NDK-bak.h	/^	SDDISK =1     \/**<Select SD Card*\/$/;"	e	enum:__anon144
SDK_GuiSetFont	../env/widget.h	/^void SDK_GuiSetFont (char s, char e);$/;"	p	signature:(char s, char e)
SDK_GuiTextP	../env/widget.h	/^void SDK_GuiTextP(char font,int x,int y,char *text);$/;"	p	signature:(char font,int x,int y,char *text)
SEC_DES_DECRYPT	../env/NDK.h	/^	SEC_DES_DECRYPT=1,                  \/**<DES解密*\/$/;"	e	enum:__anon31
SEC_DES_DECRYPT	../inc/NDK-bak.h	/^	SEC_DES_DECRYPT=1,                  \/**<DES decryption*\/$/;"	e	enum:__anon114
SEC_DES_ENCRYPT	../env/NDK.h	/^	SEC_DES_ENCRYPT=0,                  \/**<DES加密*\/$/;"	e	enum:__anon31
SEC_DES_ENCRYPT	../inc/NDK-bak.h	/^	SEC_DES_ENCRYPT=0,                  \/**<DES encription*\/$/;"	e	enum:__anon114
SEC_DES_KEYLEN_16	../env/NDK.h	/^    SEC_DES_KEYLEN_16=(2<<1),           \/**<使用16字节密钥进行加密*\/$/;"	e	enum:__anon31
SEC_DES_KEYLEN_16	../inc/NDK-bak.h	/^    SEC_DES_KEYLEN_16=(2<<1),           \/**<to encrypt with key of 16 bytes*\/$/;"	e	enum:__anon114
SEC_DES_KEYLEN_24	../env/NDK.h	/^    SEC_DES_KEYLEN_24=(3<<1),           \/**<使用24字节密钥进行加密*\/$/;"	e	enum:__anon31
SEC_DES_KEYLEN_24	../inc/NDK-bak.h	/^    SEC_DES_KEYLEN_24=(3<<1),           \/**<to encrypt with key of 24 bytes*\/$/;"	e	enum:__anon114
SEC_DES_KEYLEN_8	../env/NDK.h	/^    SEC_DES_KEYLEN_8=(1<<1),            \/**<使用8字节密钥进行加密*\/$/;"	e	enum:__anon31
SEC_DES_KEYLEN_8	../inc/NDK-bak.h	/^    SEC_DES_KEYLEN_8=(1<<1),            \/**<to encrypt with key of 8 bytes*\/$/;"	e	enum:__anon114
SEC_DES_KEYLEN_DEFAULT	../env/NDK.h	/^	SEC_DES_KEYLEN_DEFAULT=(0<<1),      \/**<使用安装长度的密钥进行加密*\/$/;"	e	enum:__anon31
SEC_DES_KEYLEN_DEFAULT	../inc/NDK-bak.h	/^	SEC_DES_KEYLEN_DEFAULT=(0<<1),      \/**<encrypt with key of installation length*\/$/;"	e	enum:__anon114
SEC_KCV_DATA	../env/NDK.h	/^	SEC_KCV_DATA,		\/**<传入一串数据KcvData,使用源密钥对[aucDstKeyValue(密文) + KcvData]进行指定模式的MAC运算,得到8个字节的MAC即为KCV,暂不支持 *\/$/;"	e	enum:__anon28
SEC_KCV_DATA	../inc/NDK-bak.h	/^	SEC_KCV_DATA,		\/**<send in a string of data KcvData, run specific mode of MAC algorithm to [aucDstKeyValue(ciphertext) + KcvData] with source key pair, MAC of 8 bytes is obtained, which is KCV *\/$/;"	e	enum:__anon111
SEC_KCV_NONE	../env/NDK.h	/^	SEC_KCV_NONE=0,		\/**<无验证*\/$/;"	e	enum:__anon28
SEC_KCV_NONE	../inc/NDK-bak.h	/^	SEC_KCV_NONE=0,		\/**<no check*\/$/;"	e	enum:__anon111
SEC_KCV_VAL	../env/NDK.h	/^	SEC_KCV_VAL,		\/**<首先对密钥明文进行奇校验,再对"\\x12\\x34x56\\x78\\x90\\x12\\x34\\x56"进行DES\/TDES加密运算,得到密文的前4个字节即为KCV,暂不支持*\/$/;"	e	enum:__anon28
SEC_KCV_VAL	../inc/NDK-bak.h	/^	SEC_KCV_VAL,		\/**<first, run odd parity with plaintext of key, then run DES\/TDES algorithem with "\\x12\\x34x56\\x78\\x90\\x12\\x34\\x56", first 4 bytes of ciphertext is obtained, which is KCV*\/$/;"	e	enum:__anon111
SEC_KCV_ZERO	../env/NDK.h	/^	SEC_KCV_ZERO,		\/**<对8个字节的0x00计算DES\/TDES加密,得到的密文的前4个字节即为KCV*\/$/;"	e	enum:__anon28
SEC_KCV_ZERO	../inc/NDK-bak.h	/^	SEC_KCV_ZERO,		\/**<run DES\/TDES encryption algorithm with 0x00 of 8 bytes, and first 4 bytes of ciphertext is obtained, which is KCV*\/$/;"	e	enum:__anon111
SEC_KEYBLOCK_FMT_TR31	../env/NDK.h	1982;"	d
SEC_KEYBLOCK_FMT_TR31	../inc/NDK-bak.h	1814;"	d
SEC_KEY_TYPE_DUKPT	../inc/key.h	72;"	d
SEC_KEY_TYPE_TAK	../env/NDK.h	/^	SEC_KEY_TYPE_TAK,	\/**<终端MAC密钥*\/$/;"	e	enum:__anon27
SEC_KEY_TYPE_TAK	../inc/NDK-bak.h	/^	SEC_KEY_TYPE_TAK,	\/**<terminal MAC key*\/$/;"	e	enum:__anon110
SEC_KEY_TYPE_TDK	../env/NDK.h	/^	SEC_KEY_TYPE_TDK,	\/**<终端数据加解密密钥*\/$/;"	e	enum:__anon27
SEC_KEY_TYPE_TDK	../inc/NDK-bak.h	/^	SEC_KEY_TYPE_TDK,	\/**<terminal data encryption & decryption key*\/$/;"	e	enum:__anon110
SEC_KEY_TYPE_TLK	../env/NDK.h	/^	SEC_KEY_TYPE_TLK=0,	\/**<终端装载密钥*\/$/;"	e	enum:__anon27
SEC_KEY_TYPE_TLK	../inc/NDK-bak.h	/^	SEC_KEY_TYPE_TLK=0,	\/**<terminal loaded key*\/$/;"	e	enum:__anon110
SEC_KEY_TYPE_TMK	../env/NDK.h	/^	SEC_KEY_TYPE_TMK,	\/**<终端主密钥*\/$/;"	e	enum:__anon27
SEC_KEY_TYPE_TMK	../inc/NDK-bak.h	/^	SEC_KEY_TYPE_TMK,	\/**<terminal MAC key*\/$/;"	e	enum:__anon110
SEC_KEY_TYPE_TPK	../env/NDK.h	/^	SEC_KEY_TYPE_TPK,	\/**<终端PIN密钥*\/$/;"	e	enum:__anon27
SEC_KEY_TYPE_TPK	../inc/NDK-bak.h	/^	SEC_KEY_TYPE_TPK,	\/**<terminal PIN key*\/$/;"	e	enum:__anon110
SEC_MAC_9606	../env/NDK.h	/^	SEC_MAC_9606,       \/**< 全部数据异或后，最后将异或数据做des运算*\/$/;"	e	enum:__anon29
SEC_MAC_9606	../inc/NDK-bak.h	/^	SEC_MAC_9606,       \/**< after exclusive or (XOR) of all data, run des algorithnon with data*\/$/;"	e	enum:__anon112
SEC_MAC_ECB	../env/NDK.h	/^	SEC_MAC_ECB,        \/**< 全部数据异或后，将异或后数据做DES后进行变换，参考银联规范中关于ECB算法说明*\/$/;"	e	enum:__anon29
SEC_MAC_ECB	../inc/NDK-bak.h	/^	SEC_MAC_ECB,        \/**< after running exclusive or (XOR) operation on all data, proceed DES conversion with data, refer to UnionPay regulations on ECB algorithm*\/$/;"	e	enum:__anon112
SEC_MAC_X919	../env/NDK.h	/^	SEC_MAC_X919,       \/**< X99算法：数据分为8字节block，不足补0，每个block加密后与下一个block异或后按密钥DES加密，$/;"	e	enum:__anon29
SEC_MAC_X919	../inc/NDK-bak.h	/^	SEC_MAC_X919,       \/**< X99 algorithm: data is divided into blocks of 8 bytes, suppliment with 0 if vacancy, exclusive or (XOR) of each encrypted block with next block, and then encrypt the result per key DES,$/;"	e	enum:__anon112
SEC_MAC_X99	../env/NDK.h	/^	SEC_MAC_X99=0,      \/**< X99算法：数据分为8字节block，不足补0，每个block加密后与下一个block异或后按密钥长度加密*\/$/;"	e	enum:__anon29
SEC_MAC_X99	../inc/NDK-bak.h	/^	SEC_MAC_X99=0,      \/**< X99 algorithm:o data is divided into blocks of 8 bytes, supplement with 0 if there is vacancy; exclusive or (XOR) of each encrypted block with next block, and then encrypt the result per key length*\/$/;"	e	enum:__anon112
SEC_OFFLINE_PIN_MODE_EMV	../env/NDK.h	/^	SEC_OFFLINE_PIN_MODE_EMV=0,$/;"	e	enum:__anon33
SEC_OFFLINE_PIN_MODE_EMV	../inc/NDK-bak.h	/^	SEC_OFFLINE_PIN_MODE_EMV=0,$/;"	e	enum:__anon116
SEC_PIN_ISO9564_0	../env/NDK.h	/^	SEC_PIN_ISO9564_0=3,    \/**<使用主账号加密，密码不足位数补'F'*\/$/;"	e	enum:__anon30
SEC_PIN_ISO9564_0	../inc/NDK-bak.h	/^	SEC_PIN_ISO9564_0=3,    \/**<Lack of encryption, using master account password number fill 'F'*\/$/;"	e	enum:__anon113
SEC_PIN_ISO9564_1	../env/NDK.h	/^	SEC_PIN_ISO9564_1=4,    \/**<不使用主账号加密，密码不足位数补随机数*\/$/;"	e	enum:__anon30
SEC_PIN_ISO9564_1	../inc/NDK-bak.h	/^	SEC_PIN_ISO9564_1=4,    \/**<Do not use the master account encryption, code digits for the random number*\/$/;"	e	enum:__anon113
SEC_PIN_ISO9564_2	../env/NDK.h	/^	SEC_PIN_ISO9564_2=5,    \/**<不使用主账号加密，密码不足位数补'F'*\/$/;"	e	enum:__anon30
SEC_PIN_ISO9564_2	../inc/NDK-bak.h	/^	SEC_PIN_ISO9564_2=5,    \/**< do not encrypt with master account, fill in with ??F?ˉ to complete the length if password is too short*\/$/;"	e	enum:__anon113
SEC_PIN_ISO9564_3	../env/NDK.h	/^	SEC_PIN_ISO9564_3=6     \/**<使用主账号加密，密码不足位数补随机数*\/$/;"	e	enum:__anon30
SEC_PIN_ISO9564_3	../inc/NDK-bak.h	/^	SEC_PIN_ISO9564_3=6     \/**<encrypt with master account, fill in with random numbers to complete the length if password is too short *\/$/;"	e	enum:__anon113
SEC_TAMPER_DEVICE_DISABLED	../env/NDK.h	/^	SEC_TAMPER_DEVICE_DISABLED = (1<<8),		\/**< 设备未使能*\/$/;"	e	enum:__anon34
SEC_TAMPER_STATUS_CHECKFILE	../env/NDK.h	/^	SEC_TAMPER_STATUS_CHECKFILE = (1<<2),			\/**< 文件校验错误*\/$/;"	e	enum:__anon34
SEC_TAMPER_STATUS_CHECKFILE	../inc/NDK-bak.h	/^	SEC_TAMPER_STATUS_CHECKFILE,			\/**< File validation error*\/$/;"	e	enum:__anon117
SEC_TAMPER_STATUS_HW	../env/NDK.h	/^	SEC_TAMPER_STATUS_HW = (1<<0),					\/**< 硬件安全攻击*\/$/;"	e	enum:__anon34
SEC_TAMPER_STATUS_HW	../inc/NDK-bak.h	/^	SEC_TAMPER_STATUS_HW,					\/**< Hardware security attacks*\/$/;"	e	enum:__anon117
SEC_TAMPER_STATUS_NONE	../env/NDK.h	/^	SEC_TAMPER_STATUS_NONE = 0,					\/**< 无安全攻击*\/$/;"	e	enum:__anon34
SEC_TAMPER_STATUS_NONE	../inc/NDK-bak.h	/^	SEC_TAMPER_STATUS_NONE,					\/**< No security against*\/$/;"	e	enum:__anon117
SEC_TAMPER_STATUS_SEC_CONFIG	../env/NDK.h	/^	SEC_TAMPER_STATUS_SEC_CONFIG = (1<<1),			\/**< 安全寄存器值错误*\/$/;"	e	enum:__anon34
SEC_TAMPER_STATUS_SEC_CONFIG	../inc/NDK-bak.h	/^	SEC_TAMPER_STATUS_SEC_CONFIG,			\/**< Security error register values*\/$/;"	e	enum:__anon117
SEC_VPP_KEY_BACKSPACE	../env/NDK.h	/^    SEC_VPP_KEY_BACKSPACE,				\/**< 退格键按下*\/$/;"	e	enum:__anon32
SEC_VPP_KEY_BACKSPACE	../inc/NDK-bak.h	/^    SEC_VPP_KEY_BACKSPACE,				\/**< Backspace key press*\/$/;"	e	enum:__anon115
SEC_VPP_KEY_CLEAR	../env/NDK.h	/^    SEC_VPP_KEY_CLEAR,					\/**< 清除键按下*\/$/;"	e	enum:__anon32
SEC_VPP_KEY_CLEAR	../inc/NDK-bak.h	/^    SEC_VPP_KEY_CLEAR,					\/**< Clear key press*\/$/;"	e	enum:__anon115
SEC_VPP_KEY_ENTER	../env/NDK.h	/^    SEC_VPP_KEY_ENTER,					\/**< 确认键按下*\/$/;"	e	enum:__anon32
SEC_VPP_KEY_ENTER	../inc/NDK-bak.h	/^    SEC_VPP_KEY_ENTER,					\/**< Confirm key press*\/$/;"	e	enum:__anon115
SEC_VPP_KEY_ESC	../env/NDK.h	/^    SEC_VPP_KEY_ESC,					\/**< pin输入取消*\/$/;"	e	enum:__anon32
SEC_VPP_KEY_ESC	../inc/NDK-bak.h	/^    SEC_VPP_KEY_ESC,					\/**< pin enter cancel*\/$/;"	e	enum:__anon115
SEC_VPP_KEY_NULL	../env/NDK.h	/^    SEC_VPP_KEY_NULL					\/**< pin无事件产生*\/$/;"	e	enum:__anon32
SEC_VPP_KEY_NULL	../inc/NDK-bak.h	/^    SEC_VPP_KEY_NULL					\/**< pin no event occurs*\/$/;"	e	enum:__anon115
SEC_VPP_KEY_PIN	../env/NDK.h	/^    SEC_VPP_KEY_PIN,					\/**< 有PIN键码按下，应用应该显示'*'*\/$/;"	e	enum:__anon32
SEC_VPP_KEY_PIN	../inc/NDK-bak.h	/^    SEC_VPP_KEY_PIN,					\/**< Have PIN key and press, the application should show '*'*\/$/;"	e	enum:__anon115
SELECT_APP	../src/PSam.c	16;"	d	file:
SELECT_FILE	../src/PSam.c	17;"	d	file:
SENDOFFLINE	../src/main.c	34;"	d	file:
SENDONLINE	../src/main.c	35;"	d	file:
SENDOPERATION	../inc/PriKeyDownload.h	164;"	d
SENDPINPAD	../src/main.c	37;"	d	file:
SENDPOS	../src/main.c	36;"	d	file:
SEVEN	../inc/PriKeyDownload.h	47;"	d
SHOPIDLEN	../inc/key.h	24;"	d
SIM1_POWERON	../libapi/lposcard.h	16;"	d
SIM2_POWERON	../libapi/lposcard.h	17;"	d
SIM3_POWERON	../libapi/lposcard.h	18;"	d
SIM4_POWERON	../libapi/lposcard.h	19;"	d
SIX	../inc/PriKeyDownload.h	46;"	d
SOH	../libapi/ltool.h	11;"	d
SP60	../libapi/lui.h	54;"	d
SP80	../libapi/lui.h	55;"	d
SRCS	../build/Makefile	/^SRCS=$(wildcard $(VPATH)\/*.c)$/;"	m
SRCS	../src/Makefile	/^SRCS=$(wildcard $(VPATH)\/*.c)$/;"	m
SSL3_CIPHER_ADH_DES_40_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_ADH_DES_40_CBC_SHA,			\/\/\/< 密码套件-ADH_DES_40_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_ADH_DES_40_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_ADH_DES_40_CBC_SHA,			\/\/\/< SSL3_CIPHER_ADH_DES_40_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_ADH_RC4_128_MD5	../env/NDK.h	/^        SSL3_CIPHER_ADH_RC4_128_MD5,			\/\/\/< 密码套件-ADH_RC4_128_MD5$/;"	e	enum:__anon65
SSL3_CIPHER_ADH_RC4_128_MD5	../inc/NDK-bak.h	/^        SSL3_CIPHER_ADH_RC4_128_MD5,			\/\/\/< SSL3_CIPHER_ADH_RC4_128_MD5$/;"	e	enum:__anon140
SSL3_CIPHER_ADH_RC4_40_MD5	../env/NDK.h	/^        SSL3_CIPHER_ADH_RC4_40_MD5,				\/\/\/< 密码套件-ADH_RC4_40_MD5$/;"	e	enum:__anon65
SSL3_CIPHER_ADH_RC4_40_MD5	../inc/NDK-bak.h	/^        SSL3_CIPHER_ADH_RC4_40_MD5,				\/\/\/< SSL3_CIPHER_ADH_RC4_40_MD5$/;"	e	enum:__anon140
SSL3_CIPHER_CK_ADH_DES_192_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_CK_ADH_DES_192_CBC_SHA,		\/\/\/< 密码套件-CK_ADH_DES_192_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_CK_ADH_DES_192_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_CK_ADH_DES_192_CBC_SHA,		\/\/\/< SSL3_CIPHER_CK_ADH_DES_192_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_CK_ADH_DES_64_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_CK_ADH_DES_64_CBC_SHA,		\/\/\/< 密码套件-CK_ADH_DES_64_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_CK_ADH_DES_64_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_CK_ADH_DES_64_CBC_SHA,		\/\/\/< SSL3_CIPHER_CK_ADH_DES_64_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_CK_FZA_DMS_FZA_SHA	../env/NDK.h	/^        SSL3_CIPHER_CK_FZA_DMS_FZA_SHA,			\/\/\/< 密码套件-CK_FZA_DMS_FZA_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_CK_FZA_DMS_FZA_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_CK_FZA_DMS_FZA_SHA,			\/\/\/< SSL3_CIPHER_CK_FZA_DMS_FZA_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_CK_FZA_DMS_RC4_SHA	../env/NDK.h	/^        SSL3_CIPHER_CK_FZA_DMS_RC4_SHA,			\/\/\/< 密码套件-CK_FZA_DMS_RC4_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_CK_FZA_DMS_RC4_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_CK_FZA_DMS_RC4_SHA,			\/\/\/< SSL3_CIPHER_CK_FZA_DMS_RC4_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_DH_DSS_DES_192_CBC3_SHA	../env/NDK.h	/^        SSL3_CIPHER_DH_DSS_DES_192_CBC3_SHA,	\/\/\/< 密码套件-DH_DSS_DES_192_CBC3_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_DH_DSS_DES_192_CBC3_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_DH_DSS_DES_192_CBC3_SHA,	\/\/\/< SSL3_CIPHER_DH_DSS_DES_192_CBC3_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_DH_DSS_DES_40_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_DH_DSS_DES_40_CBC_SHA,		\/\/\/< 密码套件-DH_DSS_DES_40_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_DH_DSS_DES_40_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_DH_DSS_DES_40_CBC_SHA,		\/\/\/< SSL3_CIPHER_DH_DSS_DES_40_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_DH_DSS_DES_64_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_DH_DSS_DES_64_CBC_SHA,		\/\/\/< 密码套件-DH_DSS_DES_64_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_DH_DSS_DES_64_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_DH_DSS_DES_64_CBC_SHA,		\/\/\/< SSL3_CIPHER_DH_DSS_DES_64_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_DH_RSA_DES_192_CBC3_SHA	../env/NDK.h	/^        SSL3_CIPHER_DH_RSA_DES_192_CBC3_SHA,	\/\/\/< 密码套件-DH_DSS_DES_192_CBC3_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_DH_RSA_DES_192_CBC3_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_DH_RSA_DES_192_CBC3_SHA,	\/\/\/< SSL3_CIPHER_DH_DSS_DES_192_CBC3_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_DH_RSA_DES_40_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_DH_RSA_DES_40_CBC_SHA,		\/\/\/< 密码套件-DH_RSA_DES_40_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_DH_RSA_DES_40_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_DH_RSA_DES_40_CBC_SHA,		\/\/\/< SSL3_CIPHER_DH_RSA_DES_40_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_DH_RSA_DES_64_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_DH_RSA_DES_64_CBC_SHA,		\/\/\/< 密码套件-DH_RSA_DES_64_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_DH_RSA_DES_64_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_DH_RSA_DES_64_CBC_SHA,		\/\/\/< SSL3_CIPHER_DH_RSA_DES_64_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_EDH_DSS_DES_192_CBC3_SHA	../env/NDK.h	/^        SSL3_CIPHER_EDH_DSS_DES_192_CBC3_SHA,	\/\/\/< 密码套件-EDH_DSS_DES_192_CBC3_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_EDH_DSS_DES_192_CBC3_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_EDH_DSS_DES_192_CBC3_SHA,	\/\/\/< SSL3_CIPHER_EDH_DSS_DES_192_CBC3_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_EDH_DSS_DES_40_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_EDH_DSS_DES_40_CBC_SHA,		\/\/\/< 密码套件-EDH_DSS_DES_40_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_EDH_DSS_DES_40_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_EDH_DSS_DES_40_CBC_SHA,		\/\/\/< SSL3_CIPHER_EDH_DSS_DES_40_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_EDH_DSS_DES_64_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_EDH_DSS_DES_64_CBC_SHA,		\/\/\/< 密码套件-EDH_DSS_DES_64_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_EDH_DSS_DES_64_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_EDH_DSS_DES_64_CBC_SHA,		\/\/\/< SSL3_CIPHER_EDH_DSS_DES_64_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_EDH_RSA_DES_192_CBC3_SHA	../env/NDK.h	/^        SSL3_CIPHER_EDH_RSA_DES_192_CBC3_SHA,	\/\/\/< 密码套件-EDH_RSA_DES_192_CBC3_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_EDH_RSA_DES_192_CBC3_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_EDH_RSA_DES_192_CBC3_SHA,	\/\/\/< SSL3_CIPHER_EDH_RSA_DES_192_CBC3_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_EDH_RSA_DES_40_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_EDH_RSA_DES_40_CBC_SHA,		\/\/\/< 密码套件-EDH_RSA_DES_40_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_EDH_RSA_DES_40_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_EDH_RSA_DES_40_CBC_SHA,		\/\/\/< SSL3_CIPHER_EDH_RSA_DES_40_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_EDH_RSA_DES_64_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_EDH_RSA_DES_64_CBC_SHA,		\/\/\/< 密码套件-EDH_RSA_DES_64_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_EDH_RSA_DES_64_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_EDH_RSA_DES_64_CBC_SHA,		\/\/\/< SSL3_CIPHER_EDH_RSA_DES_64_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_FZA_DMS_NULL_SHA	../env/NDK.h	/^        SSL3_CIPHER_FZA_DMS_NULL_SHA,			\/\/\/< 密码套件-FZA_DMS_NULL_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_FZA_DMS_NULL_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_FZA_DMS_NULL_SHA,			\/\/\/< SSL3_CIPHER_FZA_DMS_NULL_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_DES_192_CBC3_SHA	../env/NDK.h	/^        SSL3_CIPHER_RSA_DES_192_CBC3_SHA,		\/\/\/< 密码套件-DES_192_CBC3_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_DES_192_CBC3_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_DES_192_CBC3_SHA,		\/\/\/< SSL3_CIPHER_DES_192_CBC3_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_DES_40_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_RSA_DES_40_CBC_SHA,			\/\/\/< 密码套件-DES_40_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_DES_40_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_DES_40_CBC_SHA,			\/\/\/< SSL3_CIPHER_DES_40_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_DES_64_CBC_SHA	../env/NDK.h	/^        SSL3_CIPHER_RSA_DES_64_CBC_SHA,			\/\/\/< 密码套件-DES_64_CBC_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_DES_64_CBC_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_DES_64_CBC_SHA,			\/\/\/< SSL3_CIPHER_DES_64_CBC_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_IDEA_128_SHA	../env/NDK.h	/^        SSL3_CIPHER_RSA_IDEA_128_SHA,			\/\/\/< 密码套件-IDEA_128_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_IDEA_128_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_IDEA_128_SHA,			\/\/\/< SSL3_CIPHER_IDEA_128_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_NULL_MD5	../env/NDK.h	/^        SSL3_CIPHER_RSA_NULL_MD5 = 1,			\/\/\/< 密码套件-RSA_NULL_MD5$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_NULL_MD5	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_NULL_MD5 = 1,			\/\/\/< SSL3_CIPHER_RSA_NULL_MD5$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_NULL_SHA	../env/NDK.h	/^        SSL3_CIPHER_RSA_NULL_SHA,				\/\/\/< 密码套件-RSA_NULL_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_NULL_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_NULL_SHA,				\/\/\/< SSL3_CIPHER_RSA_NULL_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_RC2_40_MD5	../env/NDK.h	/^        SSL3_CIPHER_RSA_RC2_40_MD5,				\/\/\/< 密码套件-RSA_RC2_40_MD5$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_RC2_40_MD5	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_RC2_40_MD5,				\/\/\/< SSL3_CIPHER_RSA_RC2_40_MD5$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_RC4_128_MD5	../env/NDK.h	/^        SSL3_CIPHER_RSA_RC4_128_MD5,			\/\/\/< 密码套件-RSA_RC4_128_MD5$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_RC4_128_MD5	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_RC4_128_MD5,			\/\/\/< SSL3_CIPHER_RSA_RC4_128_MD5$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_RC4_128_SHA	../env/NDK.h	/^        SSL3_CIPHER_RSA_RC4_128_SHA,			\/\/\/< 密码套件-RSA_RC4_128_SHA$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_RC4_128_SHA	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_RC4_128_SHA,			\/\/\/< SSL3_CIPHER_RSA_RC4_128_SHA$/;"	e	enum:__anon140
SSL3_CIPHER_RSA_RC4_40_MD5	../env/NDK.h	/^        SSL3_CIPHER_RSA_RC4_40_MD5,				\/\/\/< 密码套件-RSA_RC4_40_MD5$/;"	e	enum:__anon65
SSL3_CIPHER_RSA_RC4_40_MD5	../inc/NDK-bak.h	/^        SSL3_CIPHER_RSA_RC4_40_MD5,				\/\/\/< SSL3_CIPHER_RSA_RC4_40_MD5$/;"	e	enum:__anon140
SSL_ADDR_IPV4	../env/NDK.h	/^	SSL_ADDR_IPV4,		\/**<IP v4*\/$/;"	e	enum:__anon68
SSL_ADDR_IPV4	../inc/NDK-bak.h	/^	SSL_ADDR_IPV4,		\/**<IP v4*\/$/;"	e	enum:__anon143
SSL_ADDR_IPV6	../env/NDK.h	/^    SSL_ADDR_IPV6,		\/**<IP v6*\/$/;"	e	enum:__anon68
SSL_ADDR_IPV6	../inc/NDK-bak.h	/^    SSL_ADDR_IPV6,		\/**<IP v6*\/$/;"	e	enum:__anon143
SSL_AUTH_CLIENT	../env/NDK.h	/^	SSL_AUTH_CLIENT,		  \/\/\/< 服务器模式:服务器发送一个客户端证书请求的客户机。返回的证书(如果有的话)是检查。$/;"	e	enum:__anon64
SSL_AUTH_CLIENT	../inc/NDK-bak.h	/^	SSL_AUTH_CLIENT,		\/\/\/< Server mode: the server sends a client certificate request to the client.$/;"	e	enum:__anon139
SSL_AUTH_NONE	../env/NDK.h	/^    SSL_AUTH_NONE,			\/\/\/< 服务器模式:服务器不会给一个客户端证书请求客户机,那么客户端将不会发送一个证书。$/;"	e	enum:__anon64
SSL_AUTH_NONE	../inc/NDK-bak.h	/^    SSL_AUTH_NONE,			\/\/\/< Server mode: the server will not send a client certificate request to the client, $/;"	e	enum:__anon139
SSL_CONNECTION_IN_PROGRESS	../env/NDK.h	/^    SSL_CONNECTION_IN_PROGRESS,		\/**<请求连接中*\/$/;"	e	enum:__anon66
SSL_CONNECTION_IN_PROGRESS	../inc/NDK-bak.h	/^    SSL_CONNECTION_IN_PROGRESS,		\/\/\/< Connection has been requested$/;"	e	enum:__anon141
SSL_FILE_DER	../env/NDK.h	/^    SSL_FILE_DER,		\/**<DER(ASN1) 文件格式*\/$/;"	e	enum:__anon67
SSL_FILE_DER	../inc/NDK-bak.h	/^    SSL_FILE_DER,		\/\/\/<  DER(ASN1) file format$/;"	e	enum:__anon142
SSL_FILE_PEM	../env/NDK.h	/^    SSL_FILE_PEM,		\/**<PEM (BASE64) 文件格式*\/$/;"	e	enum:__anon67
SSL_FILE_PEM	../inc/NDK-bak.h	/^    SSL_FILE_PEM,		\/\/!<  PEM (BASE64) file format$/;"	e	enum:__anon142
SSL_IS_CONNECTED	../env/NDK.h	/^    SSL_IS_CONNECTED				\/**<已连接*\/$/;"	e	enum:__anon66
SSL_IS_CONNECTED	../inc/NDK-bak.h	/^    SSL_IS_CONNECTED				\/\/\/< Connected state$/;"	e	enum:__anon141
SSL_IS_DISCONNECTED	../env/NDK.h	/^    SSL_IS_DISCONNECTED,			\/**<未连接*\/$/;"	e	enum:__anon66
SSL_IS_DISCONNECTED	../inc/NDK-bak.h	/^    SSL_IS_DISCONNECTED,			\/\/\/< Disconnected state$/;"	e	enum:__anon141
SS_ICCARD_BASE_ID	../env/NDK.h	/^	SS_ICCARD_BASE_ID = (SS_TYPE_ICCARD<<16|0),		\/**<插卡次数*\/$/;"	e	enum:__anon59
SS_ICCARD_BASE_ID	../inc/NDK-bak.h	/^	SS_ICCARD_BASE_ID = (ICCARD<<16|0),		\/**<Card number*\/$/;"	e	enum:__anon135
SS_KEYBOARD_0_ID	../env/NDK.h	/^	SS_KEYBOARD_0_ID = (SS_TYPE_KEYBOARD<<16|2),	\/**<统计其他键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_1_ID	../env/NDK.h	/^	SS_KEYBOARD_1_ID = (SS_TYPE_KEYBOARD<<16|3),	\/**<统计其他键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_2_ID	../env/NDK.h	/^	SS_KEYBOARD_2_ID = (SS_TYPE_KEYBOARD<<16|4),	\/**<统计其他键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_3_ID	../env/NDK.h	/^	SS_KEYBOARD_3_ID = (SS_TYPE_KEYBOARD<<16|5),	\/**<统计其他键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_BASP	../env/NDK.h	/^	SS_KEYBOARD_BASP = (SS_TYPE_KEYBOARD<<16|9),	\/**<统计退格键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_DOT	../env/NDK.h	/^              SS_KEYBOARD_DOT = (SS_TYPE_KEYBOARD<<16|14),		\/**<统计小数点键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_EIGHT	../env/NDK.h	/^	SS_KEYBOARD_EIGHT = (SS_TYPE_KEYBOARD<<16|17),	\/**<统计数字8键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_ENTER	../env/NDK.h	/^              SS_KEYBOARD_ENTER = (SS_TYPE_KEYBOARD<<16|8),	\/**<统计确认键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_ESC	../env/NDK.h	/^              SS_KEYBOARD_ESC = (SS_TYPE_KEYBOARD<<16|10),		\/**<统计取消键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_F1	../env/NDK.h	/^              SS_KEYBOARD_F1 = (SS_TYPE_KEYBOARD<<16|28),		\/**<统计F1(向上键)*\/$/;"	e	enum:__anon59
SS_KEYBOARD_F2	../env/NDK.h	/^              SS_KEYBOARD_F2 = (SS_TYPE_KEYBOARD<<16|29),		\/**<统计F2(菜单键)*\/$/;"	e	enum:__anon59
SS_KEYBOARD_F3	../env/NDK.h	/^              SS_KEYBOARD_F3 = (SS_TYPE_KEYBOARD<<16|30),		\/**<统计F3(向下键)*\/             $/;"	e	enum:__anon59
SS_KEYBOARD_F4	../env/NDK.h	/^	SS_KEYBOARD_F4 = (SS_TYPE_KEYBOARD<<16|31),		\/**<统计F4(关机键)*\/$/;"	e	enum:__anon59
SS_KEYBOARD_FIVE	../env/NDK.h	/^	SS_KEYBOARD_FIVE = (SS_TYPE_KEYBOARD<<16|21),		\/**<统计数字5键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_FOUR	../env/NDK.h	/^	SS_KEYBOARD_FOUR = (SS_TYPE_KEYBOARD<<16|22),		\/**<统计数字4键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_NINE	../env/NDK.h	/^	SS_KEYBOARD_NINE = (SS_TYPE_KEYBOARD<<16|16),		\/**<统计数字9键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_ONE	../env/NDK.h	/^	SS_KEYBOARD_ONE = (SS_TYPE_KEYBOARD<<16|26),		\/**<统计数字1键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_SEVEN	../env/NDK.h	/^	SS_KEYBOARD_SEVEN = (SS_TYPE_KEYBOARD<<16|18),	\/**<统计数字7键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_SIX	../env/NDK.h	/^	SS_KEYBOARD_SIX = (SS_TYPE_KEYBOARD<<16|20),		\/**<统计数字6键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_THREE	../env/NDK.h	/^	SS_KEYBOARD_THREE = (SS_TYPE_KEYBOARD<<16|24),	\/**<统计数字3键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_TOTAL	../env/NDK.h	/^	SS_KEYBOARD_TOTAL = (SS_TYPE_KEYBOARD<<16|33),	\/**<统计所有键*\/	$/;"	e	enum:__anon59
SS_KEYBOARD_TWO	../env/NDK.h	/^	SS_KEYBOARD_TWO = (SS_TYPE_KEYBOARD<<16|25),		\/**<统计数字2键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_ZERO	../env/NDK.h	/^	SS_KEYBOARD_ZERO = (SS_TYPE_KEYBOARD<<16|13),		\/**<统计数字0键*\/$/;"	e	enum:__anon59
SS_KEYBOARD_ZMK	../env/NDK.h	/^              SS_KEYBOARD_ZMK = (SS_TYPE_KEYBOARD<<16|12),		\/**<统计字母键*\/$/;"	e	enum:__anon59
SS_KEY_0_ID	../inc/NDK-bak.h	/^	SS_KEY_0_ID = (KEYBOARD<<16|0),$/;"	e	enum:__anon135
SS_KEY_10_ID	../inc/NDK-bak.h	/^	SS_KEY_10_ID = (KEYBOARD<<16|10),$/;"	e	enum:__anon135
SS_KEY_11_ID	../inc/NDK-bak.h	/^	SS_KEY_11_ID = (KEYBOARD<<16|11),$/;"	e	enum:__anon135
SS_KEY_12_ID	../inc/NDK-bak.h	/^	SS_KEY_12_ID = (KEYBOARD<<16|12),$/;"	e	enum:__anon135
SS_KEY_13_ID	../inc/NDK-bak.h	/^	SS_KEY_13_ID = (KEYBOARD<<16|13),$/;"	e	enum:__anon135
SS_KEY_14_ID	../inc/NDK-bak.h	/^	SS_KEY_14_ID = (KEYBOARD<<16|14),$/;"	e	enum:__anon135
SS_KEY_15_ID	../inc/NDK-bak.h	/^	SS_KEY_15_ID = (KEYBOARD<<16|15),$/;"	e	enum:__anon135
SS_KEY_16_ID	../inc/NDK-bak.h	/^	SS_KEY_16_ID = (KEYBOARD<<16|16),$/;"	e	enum:__anon135
SS_KEY_17_ID	../inc/NDK-bak.h	/^	SS_KEY_17_ID = (KEYBOARD<<16|17),$/;"	e	enum:__anon135
SS_KEY_18_ID	../inc/NDK-bak.h	/^	SS_KEY_18_ID = (KEYBOARD<<16|18),$/;"	e	enum:__anon135
SS_KEY_19_ID	../inc/NDK-bak.h	/^	SS_KEY_19_ID = (KEYBOARD<<16|19),$/;"	e	enum:__anon135
SS_KEY_1_ID	../inc/NDK-bak.h	/^	SS_KEY_1_ID = (KEYBOARD<<16|1),$/;"	e	enum:__anon135
SS_KEY_20_ID	../inc/NDK-bak.h	/^	SS_KEY_20_ID = (KEYBOARD<<16|20),$/;"	e	enum:__anon135
SS_KEY_21_ID	../inc/NDK-bak.h	/^	SS_KEY_21_ID = (KEYBOARD<<16|21),$/;"	e	enum:__anon135
SS_KEY_22_ID	../inc/NDK-bak.h	/^	SS_KEY_22_ID = (KEYBOARD<<16|22),$/;"	e	enum:__anon135
SS_KEY_23_ID	../inc/NDK-bak.h	/^	SS_KEY_23_ID = (KEYBOARD<<16|23),$/;"	e	enum:__anon135
SS_KEY_24_ID	../inc/NDK-bak.h	/^	SS_KEY_24_ID = (KEYBOARD<<16|24),$/;"	e	enum:__anon135
SS_KEY_25_ID	../inc/NDK-bak.h	/^	SS_KEY_25_ID = (KEYBOARD<<16|25),$/;"	e	enum:__anon135
SS_KEY_26_ID	../inc/NDK-bak.h	/^	SS_KEY_26_ID = (KEYBOARD<<16|26),$/;"	e	enum:__anon135
SS_KEY_27_ID	../inc/NDK-bak.h	/^	SS_KEY_27_ID = (KEYBOARD<<16|27),$/;"	e	enum:__anon135
SS_KEY_28_ID	../inc/NDK-bak.h	/^	SS_KEY_28_ID = (KEYBOARD<<16|28),$/;"	e	enum:__anon135
SS_KEY_29_ID	../inc/NDK-bak.h	/^	SS_KEY_29_ID = (KEYBOARD<<16|29),$/;"	e	enum:__anon135
SS_KEY_2_ID	../inc/NDK-bak.h	/^	SS_KEY_2_ID = (KEYBOARD<<16|2),$/;"	e	enum:__anon135
SS_KEY_30_ID	../inc/NDK-bak.h	/^	SS_KEY_30_ID = (KEYBOARD<<16|30),$/;"	e	enum:__anon135
SS_KEY_31_ID	../inc/NDK-bak.h	/^	SS_KEY_31_ID = (KEYBOARD<<16|31),$/;"	e	enum:__anon135
SS_KEY_3_ID	../inc/NDK-bak.h	/^	SS_KEY_3_ID = (KEYBOARD<<16|3),$/;"	e	enum:__anon135
SS_KEY_4_ID	../inc/NDK-bak.h	/^	SS_KEY_4_ID = (KEYBOARD<<16|4),$/;"	e	enum:__anon135
SS_KEY_5_ID	../inc/NDK-bak.h	/^	SS_KEY_5_ID = (KEYBOARD<<16|5),$/;"	e	enum:__anon135
SS_KEY_6_ID	../inc/NDK-bak.h	/^	SS_KEY_6_ID = (KEYBOARD<<16|6),$/;"	e	enum:__anon135
SS_KEY_7_ID	../inc/NDK-bak.h	/^	SS_KEY_7_ID = (KEYBOARD<<16|7),$/;"	e	enum:__anon135
SS_KEY_8_ID	../inc/NDK-bak.h	/^	SS_KEY_8_ID = (KEYBOARD<<16|8),$/;"	e	enum:__anon135
SS_KEY_9_ID	../inc/NDK-bak.h	/^	SS_KEY_9_ID = (KEYBOARD<<16|9),$/;"	e	enum:__anon135
SS_KEY_TOTAL_ID	../inc/NDK-bak.h	/^	SS_KEY_TOTAL_ID = (KEYBOARD<<16|33),$/;"	e	enum:__anon135
SS_MAG_TIMES_ID	../env/NDK.h	/^	SS_MAG_TIMES_ID = (SS_TYPE_MAG<<16|0),			\/**<刷卡次数*\/$/;"	e	enum:__anon59
SS_MAG_TIMES_ID	../inc/NDK-bak.h	/^	SS_MAG_TIMES_ID = (MAG<<16|0),			\/**<Credit card number*\/$/;"	e	enum:__anon135
SS_MODEM_ASYNTIME_ID	../env/NDK.h	/^	SS_MODEM_ASYNTIME_ID = (SS_TYPE_MODEM<<16|3),	\/**<MODEM时长(异步)*\/$/;"	e	enum:__anon59
SS_MODEM_ASYNTIME_ID	../inc/NDK-bak.h	/^	SS_MODEM_ASYNTIME_ID = (MODEM_ID<<16|3),\/**<MODEM duration(asynchronous)*\/$/;"	e	enum:__anon135
SS_MODEM_FAILTIMES_ID	../env/NDK.h	/^	SS_MODEM_FAILTIMES_ID = (SS_TYPE_MODEM<<16|1),	\/**<MODEM连接失败次数*\/$/;"	e	enum:__anon59
SS_MODEM_FAILTIMES_ID	../inc/NDK-bak.h	/^	SS_MODEM_FAILTIMES_ID = (MODEM_ID<<16|1),\/**<MODEM number of connection*\/$/;"	e	enum:__anon135
SS_MODEM_SDLCTIME_ID	../env/NDK.h	/^	SS_MODEM_SDLCTIME_ID = (SS_TYPE_MODEM<<16|2),	\/**<MODEM时长(SDLC)*\/$/;"	e	enum:__anon59
SS_MODEM_SDLCTIME_ID	../inc/NDK-bak.h	/^	SS_MODEM_SDLCTIME_ID = (MODEM_ID<<16|2),\/**<MODEM duration(SDLC)*\/$/;"	e	enum:__anon135
SS_MODEM_TIMES_ID	../env/NDK.h	/^	SS_MODEM_TIMES_ID = (SS_TYPE_MODEM<<16|0),		\/**<MODEM连接次数*\/$/;"	e	enum:__anon59
SS_MODEM_TIMES_ID	../inc/NDK-bak.h	/^	SS_MODEM_TIMES_ID = (MODEM_ID<<16|0),	\/**<MODEM number of connections*\/$/;"	e	enum:__anon135
SS_POWERUP_TIME_ID	../env/NDK.h	/^	SS_POWERUP_TIME_ID = (SS_TYPE_POWER<<16|1)		\/**<开机时间(单位为秒)*\/$/;"	e	enum:__anon59
SS_POWERUP_TIME_ID	../inc/NDK-bak.h	/^	SS_POWERUP_TIME_ID = (POWER<<16|1)		\/**<available machine time*\/$/;"	e	enum:__anon135
SS_POWER_TIMES_ID	../env/NDK.h	/^	SS_POWER_TIMES_ID = (SS_TYPE_POWER<<16|0),		\/**<开关机次数*\/$/;"	e	enum:__anon59
SS_POWER_TIMES_ID	../inc/NDK-bak.h	/^	SS_POWER_TIMES_ID = (POWER<<16|0),		\/**<Switch machine number*\/$/;"	e	enum:__anon135
SS_PRT_HEADER_ID	../inc/NDK-bak.h	/^	SS_PRT_HEADER_ID = (PRINTER<<16|1),		\/**<Needle with the total*\/$/;"	e	enum:__anon135
SS_PRT_HEAT_ID	../env/NDK.h	/^	SS_PRT_HEAT_ID = (SS_TYPE_PRINTER<<16|1),			\/**<热敏头加热时长(单位为秒)*\/$/;"	e	enum:__anon59
SS_PRT_HEAT_ID	../inc/NDK-bak.h	/^	SS_PRT_HEAT_ID = (PRINTER<<16|2),		\/**<The thermal head heating time*\/$/;"	e	enum:__anon135
SS_PRT_PAPER_ID	../env/NDK.h	/^	SS_PRT_PAPER_ID = (SS_TYPE_PRINTER<<16|0),    		\/**<打印米数(单位为毫米mm)*\/$/;"	e	enum:__anon59
SS_PRT_PAPER_ID	../inc/NDK-bak.h	/^	SS_PRT_PAPER_ID = (PRINTER<<16|0),    	\/**<Print in meters*\/$/;"	e	enum:__anon135
SS_PRT_STITCH_ID	../env/NDK.h	/^    SS_PRT_STITCH_ID = (SS_TYPE_PRINTER<<16|2),			\/**<针打出针数*\/$/;"	e	enum:__anon59
SS_RFID_TIMES_ID	../env/NDK.h	/^	SS_RFID_TIMES_ID = (SS_TYPE_RFID<<16|0),		\/**<寻卡次数*\/$/;"	e	enum:__anon59
SS_RFID_TIMES_ID	../inc/NDK-bak.h	/^	SS_RFID_TIMES_ID = (RFID<<16|0),		\/**<For card number*\/$/;"	e	enum:__anon135
SS_TYPE_DEV_MAIN_NUM	../env/NDK.h	/^    SS_TYPE_DEV_MAIN_NUM	\/**<主设备数量*\/$/;"	e	enum:__anon58
SS_TYPE_ICCARD	../env/NDK.h	/^    SS_TYPE_ICCARD,			\/**<IC卡*\/$/;"	e	enum:__anon58
SS_TYPE_KEYBOARD	../env/NDK.h	/^    SS_TYPE_KEYBOARD,		\/**<按键*\/$/;"	e	enum:__anon58
SS_TYPE_MAG	../env/NDK.h	/^    SS_TYPE_MAG,			\/**<磁卡*\/$/;"	e	enum:__anon58
SS_TYPE_MODEM	../env/NDK.h	/^    SS_TYPE_MODEM,		\/**<MODEM*\/$/;"	e	enum:__anon58
SS_TYPE_POWER	../env/NDK.h	/^    SS_TYPE_POWER,			\/**<开关机*\/$/;"	e	enum:__anon58
SS_TYPE_PRINTER	../env/NDK.h	/^    SS_TYPE_PRINTER,		\/**<打印机*\/$/;"	e	enum:__anon58
SS_TYPE_RFID	../env/NDK.h	/^    SS_TYPE_RFID,			\/**<射频卡*\/$/;"	e	enum:__anon58
SS_TYPE_WIFI	../env/NDK.h	/^    SS_TYPE_WIFI,			\/**<WIFI*\/$/;"	e	enum:__anon58
SS_TYPE_WLS	../env/NDK.h	/^    SS_TYPE_WLS,			\/**<无线*\/$/;"	e	enum:__anon58
SS_WIFI_TIMES_ID	../env/NDK.h	/^	SS_WIFI_TIMES_ID = (SS_TYPE_WIFI<<16|0),		\/**<WIFI连接次数*\/$/;"	e	enum:__anon59
SS_WIFI_TIMES_ID	../inc/NDK-bak.h	/^	SS_WIFI_TIMES_ID = (WIFI<<16|0),		\/**<WIFI number of connections*\/$/;"	e	enum:__anon135
SS_WIFI_TIME_ID	../env/NDK.h	/^	SS_WIFI_TIME_ID = (SS_TYPE_WIFI<<16|1),			\/**<WIFI连接时长(单位为毫秒)*\/$/;"	e	enum:__anon59
SS_WIFI_TIME_ID	../inc/NDK-bak.h	/^	SS_WIFI_TIME_ID = (WIFI<<16|1),			\/**<WIFI The connection time*\/$/;"	e	enum:__anon135
SS_WLS_FAILTIMES_ID	../env/NDK.h	/^	SS_WLS_FAILTIMES_ID = (SS_TYPE_WLS<<16|1),		\/**<无线连接失败次数*\/$/;"	e	enum:__anon59
SS_WLS_FAILTIMES_ID	../inc/NDK-bak.h	/^	SS_WLS_FAILTIMES_ID = (WLS<<16|1),		\/**<Wireless connection*\/$/;"	e	enum:__anon135
SS_WLS_PPPTIME_ID	../env/NDK.h	/^	SS_WLS_PPPTIME_ID = (SS_TYPE_WLS<<16|2),		\/**<无线连接时长(单位为毫秒)*\/$/;"	e	enum:__anon59
SS_WLS_PPPTIME_ID	../inc/NDK-bak.h	/^	SS_WLS_PPPTIME_ID = (WLS<<16|2),		\/**<The wireless connection time(PPP)*\/$/;"	e	enum:__anon135
SS_WLS_TIMES_ID	../env/NDK.h	/^	SS_WLS_TIMES_ID = (SS_TYPE_WLS<<16|0),			\/**<无线连接次数*\/$/;"	e	enum:__anon59
SS_WLS_TIMES_ID	../inc/NDK-bak.h	/^	SS_WLS_TIMES_ID = (WLS<<16|0),			\/**<Wireless connection times*\/$/;"	e	enum:__anon135
STATUSBAR_BATTERYBG_WIDTH	../inc/theme.h	138;"	d
STATUSBAR_BATTERYBG_WIDTH	../inc/theme.h	66;"	d
STATUSBAR_BATTERYBG_X	../inc/theme.h	136;"	d
STATUSBAR_BATTERYBG_X	../inc/theme.h	64;"	d
STATUSBAR_BATTERYBG_Y	../inc/theme.h	137;"	d
STATUSBAR_BATTERYBG_Y	../inc/theme.h	65;"	d
STATUSBAR_BATTERY_H	../inc/theme.h	135;"	d
STATUSBAR_BATTERY_H	../inc/theme.h	63;"	d
STATUSBAR_BATTERY_W	../inc/theme.h	134;"	d
STATUSBAR_BATTERY_W	../inc/theme.h	62;"	d
STATUSBAR_BATTERY_X	../inc/theme.h	132;"	d
STATUSBAR_BATTERY_X	../inc/theme.h	60;"	d
STATUSBAR_BATTERY_Y	../inc/theme.h	133;"	d
STATUSBAR_BATTERY_Y	../inc/theme.h	61;"	d
STATUSBAR_DISP_ALL	../env/NDK.h	/^    STATUSBAR_DISP_ALL = 1,  		\/**<显示状态栏(时间、电量、无线信号)*\/$/;"	e	enum:__anon7
STATUSBAR_DISP_BATTERY	../env/NDK.h	/^    STATUSBAR_DISP_BATTERY = 4,		\/**<状态栏显示电量*\/$/;"	e	enum:__anon7
STATUSBAR_DISP_CLOSE	../env/NDK.h	/^	STATUSBAR_DISP_CLOSE = 0,		\/**<关闭状态栏*\/$/;"	e	enum:__anon7
STATUSBAR_DISP_TIME	../env/NDK.h	/^	STATUSBAR_DISP_TIME = 2, 		\/**<状态栏显示时间*\/			$/;"	e	enum:__anon7
STATUSBAR_DISP_WLSIGNAL	../env/NDK.h	/^	STATUSBAR_DISP_WLSIGNAL = 8,	\/**<状态栏显示无线信号*\/$/;"	e	enum:__anon7
STATUSBAR_HEIGHT	../inc/theme.h	115;"	d
STATUSBAR_HEIGHT	../inc/theme.h	42;"	d
STATUSBAR_POSITION_BOTTOM	../env/NDK.h	/^	STATUSBAR_POSITION_BOTTOM = 0x10000\/**<状态栏底部显示*\/$/;"	e	enum:__anon7
STATUSBAR_POSITION_TOP	../env/NDK.h	/^	STATUSBAR_POSITION_TOP = 0x00000,\/**<状态栏顶部显示*\/$/;"	e	enum:__anon7
STATUSBAR_TIME_H	../inc/theme.h	130;"	d
STATUSBAR_TIME_H	../inc/theme.h	58;"	d
STATUSBAR_TIME_W	../inc/theme.h	129;"	d
STATUSBAR_TIME_W	../inc/theme.h	57;"	d
STATUSBAR_TIME_X	../inc/theme.h	127;"	d
STATUSBAR_TIME_X	../inc/theme.h	55;"	d
STATUSBAR_TIME_Y	../inc/theme.h	128;"	d
STATUSBAR_TIME_Y	../inc/theme.h	56;"	d
STATUSBAR_WIFI_SIGNAL_H	../inc/theme.h	143;"	d
STATUSBAR_WIFI_SIGNAL_H	../inc/theme.h	71;"	d
STATUSBAR_WIFI_SIGNAL_W	../inc/theme.h	142;"	d
STATUSBAR_WIFI_SIGNAL_W	../inc/theme.h	70;"	d
STATUSBAR_WIFI_SIGNAL_X	../inc/theme.h	140;"	d
STATUSBAR_WIFI_SIGNAL_X	../inc/theme.h	68;"	d
STATUSBAR_WIFI_SIGNAL_Y	../inc/theme.h	141;"	d
STATUSBAR_WIFI_SIGNAL_Y	../inc/theme.h	69;"	d
STATUSBAR_WLM_SIGNAL_H	../inc/theme.h	125;"	d
STATUSBAR_WLM_SIGNAL_H	../inc/theme.h	52;"	d
STATUSBAR_WLM_SIGNAL_W	../inc/theme.h	124;"	d
STATUSBAR_WLM_SIGNAL_W	../inc/theme.h	51;"	d
STATUSBAR_WLM_SIGNAL_X	../inc/theme.h	122;"	d
STATUSBAR_WLM_SIGNAL_X	../inc/theme.h	49;"	d
STATUSBAR_WLM_SIGNAL_Y	../inc/theme.h	123;"	d
STATUSBAR_WLM_SIGNAL_Y	../inc/theme.h	50;"	d
STATUSBAR_WLM_TYPE_H	../inc/theme.h	120;"	d
STATUSBAR_WLM_TYPE_H	../inc/theme.h	47;"	d
STATUSBAR_WLM_TYPE_W	../inc/theme.h	119;"	d
STATUSBAR_WLM_TYPE_W	../inc/theme.h	46;"	d
STATUSBAR_WLM_TYPE_X	../inc/theme.h	117;"	d
STATUSBAR_WLM_TYPE_X	../inc/theme.h	44;"	d
STATUSBAR_WLM_TYPE_Y	../inc/theme.h	118;"	d
STATUSBAR_WLM_TYPE_Y	../inc/theme.h	45;"	d
STATUS_CLOSE	../env/NDK.h	3062;"	d
STATUS_CLOSE	../inc/NDK-bak.h	2690;"	d
STATUS_IMAGE	../inc/theme.h	146;"	d
STATUS_IMAGE	../inc/theme.h	74;"	d
STATUS_OPEN	../env/NDK.h	3061;"	d
STATUS_OPEN	../inc/NDK-bak.h	2689;"	d
STISODataStru	../libapi/ltool.h	/^typedef struct STISODataStru$/;"	s
STISODataStru	../libapi/ltool.h	/^} STISODataStru;$/;"	t	typeref:struct:STISODataStru
STISODataStru::fld	../libapi/ltool.h	/^    STISO_FIELD		fld[256];$/;"	m	struct:STISODataStru	access:public
STISODataStru::nUsed	../libapi/ltool.h	/^    int        		nUsed;$/;"	m	struct:STISODataStru	access:public
STISODataStru::sBitmap	../libapi/ltool.h	/^    char			sBitmap[256];$/;"	m	struct:STISODataStru	access:public
STISODataStru::szDatabuf	../libapi/ltool.h	/^    unsigned char 	szDatabuf[MAX_MSG_LEN + MAX_FIELD_LEN];		\/**< 多留一个域的长度，防止溢出 *\/$/;"	m	struct:STISODataStru	access:public
STISO_FIELD	../libapi/ltool.h	/^struct STISO_FIELD$/;"	s
STISO_FIELD	../libapi/ltool.h	/^typedef struct STISO_FIELD STISO_FIELD;$/;"	t	typeref:struct:STISO_FIELD
STISO_FIELD::nLen	../libapi/ltool.h	/^    int    nLen;$/;"	m	struct:STISO_FIELD	access:public
STISO_FIELD::nOff	../libapi/ltool.h	/^    int    nOff;					\/**< 指向iso->databuf缓冲区的偏移，数据中不含长度类型的几个字节 *\/$/;"	m	struct:STISO_FIELD	access:public
STISO_FIELD_DEF	../libapi/ltool.h	/^struct STISO_FIELD_DEF$/;"	s
STISO_FIELD_DEF	../libapi/ltool.h	/^typedef struct STISO_FIELD_DEF STISO_FIELD_DEF;$/;"	t	typeref:struct:STISO_FIELD_DEF
STISO_FIELD_DEF::align	../libapi/ltool.h	/^    EM_ALIGN_TYPE           align;			\/**< 对齐类型 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
STISO_FIELD_DEF::cPadchar	../libapi/ltool.h	/^    char                    cPadchar;		\/**< 补齐字符 *\/	$/;"	m	struct:STISO_FIELD_DEF	access:public
STISO_FIELD_DEF::lentype	../libapi/ltool.h	/^    EM_LENGTH_TYPE		    lentype;		\/**< 数据域长度类型: 1--LLVAR型 2--LLLVAR型 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
STISO_FIELD_DEF::nLen	../libapi/ltool.h	/^    int                     nLen;			\/**< 数据域最大长度 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
STISO_FIELD_DEF::pPack	../libapi/ltool.h	/^    FIELD_PACKAGER_PACK		pPack;			\/**< 打包函数指针 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
STISO_FIELD_DEF::pUnpack	../libapi/ltool.h	/^    FIELD_PACKAGER_UNPACK	pUnpack;		\/**< 解包函数指针 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
STISO_FIELD_LENGTH_CALC	../libapi/ltool.h	/^struct STISO_FIELD_LENGTH_CALC$/;"	s
STISO_FIELD_LENGTH_CALC::pGet	../libapi/ltool.h	/^    FIELD_LENGTH_GET	pGet;		\/**< 取出长度时调用的函数 *\/$/;"	m	struct:STISO_FIELD_LENGTH_CALC	access:public
STISO_FIELD_LENGTH_CALC::pSet	../libapi/ltool.h	/^    FIELD_LENGTH_SET	pSet;		\/**< 设置长度时调用的函数 *\/$/;"	m	struct:STISO_FIELD_LENGTH_CALC	access:public
STKEY_RECORD	../inc/key.h	/^}STKEY_RECORD;$/;"	t	typeref:struct:__anon82
STMENUTYPE	../libapi/lui.h	/^} STMENUTYPE;$/;"	t	typeref:struct:__anon190
STMENU_LIST	../libapi/lui.h	/^}STMENU_LIST;$/;"	t	typeref:struct:__anon191
STOPER_RECORD	../inc/oper.h	/^} STOPER_RECORD;$/;"	t	typeref:struct:__anon152
STREADCARDPARAM	../libapi/lposcard.h	/^}STREADCARDPARAM;$/;"	t	typeref:struct:__anon177
STRECFILE	../libapi/ltool.h	/^}STRECFILE;$/;"	t	typeref:struct:tagRecFile
STRFIDCARDPARAM	../libapi/lposcard.h	/^}STRFIDCARDPARAM;$/;"	t	typeref:struct:__anon176
STRING_IMAGE_INTER	../inc/theme.h	114;"	d
STRING_IMAGE_INTER	../inc/theme.h	40;"	d
STUIFUN_STYLE	../libapi/lui.h	/^}STUIFUN_STYLE;$/;"	t	typeref:struct:__anon192
STWATER_RECORD	../inc/key.h	/^} STWATER_RECORD;$/;"	t	typeref:struct:__anon81
STX	../libapi/ltool.h	12;"	d
ST_APPINFO	../env/NDK.h	/^}ST_APPINFO;$/;"	t	typeref:struct:APPINFO
ST_APPINFO	../inc/NDK-bak.h	/^}ST_APPINFO;$/;"	t	typeref:struct:APPINFO
ST_ATCMD_PACK	../env/NDK.h	/^}ST_ATCMD_PACK;$/;"	t	typeref:struct:NDK_WL_ATCMD
ST_ATCMD_PACK	../inc/NDK-bak.h	/^}ST_ATCMD_PACK;$/;"	t	typeref:struct:NDK_WL_ATCMD
ST_CDMA_STATION_INFO	../env/NDK.h	/^}ST_CDMA_STATION_INFO;$/;"	t	typeref:struct:__anon45
ST_DISK_INFO	../env/NDK.h	/^}ST_DISK_INFO;$/;"	t	typeref:struct:__anon71
ST_DISK_INFO	../inc/NDK-bak.h	/^}ST_DISK_INFO;$/;"	t	typeref:struct:__anon146
ST_EXTEND_KEYBLOCK	../env/NDK.h	/^}ST_EXTEND_KEYBLOCK;$/;"	t	typeref:struct:__anon35
ST_EXTEND_KEYBLOCK	../inc/NDK-bak.h	/^}ST_EXTEND_KEYBLOCK;$/;"	t	typeref:struct:__anon118
ST_Funtion_key	../inc/selftest.h	/^typedef struct ST_Funtion_key{$/;"	s
ST_Funtion_key	../inc/selftest.h	/^}ST_Funtion_key;$/;"	t	typeref:struct:ST_Funtion_key
ST_Funtion_key::funckey	../inc/selftest.h	/^	int funckey[FUNCKEY_CNT];$/;"	m	struct:ST_Funtion_key	access:public
ST_Funtion_key::keytype	../inc/selftest.h	/^	int keytype;$/;"	m	struct:ST_Funtion_key	access:public
ST_GPRS_STATION_INFO	../env/NDK.h	/^}ST_GPRS_STATION_INFO;$/;"	t	typeref:struct:__anon44
ST_LED_FLICK	../env/NDK.h	/^}ST_LED_FLICK;$/;"	t	typeref:struct:__anon61
ST_MOBILE_STATION_INFO	../env/NDK.h	/^}ST_MOBILE_STATION_INFO;$/;"	t	typeref:struct:__anon48
ST_PADDATA	../env/NDK.h	/^}ST_PADDATA;$/;"	t	typeref:struct:__st_PADDATA
ST_POWER_INFO	../env/NDK.h	/^} ST_POWER_INFO;$/;"	t	typeref:struct:__POWERINFO
ST_PPP_CFG	../env/NDK.h	/^} ST_PPP_CFG;$/;"	t	typeref:struct:__anon50
ST_PPP_CFG	../inc/NDK-bak.h	/^} ST_PPP_CFG;$/;"	t	typeref:struct:__anon127
ST_PRN_FONTMSG	../env/NDK.h	/^}ST_PRN_FONTMSG;$/;"	t	typeref:struct:__anon20
ST_PRN_FONTMSG	../inc/NDK-bak.h	/^}ST_PRN_FONTMSG;$/;"	t	typeref:struct:__anon104
ST_PRN_RECMSG	../env/NDK.h	/^}ST_PRN_RECMSG;$/;"	t	typeref:struct:__anon19
ST_PRN_RECMSG	../inc/NDK-bak.h	/^}ST_PRN_RECMSG;$/;"	t	typeref:struct:__anon103
ST_RSA_PRIVATE_KEY	../env/NDK.h	/^}ST_RSA_PRIVATE_KEY;$/;"	t	typeref:struct:__anon25
ST_RSA_PRIVATE_KEY	../inc/NDK-bak.h	/^}ST_RSA_PRIVATE_KEY;$/;"	t	typeref:struct:__anon108
ST_RSA_PUBLIC_KEY	../env/NDK.h	/^}ST_RSA_PUBLIC_KEY;$/;"	t	typeref:struct:__anon26
ST_RSA_PUBLIC_KEY	../inc/NDK-bak.h	/^}ST_RSA_PUBLIC_KEY;$/;"	t	typeref:struct:__anon109
ST_SEC_KCV_INFO	../env/NDK.h	/^}ST_SEC_KCV_INFO;$/;"	t	typeref:struct:__anon37
ST_SEC_KCV_INFO	../inc/NDK-bak.h	/^}ST_SEC_KCV_INFO;$/;"	t	typeref:struct:__anon120
ST_SEC_KEY_INFO	../env/NDK.h	/^}ST_SEC_KEY_INFO;$/;"	t	typeref:struct:__anon36
ST_SEC_KEY_INFO	../inc/NDK-bak.h	/^}ST_SEC_KEY_INFO;$/;"	t	typeref:struct:__anon119
ST_SEC_OFFLINE_PIN_MODE	../env/NDK.h	/^}ST_SEC_OFFLINE_PIN_MODE;$/;"	t	typeref:enum:__anon33
ST_SEC_OFFLINE_PIN_MODE	../inc/NDK-bak.h	/^}ST_SEC_OFFLINE_PIN_MODE;$/;"	t	typeref:enum:__anon116
ST_SEC_RSA_KEY	../env/NDK.h	/^}ST_SEC_RSA_KEY;$/;"	t	typeref:struct:__anon39
ST_SEC_RSA_KEY	../inc/NDK-bak.h	/^}ST_SEC_RSA_KEY;$/;"	t	typeref:struct:__anon122
ST_SEC_RSA_PINKEY	../env/NDK.h	/^}ST_SEC_RSA_PINKEY;$/;"	t	typeref:struct:__anon38
ST_SEC_RSA_PINKEY	../inc/NDK-bak.h	/^}ST_SEC_RSA_PINKEY;$/;"	t	typeref:struct:__anon121
ST_SOCKET_ADDR	../env/NDK.h	/^}ST_SOCKET_ADDR;$/;"	t	typeref:struct:st_socket_addr
ST_SOCKET_ADDR	../inc/NDK-bak.h	/^}ST_SOCKET_ADDR;$/;"	t	typeref:struct:st_socket_addr
ST_SS_OUTPUT	../inc/NDK-bak.h	/^}ST_SS_OUTPUT;$/;"	t	typeref:struct:st_ss_output
ST_STATION_INFO	../env/NDK.h	/^}ST_STATION_INFO;$/;"	t	typeref:struct:station_info
ST_WIFI_APINFO	../env/NDK.h	/^}ST_WIFI_APINFO;$/;"	t	typeref:struct:__anon76
ST_WIFI_APINFO	../inc/NDK-bak.h	/^}ST_WIFI_APINFO;$/;"	t	typeref:struct:__anon151
ST_WIFI_PARAM	../env/NDK.h	/^} ST_WIFI_PARAM;$/;"	t	typeref:struct:__anon74
ST_WIFI_PARAM	../inc/NDK-bak.h	/^} ST_WIFI_PARAM;$/;"	t	typeref:struct:__anon149
SUCC	../inc/PriKeyDownload.h	55;"	d
SUCC	../inc/selftest.h	29;"	d
SUPPORT_PINPAD	../inc/posdef.h	69;"	d
SUPPORT_PINPAD	../inc/posdef.h	73;"	d
SYS_CONFIG_APP_AUTORUN	../env/NDK.h	/^	SYS_CONFIG_APP_AUTORUN,      	\/**<开机自动运行主控程序 0:禁用 1:启用*\/$/;"	e	enum:__anon55
SYS_CONFIG_APP_AUTORUN	../inc/NDK-bak.h	/^	SYS_CONFIG_APP_AUTORUN,      	\/**<Boot automatically run MCP 0: disable 1: enabled*\/$/;"	e	enum:__anon131
SYS_CONFIG_LANGUAGE	../env/NDK.h	/^	SYS_CONFIG_LANGUAGE,			\/**<获取系统语言 0:中文 1:english *\/$/;"	e	enum:__anon55
SYS_CONFIG_LANGUAGE	../inc/NDK-bak.h	/^	SYS_CONFIG_LANGUAGE,			\/**<Language acquisition system 0:1: Chinese English *\/$/;"	e	enum:__anon131
SYS_CONFIG_SLEEP_ENABLE	../env/NDK.h	/^	SYS_CONFIG_SLEEP_ENABLE,	    \/**<休眠使能 0:禁止 1:启用 *\/$/;"	e	enum:__anon55
SYS_CONFIG_SLEEP_ENABLE	../inc/NDK-bak.h	/^	SYS_CONFIG_SLEEP_ENABLE,	    \/**<Dormancy can make 0: banned 1: enabled *\/$/;"	e	enum:__anon131
SYS_CONFIG_SLEEP_MODE	../env/NDK.h	/^	SYS_CONFIG_SLEEP_MODE,      	\/**<休眠模式 1:浅休眠 2:深休眠*\/$/;"	e	enum:__anon55
SYS_CONFIG_SLEEP_MODE	../inc/NDK-bak.h	/^	SYS_CONFIG_SLEEP_MODE,      	\/**<Sleep mode 1: shallow sleep 2: deep dormancy*\/$/;"	e	enum:__anon131
SYS_CONFIG_SLEEP_TIME	../env/NDK.h	/^	SYS_CONFIG_SLEEP_TIME,      	\/**<进入休眠时间前待机时间*\/$/;"	e	enum:__anon55
SYS_CONFIG_SLEEP_TIME	../inc/NDK-bak.h	/^	SYS_CONFIG_SLEEP_TIME,      	\/**<Before entering the sleep time of standby time*\/$/;"	e	enum:__anon131
SYS_ERRORCODE	../inc/selftest.h	/^enum SYS_ERRORCODE {$/;"	g
SYS_FWINFO_DEV	../env/NDK.h	/^	SYS_FWINFO_DEV				\/**<开发版本   			*\/$/;"	e	enum:__anon60
SYS_FWINFO_DEV	../inc/NDK-bak.h	/^	SYS_FWINFO_DEV				\/**<Development Version   			*\/$/;"	e	enum:__anon136
SYS_FWINFO_PRO	../env/NDK.h	/^	SYS_FWINFO_PRO,      		\/**<正式版本   			*\/$/;"	e	enum:__anon60
SYS_FWINFO_PRO	../inc/NDK-bak.h	/^	SYS_FWINFO_PRO,      		\/**<RELEASE   			*\/$/;"	e	enum:__anon136
SYS_HWINFO_GET_BIOS_VER	../env/NDK.h	/^	SYS_HWINFO_GET_BIOS_VER,        		\/**<取bios版本信息 			 *\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_BIOS_VER	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_BIOS_VER,        		\/**<to obtain bios version info 			 *\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_BOARD_VER	../env/NDK.h	/^	SYS_HWINFO_GET_BOARD_VER,       		\/**<取主板号        			*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_BOARD_VER	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_BOARD_VER,       		\/**<to get mainboard No.        			*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_BOOT_VER	../env/NDK.h	/^	SYS_HWINFO_GET_BOOT_VER,        \/**<取pos机boot版本 *\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_CPU_TYPE	../env/NDK.h	/^	SYS_HWINFO_GET_CPU_TYPE,           \/**<取pos机cpu类型  *\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_CPU_TYPE	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_CPU_TYPE,           \/**<get pos cpu type  *\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_CREDITCARD_COUNT	../env/NDK.h	/^	SYS_HWINFO_GET_CREDITCARD_COUNT,		\/**<取pos刷卡总数					*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_CREDITCARD_COUNT	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_CREDITCARD_COUNT,		\/**<to get total number of card swiping of the pos					*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_HARDWARE_INFO	../env/NDK.h	/^	SYS_HWINFO_GET_HARDWARE_INFO,       \/**<获取POS机上所支持硬件类型，详细返回值如上所述*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_HARDWARE_INFO	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_HARDWARE_INFO,       \/**<to obtain all types of hardware the POS machine that supports, detailed return values are as above*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_KEY_COUNT	../env/NDK.h	/^	SYS_HWINFO_GET_KEY_COUNT,            \/**<取pos机按键次数  *\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_KEY_COUNT	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_KEY_COUNT,            \/**<to get times of keypress of the pos  *\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_PATCH_VER	../env/NDK.h	/^	SYS_HWINFO_GET_PATCH_VER,           \/**<取bios版本补丁号*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_POS_PSN	../env/NDK.h	/^	SYS_HWINFO_GET_POS_PSN,        		\/**<取机器机器号    		*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_POS_PSN	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_POS_PSN,        		\/**<to get machine No.    		*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_POS_RUNTIME	../env/NDK.h	/^	SYS_HWINFO_GET_POS_RUNTIME,          \/**<取pos机开机运行时间  *\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_POS_RUNTIME	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_POS_RUNTIME,          \/**<to get pos' power up and operation time  *\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_POS_TYPE	../env/NDK.h	/^	SYS_HWINFO_GET_POS_TYPE=0,      		\/**<取pos机器类型   			*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_POS_TYPE	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_POS_TYPE=0,      		\/**<to get model of pos machine   			*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_POS_USN	../env/NDK.h	/^	SYS_HWINFO_GET_POS_USN,        		\/**<取机器序列号    		*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_POS_USN	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_POS_USN,        		\/**<to get machine serial No.    		*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_PRN_LEN	../env/NDK.h	/^	SYS_HWINFO_GET_PRN_LEN,				\/**<取pos打印总长度    		*\/$/;"	e	enum:__anon54
SYS_HWINFO_GET_PRN_LEN	../inc/NDK-bak.h	/^	SYS_HWINFO_GET_PRN_LEN,				\/**<to get total print length of the pos    		*\/$/;"	e	enum:__anon130
SYS_HWINFO_GET_PUBKEY_VER	../env/NDK.h	/^	SYS_HWINFO_GET_PUBKEY_VER,			\/**<取公钥版本信息*\/$/;"	e	enum:__anon54
SYS_HWTYPE_AUX	../env/NDK.h	/^	SYS_HWTYPE_AUX,					\/**< 串口*\/$/;"	e	enum:__anon56
SYS_HWTYPE_AUX	../inc/NDK-bak.h	/^	SYS_HWTYPE_AUX,					\/**< serial port*\/$/;"	e	enum:__anon132
SYS_HWTYPE_BT	../env/NDK.h	/^	SYS_HWTYPE_BT,				\/**< 蓝牙*\/$/;"	e	enum:__anon56
SYS_HWTYPE_ETHERNET	../env/NDK.h	/^	SYS_HWTYPE_ETHERNET,			\/**< 以太网*\/$/;"	e	enum:__anon56
SYS_HWTYPE_ETHERNET	../inc/NDK-bak.h	/^	SYS_HWTYPE_ETHERNET,			\/**< Ethernet*\/$/;"	e	enum:__anon132
SYS_HWTYPE_MAG_CARD	../env/NDK.h	/^	SYS_HWTYPE_MAG_CARD,			\/**< 磁卡*\/$/;"	e	enum:__anon56
SYS_HWTYPE_MAG_CARD	../inc/NDK-bak.h	/^	SYS_HWTYPE_MAG_CARD,			\/**< magcard*\/$/;"	e	enum:__anon132
SYS_HWTYPE_MAX	../env/NDK.h	/^	SYS_HWTYPE_MAX					\/**< 最大值，只允许放在最后*\/$/;"	e	enum:__anon56
SYS_HWTYPE_MAX	../inc/NDK-bak.h	/^	SYS_HWTYPE_MAX					\/**< The maximum, only allowed in the end*\/$/;"	e	enum:__anon132
SYS_HWTYPE_MODEM	../env/NDK.h	/^	SYS_HWTYPE_MODEM,				\/**< modem*\/$/;"	e	enum:__anon56
SYS_HWTYPE_MODEM	../inc/NDK-bak.h	/^	SYS_HWTYPE_MODEM,				\/**< modem*\/$/;"	e	enum:__anon132
SYS_HWTYPE_PINPAD	../env/NDK.h	/^	SYS_HWTYPE_PINPAD,				\/**< 密码键盘*\/$/;"	e	enum:__anon56
SYS_HWTYPE_PINPAD	../inc/NDK-bak.h	/^	SYS_HWTYPE_PINPAD,				\/**< code keyboard*\/$/;"	e	enum:__anon132
SYS_HWTYPE_PRINTER	../env/NDK.h	/^	SYS_HWTYPE_PRINTER,				\/**< 打印机*\/$/;"	e	enum:__anon56
SYS_HWTYPE_PRINTER	../inc/NDK-bak.h	/^	SYS_HWTYPE_PRINTER,				\/**< printer*\/$/;"	e	enum:__anon132
SYS_HWTYPE_RFID	../env/NDK.h	/^	SYS_HWTYPE_RFID,				\/**< 射频卡*\/$/;"	e	enum:__anon56
SYS_HWTYPE_RFID	../inc/NDK-bak.h	/^	SYS_HWTYPE_RFID,				\/**< radio frequency card*\/$/;"	e	enum:__anon132
SYS_HWTYPE_RFIDLED	../env/NDK.h	/^	SYS_HWTYPE_RFIDLED,				\/**< 射频LED灯*\/$/;"	e	enum:__anon56
SYS_HWTYPE_RFIDLED	../inc/NDK-bak.h	/^	SYS_HWTYPE_RFIDLED,				\/**< rf LED*\/$/;"	e	enum:__anon132
SYS_HWTYPE_SCANNER	../env/NDK.h	/^	SYS_HWTYPE_SCANNER,				\/**< 扫描头*\/$/;"	e	enum:__anon56
SYS_HWTYPE_SCANNER	../inc/NDK-bak.h	/^	SYS_HWTYPE_SCANNER,				\/**< scan head*\/$/;"	e	enum:__anon132
SYS_HWTYPE_TOUCHSCREEN	../env/NDK.h	/^	SYS_HWTYPE_TOUCHSCREEN,			\/**< 触摸屏*\/$/;"	e	enum:__anon56
SYS_HWTYPE_TOUCHSCREEN	../inc/NDK-bak.h	/^	SYS_HWTYPE_TOUCHSCREEN,			\/**< touch screen*\/$/;"	e	enum:__anon132
SYS_HWTYPE_USB	../env/NDK.h	/^	SYS_HWTYPE_USB,					\/**< USB*\/$/;"	e	enum:__anon56
SYS_HWTYPE_USB	../inc/NDK-bak.h	/^	SYS_HWTYPE_USB,					\/**< USB*\/$/;"	e	enum:__anon132
SYS_HWTYPE_WIFI	../env/NDK.h	/^	SYS_HWTYPE_WIFI,				\/**< wifi*\/$/;"	e	enum:__anon56
SYS_HWTYPE_WIFI	../inc/NDK-bak.h	/^	SYS_HWTYPE_WIFI,				\/**< wifi*\/$/;"	e	enum:__anon132
SYS_HWTYPE_WIRELESS_MODEM	../env/NDK.h	/^	SYS_HWTYPE_WIRELESS_MODEM=0,	\/**<无线modem *\/$/;"	e	enum:__anon56
SYS_HWTYPE_WIRELESS_MODEM	../inc/NDK-bak.h	/^	SYS_HWTYPE_WIRELESS_MODEM=0,	\/**<wirelessmodem *\/$/;"	e	enum:__anon132
SelectDownloadPort	../inc/Pri_DownloadTool.h	/^int SelectDownloadPort(int nSeconds) ;$/;"	p	signature:(int nSeconds)
SelectDownloadPort	../src/Pri_DownloadTool.c	/^int SelectDownloadPort(int nSeconds)    \/\/modify by zhengyn 20110505$/;"	f	signature:(int nSeconds)
SelectFunc	../inc/PriKeyDownload.h	/^int SelectFunc(void);$/;"	p	signature:(void)
SelectFunc	../src/PriKey_app.c	/^int SelectFunc(void)$/;"	f	signature:(void)
SendCertFile	../src/Pri_DownloadTool.c	/^int SendCertFile(char *fpath, char *fname)$/;"	f	signature:(char *fpath, char *fname)
SendCertFile	../src/genreq.c	/^extern int SendCertFile(char *fpath, char *fname);$/;"	p	file:	signature:(char *fpath, char *fname)
SendCertFile	../src/signcert.c	/^extern int SendCertFile(char *fpath, char *fname);$/;"	p	file:	signature:(char *fpath, char *fname)
SendFrameWithRepeat	../inc/Pri_DownloadTool.h	/^int SendFrameWithRepeat(char *sendbuf, int len);$/;"	p	signature:(char *sendbuf, int len)
SendFrameWithRepeat	../src/Pri_DownloadTool.c	/^int SendFrameWithRepeat(char *sendbuf, int len)$/;"	f	signature:(char *sendbuf, int len)
SetDownloadPortType	../inc/Pri_DownloadTool.h	/^int SetDownloadPortType(int porttype);$/;"	p	signature:(int porttype)
SetDownloadPortType	../src/Pri_DownloadTool.c	/^int SetDownloadPortType(int porttype)$/;"	f	signature:(int porttype)
SetKEK	../src/main.c	/^static int SetKEK()$/;"	f	file:
SetKEK	../src/main.c	/^static int SetKEK(void);$/;"	p	file:	signature:(void)
SetPassword	../inc/PriKeyDownload.h	/^int SetPassword(int flag);$/;"	p	signature:(int flag)
SetPassword	../src/PriKey_app.c	/^int SetPassword(int flag)$/;"	f	signature:(int flag)
ShowTitle	../inc/selftest.h	/^extern void ShowTitle(const char *szTitle);$/;"	p	signature:(const char *szTitle)
ShowTitle	../src/tools.c	/^void ShowTitle(const char *szTitle)$/;"	f	signature:(const char *szTitle)
StartMenu	../src/main.c	/^static int StartMenu(void)$/;"	f	file:	signature:(void)
SumSignature	../inc/PriKeyDownload.h	/^int SumSignature(R_RSA_PRIVATE_KEY *prikey);$/;"	p	signature:(R_RSA_PRIVATE_KEY *prikey)
SumSignature	../src/PriKey_app.c	/^int SumSignature(R_RSA_PRIVATE_KEY *prikey)$/;"	f	signature:(R_RSA_PRIVATE_KEY *prikey)
TDES	../src/main.c	31;"	d	file:
TDESTYPE	../inc/key.h	21;"	d
TEMP_FILE	../inc/key.h	18;"	d
TERMINALIDLEN	../inc/key.h	25;"	d
TEXT_ATTRIBUTE_NOBACKCOLOR	../env/NDK.h	/^	TEXT_ATTRIBUTE_NOBACKCOLOR = 1<<3,		\/**<字体无背景色*\/$/;"	e	enum:__anon2
TEXT_ATTRIBUTE_NORMAL	../env/NDK.h	/^	TEXT_ATTRIBUTE_NORMAL = 1<<0,			\/**<字体正常显示*\/$/;"	e	enum:__anon2
TEXT_ATTRIBUTE_NORMAL	../inc/NDK-bak.h	/^	TEXT_ATTRIBUTE_NORMAL = 1<<0,			\/**<normal font display*\/$/;"	e	enum:__anon89
TEXT_ATTRIBUTE_REVERSE	../env/NDK.h	/^	TEXT_ATTRIBUTE_REVERSE = 1<<1,		\/**<字体反向显示*\/$/;"	e	enum:__anon2
TEXT_ATTRIBUTE_REVERSE	../inc/NDK-bak.h	/^	TEXT_ATTRIBUTE_REVERSE = 1<<1,		\/**<reverse font display*\/$/;"	e	enum:__anon89
TEXT_ATTRIBUTE_UNDERLINE	../env/NDK.h	/^	TEXT_ATTRIBUTE_UNDERLINE = 1<<2,		\/**<字体加下划线*\/$/;"	e	enum:__anon2
TEXT_ATTRIBUTE_UNDERLINE	../inc/NDK-bak.h	/^	TEXT_ATTRIBUTE_UNDERLINE = 1<<2,		\/**<underline font*\/$/;"	e	enum:__anon89
THEME_H_	../inc/theme.h	2;"	d
THEME_LEFT	../inc/theme.h	78;"	d
THEME_LEFT	../inc/theme.h	7;"	d
THEME_MAGIC	../inc/theme.h	4;"	d
THEME_RIGHT	../inc/theme.h	79;"	d
THEME_RIGHT	../inc/theme.h	8;"	d
THREE	../inc/PriKeyDownload.h	43;"	d
TIME_MODE_HOUR_MIN_SEC	../libapi/lui.h	/^	TIME_MODE_HOUR_MIN_SEC=0,			\/**<时:分:秒*\/$/;"	e	enum:__anon184
TIME_MODE_ONELINE_YMD_HM	../libapi/lui.h	/^	TIME_MODE_ONELINE_YMD_HM,			\/**<一行显示 年:月:日 时:分*\/$/;"	e	enum:__anon184
TIME_MODE_TWOLINE_YMD_HM	../libapi/lui.h	/^	TIME_MODE_TWOLINE_YMD_HM			\/**<俩行显示 年:月:日 时:分*\/$/;"	e	enum:__anon184
TITLE_BEGIN_INTER	../inc/theme.h	20;"	d
TITLE_BEGIN_INTER	../inc/theme.h	94;"	d
TITLE_CENTER_INTER	../inc/theme.h	22;"	d
TITLE_CENTER_INTER	../inc/theme.h	96;"	d
TITLE_END_INTER	../inc/theme.h	21;"	d
TITLE_END_INTER	../inc/theme.h	95;"	d
TK1	../inc/selftest.h	34;"	d
TK1_2	../inc/selftest.h	39;"	d
TK1_2_3	../inc/selftest.h	38;"	d
TK1_3	../inc/selftest.h	40;"	d
TK2	../inc/selftest.h	35;"	d
TK2_3	../inc/selftest.h	37;"	d
TK3	../inc/selftest.h	36;"	d
TOPDIR	../src/Makefile	/^TOPDIR	:= ..\/..\/..\/..\/..\/..$/;"	m
TO_HIGH_HALF	../inc/emvnn.h	41;"	d
TR31BLK_ERR_KLEN	../inc/tr31_format.h	134;"	d
TR31BLK_ERR_KSN	../inc/tr31_format.h	136;"	d
TR31BLK_ERR_LEN	../inc/tr31_format.h	132;"	d
TR31BLK_ERR_MAC	../inc/tr31_format.h	133;"	d
TR31BLK_ERR_NULL	../inc/tr31_format.h	135;"	d
TR31BLK_HERR_EXP	../inc/tr31_format.h	127;"	d
TR31BLK_HERR_LEN	../inc/tr31_format.h	129;"	d
TR31BLK_HERR_OPT	../inc/tr31_format.h	130;"	d
TR31BLK_HERR_USG	../inc/tr31_format.h	128;"	d
TR31BLK_HERR_VER	../inc/tr31_format.h	126;"	d
TR31RSA_KEY_LEN	../inc/tr31_format.h	40;"	d
TR31_DATA_BCD_MAX	../inc/tr31_format.h	41;"	d
TR31_ENCRYPTED_BLOCK_BCD_MAX	../inc/tr31_format.h	42;"	d
TR31_HEAD_LEN	../inc/tr31_format.h	29;"	d
TR31_HEAD_OPT2_LEN	../inc/tr31_format.h	30;"	d
TRACE	../inc/debug.h	42;"	d
TRACE	../inc/debug.h	46;"	d
TRACE_DISP	../inc/debug.h	43;"	d
TRACE_DISP	../inc/debug.h	47;"	d
TRUE	../inc/PriKeyDownload.h	52;"	d
TRUE	../inc/selftest.h	31;"	d
TRUE	../libapi/ltool.h	22;"	d
TWO	../inc/PriKeyDownload.h	42;"	d
TimeOutProcess	../inc/Pri_DownloadApi.h	/^int TimeOutProcess(void);$/;"	p	signature:(void)
TimeOutProcess	../src/Pri_DownloadApi.c	/^int TimeOutProcess(void)$/;"	f	signature:(void)
Trace	../inc/debug.h	/^extern void Trace(char* lpszFormat, ...);$/;"	p	signature:(char* lpszFormat, ...)
Trace	../src/debug.c	/^void Trace(char* lpszFormat, ...) {}$/;"	f	signature:(char* lpszFormat, ...)
Trim	../inc/PriKeyDownload.h	/^int Trim(char* lpStr);$/;"	p	signature:(char* lpStr)
Trim	../src/PriKey_app.c	/^int Trim(char* lpStr)$/;"	f	signature:(char* lpStr)
UDISK	../env/NDK.h	/^	UDISK = 0,    \/**<选择U盘*\/$/;"	e	enum:__anon69
UDISK	../inc/NDK-bak.h	/^	UDISK = 0,    \/**<Select U Disk*\/$/;"	e	enum:__anon144
UINT2	../inc/emvrsa.h	/^typedef unsigned short int UINT2;$/;"	t
UINT4	../inc/emvrsa.h	/^typedef unsigned long int UINT4;$/;"	t
UP	../inc/PriKeyDownload.h	28;"	d
USB_DISK	../inc/PriKeyDownload.h	76;"	d
USE_CMAC_TDEA	../inc/tr31_format.h	26;"	d
VERSTR_GZYL	../inc/posdef.h	61;"	d
VOICE_CTRL_MUTE	../env/NDK.h	/^        VOICE_CTRL_MUTE = 4,    \/**<打开静音*\/$/;"	e	enum:__anon78
VOICE_CTRL_NMUTE	../env/NDK.h	/^        VOICE_CTRL_NMUTE = 5,   \/**<关闭静音*\/$/;"	e	enum:__anon78
VOICE_CTRL_PAUSE	../env/NDK.h	/^        VOICE_CTRL_PAUSE = 2,   \/**<暂停播放*\/$/;"	e	enum:__anon78
VOICE_CTRL_RESUME	../env/NDK.h	/^        VOICE_CTRL_RESUME = 1,  \/**<恢复播放*\/$/;"	e	enum:__anon78
VOICE_CTRL_START	../env/NDK.h	/^        VOICE_CTRL_START = 0,   \/**<重新播放*\/$/;"	e	enum:__anon78
VOICE_CTRL_STOP	../env/NDK.h	/^        VOICE_CTRL_STOP = 3,    \/**<停止播放*\/$/;"	e	enum:__anon78
VOICE_CTRL_VOLUME	../env/NDK.h	/^        VOICE_CTRL_VOLUME = 6,  \/**<音量控制*\/$/;"	e	enum:__anon78
VPATH	../build/Makefile	/^VPATH =..\/src$/;"	m
VPATH	../src/Makefile	/^VPATH =..\/src$/;"	m
WDEBUG	../inc/debug.h	15;"	d
WDEBUG	../inc/debug.h	17;"	d
WDEBUG	../inc/debug.h	28;"	d
WDEBUG_DATA	../inc/debug.h	18;"	d
WDEBUG_DATA	../inc/debug.h	29;"	d
WIDGET_H_	../env/widget.h	2;"	d
WIFI	../inc/NDK-bak.h	/^    WIFI,			\/**<WIFI*\/$/;"	e	enum:__anon134
WIFI_IW_ENCODING_TOKEN_MAX	../env/NDK.h	5705;"	d
WIFI_IW_ENCODING_TOKEN_MAX	../inc/NDK-bak.h	4586;"	d
WIFI_IW_ESSID_MAX_SIZE	../env/NDK.h	5704;"	d
WIFI_IW_ESSID_MAX_SIZE	../inc/NDK-bak.h	4585;"	d
WIFI_KEY_TYPE_ASCII	../env/NDK.h	/^	WIFI_KEY_TYPE_ASCII         \/**<路由器使用ASCII的密码格式*\/$/;"	e	enum:__anon73
WIFI_KEY_TYPE_ASCII	../inc/NDK-bak.h	/^	WIFI_KEY_TYPE_ASCII         \/**<Routers use ASCII code format*\/$/;"	e	enum:__anon148
WIFI_KEY_TYPE_HEX	../env/NDK.h	/^    WIFI_KEY_TYPE_HEX,          \/**<路由器使用十六进制的密码格式*\/$/;"	e	enum:__anon73
WIFI_KEY_TYPE_HEX	../inc/NDK-bak.h	/^    WIFI_KEY_TYPE_HEX,          \/**<Routers use hexadecimal code format*\/$/;"	e	enum:__anon148
WIFI_KEY_TYPE_NOKEY	../env/NDK.h	/^    WIFI_KEY_TYPE_NOKEY,        \/**<路由器不使用密码*\/$/;"	e	enum:__anon73
WIFI_KEY_TYPE_NOKEY	../inc/NDK-bak.h	/^    WIFI_KEY_TYPE_NOKEY,        \/**<The router does not use the password*\/$/;"	e	enum:__anon148
WIFI_NET_SEC_NONE	../env/NDK.h	/^    WIFI_NET_SEC_NONE,          \/**<路由器不使用安全加密模式*\/$/;"	e	enum:__anon72
WIFI_NET_SEC_NONE	../inc/NDK-bak.h	/^    WIFI_NET_SEC_NONE,          \/**<The router does not use the security encryption mode*\/$/;"	e	enum:__anon147
WIFI_NET_SEC_WEP_OPEN	../env/NDK.h	/^    WIFI_NET_SEC_WEP_OPEN,      \/**<路由器使用开放密钥的WEP模式*\/$/;"	e	enum:__anon72
WIFI_NET_SEC_WEP_OPEN	../inc/NDK-bak.h	/^    WIFI_NET_SEC_WEP_OPEN,      \/**<Routers use keys to open WEP mode*\/$/;"	e	enum:__anon147
WIFI_NET_SEC_WEP_SHARED	../env/NDK.h	/^    WIFI_NET_SEC_WEP_SHARED,    \/**<路由器使用共享密钥的WEP模式*\/$/;"	e	enum:__anon72
WIFI_NET_SEC_WEP_SHARED	../inc/NDK-bak.h	/^    WIFI_NET_SEC_WEP_SHARED,    \/**<Routers use the Shared secret WEP mode*\/$/;"	e	enum:__anon147
WIFI_NET_SEC_WPA	../env/NDK.h	/^    WIFI_NET_SEC_WPA,           \/**<路由器使用WPA模式*\/$/;"	e	enum:__anon72
WIFI_NET_SEC_WPA	../inc/NDK-bak.h	/^    WIFI_NET_SEC_WPA,           \/**<Routers use WPA mode*\/$/;"	e	enum:__anon147
WIFI_NET_SEC_WPA2	../env/NDK.h	/^    WIFI_NET_SEC_WPA2           \/**<路由器使用WPA2模式*\/$/;"	e	enum:__anon72
WIFI_NET_SEC_WPA2	../inc/NDK-bak.h	/^    WIFI_NET_SEC_WPA2           \/**<Routers use WPA2 mode*\/$/;"	e	enum:__anon147
WIFI_WPA_CONSTATE_AUTHENTICATED	../env/NDK.h	/^    WIFI_WPA_CONSTATE_AUTHENTICATED,\/**<连接已获得AP验证*\/$/;"	e	enum:__anon75
WIFI_WPA_CONSTATE_AUTHENTICATED	../inc/NDK-bak.h	/^    WIFI_WPA_CONSTATE_AUTHENTICATED,\/**<Connection has been AP validation*\/$/;"	e	enum:__anon150
WIFI_WPA_CONSTATE_CONTEXT	../env/NDK.h	/^    WIFI_WPA_CONSTATE_CONTEXT       \/**<连接指定的AP已成功*\/$/;"	e	enum:__anon75
WIFI_WPA_CONSTATE_CONTEXT	../inc/NDK-bak.h	/^    WIFI_WPA_CONSTATE_CONTEXT       \/**<Connected to the specified AP has been successful*\/$/;"	e	enum:__anon150
WIFI_WPA_CONSTATE_LINKED	../env/NDK.h	/^    WIFI_WPA_CONSTATE_LINKED,       \/**<连接已获得AP回应*\/$/;"	e	enum:__anon75
WIFI_WPA_CONSTATE_LINKED	../inc/NDK-bak.h	/^    WIFI_WPA_CONSTATE_LINKED,       \/**<Connection has been AP response*\/$/;"	e	enum:__anon150
WIFI_WPA_CONSTATE_LINKING	../env/NDK.h	/^    WIFI_WPA_CONSTATE_LINKING,      \/**<正在连接指定的AP*\/$/;"	e	enum:__anon75
WIFI_WPA_CONSTATE_LINKING	../inc/NDK-bak.h	/^    WIFI_WPA_CONSTATE_LINKING,      \/**<Attempting to connect to the specified AP*\/$/;"	e	enum:__anon150
WIN_PROP_DESKTOP	../env/widget.h	20;"	d
WIN_PROP_MASK	../env/widget.h	11;"	d
WIN_PROP_NONE	../env/widget.h	19;"	d
WIN_PROP_NORMAL	../env/widget.h	18;"	d
WIN_PROP_TITLE_BAR_MASK	../env/widget.h	13;"	d
WIN_PROP_TITLE_CLOSE	../env/widget.h	16;"	d
WIN_PROP_TITLE_ICON	../env/widget.h	14;"	d
WIN_PROP_TITLE_STRING	../env/widget.h	15;"	d
WLM_CMD_CCID	../env/NDK.h	/^    WLM_CMD_CCID,				\/**<获取无线SIM卡序列号*\/$/;"	e	enum:__anon41
WLM_CMD_CGATT0	../env/NDK.h	/^    WLM_CMD_CGATT0=5,			\/**<注销GPRS网络*\/$/;"	e	enum:__anon41
WLM_CMD_CGATT0	../inc/NDK-bak.h	/^    WLM_CMD_CGATT0=5,			\/**<logoff GPRS network*\/$/;"	e	enum:__anon124
WLM_CMD_CGATT1	../env/NDK.h	/^    WLM_CMD_CGATT1=6,			\/**<注册GPRS网络*\/$/;"	e	enum:__anon41
WLM_CMD_CGATT1	../inc/NDK-bak.h	/^    WLM_CMD_CGATT1=6,			\/**<register GPRS network*\/$/;"	e	enum:__anon124
WLM_CMD_CGMR	../env/NDK.h	/^    WLM_CMD_CGMR=10,			\/**<取模块版本*\/$/;"	e	enum:__anon41
WLM_CMD_CGMR	../inc/NDK-bak.h	/^    WLM_CMD_CGMR=10,			\/**<to get module version*\/$/;"	e	enum:__anon124
WLM_CMD_CGSN	../env/NDK.h	/^    WLM_CMD_CGSN,         		\/**<获取GSN号(imei或meid)*\/$/;"	e	enum:__anon41
WLM_CMD_CGSN	../inc/NDK-bak.h	/^    WLM_CMD_CGSN,         \/**<<to obtain GSN No. (imei or meid)*\/$/;"	e	enum:__anon124
WLM_CMD_COPS	../env/NDK.h	/^    WLM_CMD_COPS=9,				\/**<注册网络*\/$/;"	e	enum:__anon41
WLM_CMD_COPS	../inc/NDK-bak.h	/^    WLM_CMD_COPS=9,				\/**<register network*\/$/;"	e	enum:__anon124
WLM_CMD_CPIN	../env/NDK.h	/^    WLM_CMD_CPIN=3,				\/**<查询卡PIN*\/$/;"	e	enum:__anon41
WLM_CMD_CPIN	../inc/NDK-bak.h	/^    WLM_CMD_CPIN=3,				\/**<card PIN query *\/$/;"	e	enum:__anon124
WLM_CMD_CPIN0	../env/NDK.h	/^    WLM_CMD_CPIN0=4,			\/**<设置PIN码*\/$/;"	e	enum:__anon41
WLM_CMD_CPIN0	../inc/NDK-bak.h	/^    WLM_CMD_CPIN0=4,			\/**<set PIN code*\/$/;"	e	enum:__anon124
WLM_CMD_CREG	../env/NDK.h	/^    WLM_CMD_CREG=2,				\/**<网络注册状态*\/$/;"	e	enum:__anon41
WLM_CMD_CREG	../inc/NDK-bak.h	/^    WLM_CMD_CREG=2,				\/**<network registration state*\/$/;"	e	enum:__anon124
WLM_CMD_CSQ	../env/NDK.h	/^    WLM_CMD_CSQ=1,				\/**<取信号值*\/$/;"	e	enum:__anon41
WLM_CMD_CSQ	../inc/NDK-bak.h	/^    WLM_CMD_CSQ=1,				\/**<to get signal value*\/$/;"	e	enum:__anon124
WLM_CMD_D2	../env/NDK.h	/^    WLM_CMD_D2=8,				\/**<启用硬件挂断功能*\/$/;"	e	enum:__anon41
WLM_CMD_D2	../inc/NDK-bak.h	/^    WLM_CMD_D2=8,					\/**<hardwire hangup function ON*\/$/;"	e	enum:__anon124
WLM_CMD_DIAL	../env/NDK.h	/^    WLM_CMD_DIAL=7,				\/**<拨号*\/$/;"	e	enum:__anon41
WLM_CMD_DIAL	../inc/NDK-bak.h	/^    WLM_CMD_DIAL=7,				\/**<dial*\/$/;"	e	enum:__anon124
WLM_CMD_E0	../env/NDK.h	/^    WLM_CMD_E0=0,				\/**<关闭回显*\/$/;"	e	enum:__anon41
WLM_CMD_E0	../inc/NDK-bak.h	/^    WLM_CMD_E0=0,					\/**<echo off*\/$/;"	e	enum:__anon124
WLM_CMD_END	../env/NDK.h	/^    WLM_CMD_END,          		\/**<命令结束，如果新增命令都放这之前位置*\/$/;"	e	enum:__anon41
WLM_CMD_END	../inc/NDK-bak.h	/^    WLM_CMD_END,          \/**<end of command, additional new commands shall be placed before it*\/$/;"	e	enum:__anon124
WLM_CMD_PUBLIC	../env/NDK.h	/^    WLM_CMD_PUBLIC=255$/;"	e	enum:__anon41
WLM_CMD_PUBLIC	../inc/NDK-bak.h	/^    WLM_CMD_PUBLIC=255$/;"	e	enum:__anon124
WLM_CMD_UNDEFINE	../env/NDK.h	/^    WLM_CMD_UNDEFINE=1024,		\/**<列表中未定义*\/$/;"	e	enum:__anon41
WLM_CMD_UNDEFINE	../inc/NDK-bak.h	/^    WLM_CMD_UNDEFINE=1024,		\/**<undefined in list*\/$/;"	e	enum:__anon124
WLM_INFO_CCID	../env/NDK.h	/^    WLM_INFO_CCID=0,					\/**<无线CCID枚举*\/$/;"	e	enum:__anon43
WLM_INFO_IMEI	../env/NDK.h	/^    WLM_INFO_IMEI=2,		\/**<无线IMEI枚举*\/$/;"	e	enum:__anon43
WLM_INFO_IMSI	../env/NDK.h	/^    WLM_INFO_IMSI=1,		\/**<无线IMSI枚举*\/$/;"	e	enum:__anon43
WLM_INFO_UNDEFINE	../env/NDK.h	/^    WLM_INFO_UNDEFINE=1024,	\/**<未定义返回*\/$/;"	e	enum:__anon43
WLM_STATUS_CONNECT	../env/NDK.h	/^    WLM_STATUS_CONNECT=1,	\/**<连接串*\/$/;"	e	enum:__anon42
WLM_STATUS_CONNECT	../inc/NDK-bak.h	/^    WLM_STATUS_CONNECT=1,	\/**<connection string*\/$/;"	e	enum:__anon125
WLM_STATUS_ERROR	../env/NDK.h	/^    WLM_STATUS_ERROR=-1,			\/**<错误*\/$/;"	e	enum:__anon42
WLM_STATUS_ERROR	../inc/NDK-bak.h	/^    WLM_STATUS_ERROR=-1,			\/**<error*\/$/;"	e	enum:__anon125
WLM_STATUS_NO_CARRIER	../env/NDK.h	/^    WLM_STATUS_NO_CARRIER=3,\/**<无载波*\/$/;"	e	enum:__anon42
WLM_STATUS_NO_CARRIER	../inc/NDK-bak.h	/^    WLM_STATUS_NO_CARRIER=3,\/**<no carrier*\/$/;"	e	enum:__anon125
WLM_STATUS_OK	../env/NDK.h	/^    WLM_STATUS_OK=0,				\/**<成功*\/$/;"	e	enum:__anon42
WLM_STATUS_OK	../inc/NDK-bak.h	/^    WLM_STATUS_OK=0,				\/**<succeeded*\/$/;"	e	enum:__anon125
WLM_STATUS_RET_ERROR	../env/NDK.h	/^    WLM_STATUS_RET_ERROR=-114,		\/**<返回出错*\/$/;"	e	enum:__anon42
WLM_STATUS_RET_ERROR	../inc/NDK-bak.h	/^    WLM_STATUS_RET_ERROR=-114,	\/**<error in return*\/$/;"	e	enum:__anon125
WLM_STATUS_RING	../env/NDK.h	/^    WLM_STATUS_RING=2,		\/**<RING串*\/$/;"	e	enum:__anon42
WLM_STATUS_RING	../inc/NDK-bak.h	/^    WLM_STATUS_RING=2,		\/**<RING string*\/$/;"	e	enum:__anon125
WLM_STATUS_UNTYPED	../env/NDK.h	/^    WLM_STATUS_UNTYPED=4,	\/**<未定义返回*\/$/;"	e	enum:__anon42
WLM_STATUS_UNTYPED	../inc/NDK-bak.h	/^    WLM_STATUS_UNTYPED=4,	\/**<return not defined*\/$/;"	e	enum:__anon125
WLS	../inc/NDK-bak.h	/^    WLS,			\/**<wireless*\/$/;"	e	enum:__anon134
WPDEBUG	../inc/debug.h	14;"	d
WriteDownloadCommand	../inc/Pri_DownloadTool.h	/^void WriteDownloadCommand(char cCmd);$/;"	p	signature:(char cCmd)
WriteDownloadCommand	../src/Pri_DownloadTool.c	/^void WriteDownloadCommand(char cCmd)$/;"	f	signature:(char cCmd)
WritePortWithRepeat	../src/Pri_DownloadTool.c	/^int WritePortWithRepeat(int aux,int len,char *pbuf)$/;"	f	signature:(int aux,int len,char *pbuf)
XORDATA	../inc/tr31_format.h	13;"	d
YES	../libapi/ltool.h	/^	YES  = '1'$/;"	e	enum:__anon178
YESORNO	../libapi/ltool.h	/^}YESORNO;$/;"	t	typeref:enum:__anon178
ZERO	../inc/PriKeyDownload.h	40;"	d
ZMK	../inc/PriKeyDownload.h	37;"	d
_	../inc/intl.h	30;"	d
_	../inc/intl.h	37;"	d
_APIINC_H_	../inc/apiinc.h	9;"	d
_APPINC_H_	../inc/appinc.h	10;"	d
_DEBUG_H_	../inc/debug.h	9;"	d
_FCHARFOR	../inc/PriKeyDownload.h	143;"	d
_FCHARRET	../inc/PriKeyDownload.h	144;"	d
_LCHARFOR	../inc/PriKeyDownload.h	141;"	d
_LCHARRET	../inc/PriKeyDownload.h	142;"	d
_LIBAPIINC_H_	../libapi/libapiinc.h	9;"	d
_LPOSCARD_H	../libapi/lposcard.h	12;"	d
_LTOOLS_H_	../libapi/ltool.h	2;"	d
_LUI_H_	../libapi/lui.h	2;"	d
_NCHARFOR	../inc/PriKeyDownload.h	133;"	d
_NCHARRET	../inc/PriKeyDownload.h	134;"	d
_NEWENQRET	../inc/PriKeyDownload.h	149;"	d
_NN_H_	../inc/emvnn.h	9;"	d
_OPER_H_	../inc/oper.h	10;"	d
_PCHARFOR	../inc/PriKeyDownload.h	131;"	d
_PCHARRET	../inc/PriKeyDownload.h	132;"	d
_POSDEF_H_	../inc/posdef.h	2;"	d
_RCHARFOR	../inc/PriKeyDownload.h	135;"	d
_RCHARRET	../inc/PriKeyDownload.h	136;"	d
_RSA_H_	../inc/emvrsa.h	2;"	d
_SCHARFOR	../inc/PriKeyDownload.h	137;"	d
_SCHARRET	../inc/PriKeyDownload.h	138;"	d
_TCHARFOR	../inc/PriKeyDownload.h	129;"	d
_TCHARRET	../inc/PriKeyDownload.h	130;"	d
_TIMEFOR	../inc/PriKeyDownload.h	145;"	d
_TIMERET	../inc/PriKeyDownload.h	146;"	d
_TR31_FORMAT_H_	../inc/tr31_format.h	2;"	d
__DownLoadWANG_H__	../inc/Pri_DownloadTool.h	2;"	d
__DownLoad_H__	../inc/PriKeyDownload.h	3;"	d
__INTL_H__	../inc/intl.h	26;"	d
__NDKAPI__H	../env/NDK.h	15;"	d
__NDKAPI__H	../inc/NDK-bak.h	15;"	d
__POWERINFO	../env/NDK.h	/^typedef struct __POWERINFO {$/;"	s
__POWERINFO::unBattryPercent	../env/NDK.h	/^    uchar unBattryPercent;\/*电池电量百分比（插电源时电压百分比为0，0xff表示未知）*\/$/;"	m	struct:__POWERINFO	access:public
__POWERINFO::unIsCharging	../env/NDK.h	/^    uchar unIsCharging;     \/*是否在充电(0表示不在充电，1表示充电中,0xff表示未知) *\/$/;"	m	struct:__POWERINFO	access:public
__POWERINFO::unPowerType	../env/NDK.h	/^    int unPowerType;  \/*电源类型$/;"	m	struct:__POWERINFO	access:public
__anon103::nFontByte	../inc/NDK-bak.h	/^	int nFontByte;					   \/**<the number of bytes of desired character occupies in font library*\/$/;"	m	struct:__anon103	access:public
__anon103::nOffset	../inc/NDK-bak.h	/^	int nOffset;						\/**<the offset of desired character in font library*\/$/;"	m	struct:__anon103	access:public
__anon104::func	../inc/NDK-bak.h	/^	int  (*func)(char *, ST_PRN_RECMSG *);	\/**<function that obtains offset address and number of bytes occupied*\/$/;"	m	struct:__anon104	access:public
__anon104::h	../inc/NDK-bak.h	/^	int  h;							\/**<height of font displayed*\/$/;"	m	struct:__anon104	access:public
__anon104::nDirection	../inc/NDK-bak.h	/^	int  nDirection;   				\/**<0: horizontal font; 1: vertical font*\/$/;"	m	struct:__anon104	access:public
__anon104::nIsHZ	../inc/NDK-bak.h	/^	int  nIsHZ;                     \/**<is the font library registered a Chinese font lib or ASCII character lib. 1: HZ  0: ZM*\/$/;"	m	struct:__anon104	access:public
__anon104::nNum	../inc/NDK-bak.h	/^	int  nNum;				    	\/**<Register No, support 0~7 register No.*\/$/;"	m	struct:__anon104	access:public
__anon104::pszName	../inc/NDK-bak.h	/^	char *pszName;	    			\/**<font library name or its path*\/$/;"	m	struct:__anon104	access:public
__anon104::w	../inc/NDK-bak.h	/^	int  w;							\/**<width of font displayed*\/$/;"	m	struct:__anon104	access:public
__anon108::bits	../inc/NDK-bak.h	/^    ushort bits;       							\/**< modulus in bits *\/$/;"	m	struct:__anon108	access:public
__anon108::coefficient	../inc/NDK-bak.h	/^    uchar coefficient[MAX_RSA_PRIME_LEN+1];  	 	\/**< division value of prime number and prime number *\/$/;"	m	struct:__anon108	access:public
__anon108::exponent	../inc/NDK-bak.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];     	\/**< private key exponent *\/$/;"	m	struct:__anon108	access:public
__anon108::modulus	../inc/NDK-bak.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];      	\/**<modulus length *\/$/;"	m	struct:__anon108	access:public
__anon108::prime	../inc/NDK-bak.h	/^    uchar prime[2][MAX_RSA_PRIME_LEN+1];      	\/**< pq prime number *\/$/;"	m	struct:__anon108	access:public
__anon108::primeExponent	../inc/NDK-bak.h	/^    uchar primeExponent[2][MAX_RSA_PRIME_LEN+1]; 	\/**< division value of prime number and exponent *\/$/;"	m	struct:__anon108	access:public
__anon108::publicExponent	../inc/NDK-bak.h	/^	uchar publicExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< public key exponent *\/$/;"	m	struct:__anon108	access:public
__anon109::bits	../inc/NDK-bak.h	/^    ushort bits;                    			\/**< modulus in bits *\/$/;"	m	struct:__anon109	access:public
__anon109::exponent	../inc/NDK-bak.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];		\/**< exponent *\/$/;"	m	struct:__anon109	access:public
__anon109::modulus	../inc/NDK-bak.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];  		\/**< modulus length *\/$/;"	m	struct:__anon109	access:public
__anon118::format	../inc/NDK-bak.h	/^	unsigned int format;		\/**< Extend key installation package format, currently only support SEC_KEYBLOCK_FMT_TR31 TR - 31 format*\/$/;"	m	struct:__anon118	access:public
__anon118::len	../inc/NDK-bak.h	/^	unsigned int len;			\/**< Key installation package data (pblock) length*\/$/;"	m	struct:__anon118	access:public
__anon118::pblock	../inc/NDK-bak.h	/^	char *pblock;				\/**< The key data pointer*\/$/;"	m	struct:__anon118	access:public
__anon119::nDstKeyLen	../inc/NDK-bak.h	/^    int 	nDstKeyLen;			\/**< length of destination key:8, 16, 24 *\/$/;"	m	struct:__anon119	access:public
__anon119::sDstKeyValue	../inc/NDK-bak.h	/^    uchar 	sDstKeyValue[24];	\/**< content to write to key *\/$/;"	m	struct:__anon119	access:public
__anon119::ucDstKeyIdx	../inc/NDK-bak.h	/^    uchar 	ucDstKeyIdx;		\/**< index of destination key *\/$/;"	m	struct:__anon119	access:public
__anon119::ucDstKeyType	../inc/NDK-bak.h	/^    uchar 	ucDstKeyType; 		\/**< type of destination key, refer to KEY_TYPE *\/$/;"	m	struct:__anon119	access:public
__anon119::ucScrKeyIdx	../inc/NDK-bak.h	/^    uchar 	ucScrKeyIdx;		\/**< index of source key that diffused this key; typically index starts from 1; if this variable equals 0, then this key is written in plaintext *\/$/;"	m	struct:__anon119	access:public
__anon119::ucScrKeyType	../inc/NDK-bak.h	/^    uchar 	ucScrKeyType; 		\/**< type of source key that diffused this key, refer to KEY_TYPE, it shall not be lower than key level ucDstKeyType is at*\/$/;"	m	struct:__anon119	access:public
__anon120::nCheckMode	../inc/NDK-bak.h	/^    int 	nCheckMode; 		\/**< check mode *\/$/;"	m	struct:__anon120	access:public
__anon120::nLen	../inc/NDK-bak.h	/^    int 	nLen;				\/**< check data area length *\/$/;"	m	struct:__anon120	access:public
__anon120::sCheckBuf	../inc/NDK-bak.h	/^    uchar 	sCheckBuf[128];		\/**< check data buffer *\/$/;"	m	struct:__anon120	access:public
__anon121::sExp	../inc/NDK-bak.h	/^	uchar	sExp[4];       				\/**< modulus for public key for encryption; big-endian, fill in with 0 if vacancy*\/$/;"	m	struct:__anon121	access:public
__anon121::sIccRandom	../inc/NDK-bak.h	/^	uchar	sIccRandom[8];   			\/**< random number obtained from card  *\/$/;"	m	struct:__anon121	access:public
__anon121::sMod	../inc/NDK-bak.h	/^	uchar	sMod[MAX_RSA_MODULUS_LEN];  \/**< modulus for public key for encryption; big-endian, fill in with 0 if vacancy*\/$/;"	m	struct:__anon121	access:public
__anon121::ucIccRandomLen	../inc/NDK-bak.h	/^	uchar	ucIccRandomLen;   			\/**< length of random number obtained from card  *\/$/;"	m	struct:__anon121	access:public
__anon121::unModlen	../inc/NDK-bak.h	/^	uint	unModlen;					\/**< length of modulus for public encrytion key  *\/$/;"	m	struct:__anon121	access:public
__anon122::reverse	../inc/NDK-bak.h	/^    uchar reverse[4];							\/**< Swallow the 4 bytes, used in the key store*\/$/;"	m	struct:__anon122	access:public
__anon122::sExponent	../inc/NDK-bak.h	/^    uchar sExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< exponent *\/$/;"	m	struct:__anon122	access:public
__anon122::sModulus	../inc/NDK-bak.h	/^    uchar sModulus[MAX_RSA_MODULUS_LEN+1];  	\/**< modulus *\/$/;"	m	struct:__anon122	access:public
__anon122::usBits	../inc/NDK-bak.h	/^    ushort usBits;                    		\/**< RSA key, number of bits *\/$/;"	m	struct:__anon122	access:public
__anon127::ModemDial	../inc/NDK-bak.h	/^    int (*ModemDial)(void);\/**<fucntion Dial*\/$/;"	m	struct:__anon127	access:public
__anon127::PPPIntervalTimeOut	../inc/NDK-bak.h	/^    unsigned int PPPIntervalTimeOut; \/**<time interval of sending data package of long-polling maintenance, <if it is 30S, no maintenance will be done to long-polling*\/$/;"	m	struct:__anon127	access:public
__anon127::nDevType	../inc/NDK-bak.h	/^    int nDevType;			\/**<type, to tell if it is a wireless MODEM or wired MODEM￡?0 ¨C wireless, 1 - wired*\/$/;"	m	struct:__anon127	access:public
__anon127::nMinSQVal	../inc/NDK-bak.h	/^    unsigned char nMinSQVal;	\/**<minimum signal value allowed during initialization*\/$/;"	m	struct:__anon127	access:public
__anon127::nPPPFlag	../inc/NDK-bak.h	/^    unsigned int nPPPFlag;	\/**<flag that indicates if long-polling maintenance is supported; assign proper macro definition if necessary *\/$/;"	m	struct:__anon127	access:public
__anon127::nPPPHostIP	../inc/NDK-bak.h	/^    char nPPPHostIP[20];		\/**<host IP that long-polling requires to PIN*\/$/;"	m	struct:__anon127	access:public
__anon127::szApn	../inc/NDK-bak.h	/^    char szApn[64];			\/**<APN setting*\/$/;"	m	struct:__anon127	access:public
__anon127::szDailNum	../inc/NDK-bak.h	/^    char szDailNum[32];		\/**<dial number*\/$/;"	m	struct:__anon127	access:public
__anon127::szPin	../inc/NDK-bak.h	/^    char szPin[31];				\/**<SIM card PIN code*\/$/;"	m	struct:__anon127	access:public
__anon146::unFreeSpace	../inc/NDK-bak.h	/^	uint unFreeSpace;	\/**<Can use the space size*\/$/;"	m	struct:__anon146	access:public
__anon146::unTotalSpace	../inc/NDK-bak.h	/^	uint unTotalSpace;	\/**<The total size*\/$/;"	m	struct:__anon146	access:public
__anon149::emKeyType	../inc/NDK-bak.h	/^    EM_WIFI_KEY_TYPE emKeyType; \/**<The router's password format*\/$/;"	m	struct:__anon149	access:public
__anon149::emSecMode	../inc/NDK-bak.h	/^    EM_WIFI_NET_SEC emSecMode;  \/**<The router's security encryption mode*\/$/;"	m	struct:__anon149	access:public
__anon149::psEthDnsPrimary	../inc/NDK-bak.h	/^    char *psEthDnsPrimary;      \/**<Network first DNS address*\/$/;"	m	struct:__anon149	access:public
__anon149::psEthDnsSecondary	../inc/NDK-bak.h	/^    char *psEthDnsSecondary;    \/**<Network times DNS address*\/$/;"	m	struct:__anon149	access:public
__anon149::psEthGateway	../inc/NDK-bak.h	/^    char *psEthGateway;         \/**<Network gateway address*\/$/;"	m	struct:__anon149	access:public
__anon149::psEthIp	../inc/NDK-bak.h	/^    char *psEthIp;              \/**<The terminal IP address*\/$/;"	m	struct:__anon149	access:public
__anon149::psEthNetmask	../inc/NDK-bak.h	/^    char *psEthNetmask;         \/**<Netmask address*\/$/;"	m	struct:__anon149	access:public
__anon149::pszKey	../inc/NDK-bak.h	/^    char *pszKey;               \/**<The router's password*\/$/;"	m	struct:__anon149	access:public
__anon149::ucIfDHCP	../inc/NDK-bak.h	/^    uchar ucIfDHCP;             \/**<enable DHCP or not*\/$/;"	m	struct:__anon149	access:public
__anon151::nFrequency	../inc/NDK-bak.h	/^	int nFrequency;                             \/**<The frequency of the router*\/$/;"	m	struct:__anon151	access:public
__anon151::sEssid	../inc/NDK-bak.h	/^	char sEssid[WIFI_IW_ESSID_MAX_SIZE + 1];    \/**<Router Name *\/$/;"	m	struct:__anon151	access:public
__anon151::sKey	../inc/NDK-bak.h	/^	char sKey[WIFI_IW_ENCODING_TOKEN_MAX + 1];  \/**<The router's password*\/$/;"	m	struct:__anon151	access:public
__anon151::sKeyModeStr	../inc/NDK-bak.h	/^	char sKeyModeStr[128];                      \/**<The router's security encryption mode*\/$/;"	m	struct:__anon151	access:public
__anon151::sSignal	../inc/NDK-bak.h	/^	char sSignal[16];                           \/**<The router signal values*\/$/;"	m	struct:__anon151	access:public
__anon152::cDeleFlag	../inc/oper.h	/^	char cDeleFlag;$/;"	m	struct:__anon152	access:public
__anon152::cOperPwdLen	../inc/oper.h	/^	char cOperPwdLen;$/;"	m	struct:__anon152	access:public
__anon152::cOperRole	../inc/oper.h	/^	char cOperRole;$/;"	m	struct:__anon152	access:public
__anon152::szOperNo	../inc/oper.h	/^	char szOperNo[OPERCODELEN+1];$/;"	m	struct:__anon152	access:public
__anon152::szPasswd	../inc/oper.h	/^	char szPasswd[12+1];$/;"	m	struct:__anon152	access:public
__anon158::parameterName	../inc/parsecfg.h	/^	char *parameterName;$/;"	m	struct:__anon158	access:public
__anon158::type	../inc/parsecfg.h	/^	cfgValueType type;$/;"	m	struct:__anon158	access:public
__anon158::value	../inc/parsecfg.h	/^	void *value;$/;"	m	struct:__anon158	access:public
__anon159::modify_flag	../inc/parsecfg.h	/^	int modify_flag;$/;"	m	struct:__anon159	access:public
__anon159::user	../inc/parsecfg.h	/^	cfgStruct *user;$/;"	m	struct:__anon159	access:public
__anon161::exp_bits	../inc/PriKeyDownload.h	/^    unsigned int exp_bits;                    \/*指数bit位数 *\/$/;"	m	struct:__anon161	access:public
__anon161::exponent	../inc/PriKeyDownload.h	/^    unsigned char exponent[MAX_RSA_MODULUS_LEN];      \/* 指数 *\/$/;"	m	struct:__anon161	access:public
__anon161::info_reserved	../inc/PriKeyDownload.h	/^    unsigned char info_reserved[16];$/;"	m	struct:__anon161	access:public
__anon161::mod_bits	../inc/PriKeyDownload.h	/^    unsigned int mod_bits;                    \/*模长bit位数 *\/$/;"	m	struct:__anon161	access:public
__anon161::modulus	../inc/PriKeyDownload.h	/^    unsigned char modulus[MAX_RSA_MODULUS_LEN];      \/*模 *\/$/;"	m	struct:__anon161	access:public
__anon161::owner	../inc/PriKeyDownload.h	/^    unsigned char owner[32];            \/*私钥所有方*\/$/;"	m	struct:__anon161	access:public
__anon161::ver	../inc/PriKeyDownload.h	/^    unsigned char ver[16];               \/*私钥版本*\/$/;"	m	struct:__anon161	access:public
__anon165::battery_adapter	../inc/theme.h	/^	image_t battery_adapter;$/;"	m	struct:__anon165	access:public
__anon165::battery_charge	../inc/theme.h	/^	image_t battery_charge;$/;"	m	struct:__anon165	access:public
__anon165::battery_empty	../inc/theme.h	/^	image_t battery_empty;$/;"	m	struct:__anon165	access:public
__anon165::battery_green	../inc/theme.h	/^	image_t battery_green;$/;"	m	struct:__anon165	access:public
__anon165::battery_red	../inc/theme.h	/^	image_t battery_red;$/;"	m	struct:__anon165	access:public
__anon165::btn	../inc/theme.h	/^    image_t btn[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::chk_off	../inc/theme.h	/^    image_t chk_off[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::chk_on	../inc/theme.h	/^    image_t chk_on[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::combobox	../inc/theme.h	/^	image_t combobox;$/;"	m	struct:__anon165	access:public
__anon165::default_bg	../inc/theme.h	/^    color_t default_bg;$/;"	m	struct:__anon165	access:public
__anon165::default_fg	../inc/theme.h	/^    color_t default_fg;$/;"	m	struct:__anon165	access:public
__anon165::disable_fg	../inc/theme.h	/^    color_t disable_fg;$/;"	m	struct:__anon165	access:public
__anon165::editbox	../inc/theme.h	/^	image_t editbox;$/;"	m	struct:__anon165	access:public
__anon165::lst	../inc/theme.h	/^    image_t lst[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::messagebox	../inc/theme.h	/^	image_t messagebox;$/;"	m	struct:__anon165	access:public
__anon165::nettype	../inc/theme.h	/^	image_t nettype[3];$/;"	m	struct:__anon165	access:public
__anon165::progress_bar	../inc/theme.h	/^	image_t progress_bar[2];$/;"	m	struct:__anon165	access:public
__anon165::rdi_off	../inc/theme.h	/^    image_t rdi_off[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::rdi_on	../inc/theme.h	/^    image_t rdi_on[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::scrollbar_bg_h	../inc/theme.h	/^	image_t scrollbar_bg_h;$/;"	m	struct:__anon165	access:public
__anon165::scrollbar_bg_v	../inc/theme.h	/^	image_t scrollbar_bg_v;$/;"	m	struct:__anon165	access:public
__anon165::scrollbar_h	../inc/theme.h	/^	image_t scrollbar_h;$/;"	m	struct:__anon165	access:public
__anon165::scrollbar_v	../inc/theme.h	/^	image_t scrollbar_v;$/;"	m	struct:__anon165	access:public
__anon165::text_def	../inc/theme.h	/^	image_t text_def;$/;"	m	struct:__anon165	access:public
__anon165::tit_bar	../inc/theme.h	/^    image_t tit_bar;$/;"	m	struct:__anon165	access:public
__anon165::tit_cls	../inc/theme.h	/^    image_t tit_cls[NUM_STA];$/;"	m	struct:__anon165	access:public
__anon165::version	../inc/theme.h	/^    char version[20];$/;"	m	struct:__anon165	access:public
__anon165::wifisignal	../inc/theme.h	/^	image_t wifisignal[4];$/;"	m	struct:__anon165	access:public
__anon165::wlsignal	../inc/theme.h	/^	image_t wlsignal[6];$/;"	m	struct:__anon165	access:public
__anon166::algorithm	../inc/tr31_format.h	/^        uint8_t algorithm;      \/* The approved algorithm to be used by the protected key *\/$/;"	m	struct:__anon166	access:public
__anon166::export	../inc/tr31_format.h	/^        uint8_t export;         \/* Defines the protected key's exportablility *\/$/;"	m	struct:__anon166	access:public
__anon166::fid	../inc/tr31_format.h	/^		uint8_t fid;			\/*key field*\/$/;"	m	struct:__anon166	access:public
__anon166::gid	../inc/tr31_format.h	/^		uint8_t gid[3];			\/*Group ID, ASCII Numeric Digits*\/$/;"	m	struct:__anon166	access:public
__anon166::ksn	../inc/tr31_format.h	/^		uint8_t ksn[20];		\/*ASCII-encoded KSN for dukpt*\/$/;"	m	struct:__anon166	access:public
__anon166::length	../inc/tr31_format.h	/^        uint8_t length[4];      \/* Key Block Length, including Header + DATA + MAC *\/$/;"	m	struct:__anon166	access:public
__anon166::mode	../inc/tr31_format.h	/^        uint8_t mode;           \/* the operation the protected key can perform *\/$/;"	m	struct:__anon166	access:public
__anon166::opt2_id	../inc/tr31_format.h	/^		uint8_t opt2_id[2];		\/* The second optional block, for DUKPT KSN value*\/$/;"	m	struct:__anon166	access:public
__anon166::opt2_len	../inc/tr31_format.h	/^		uint8_t opt2_len[2];	\/*optional block length*\/$/;"	m	struct:__anon166	access:public
__anon166::opt_id	../inc/tr31_format.h	/^		uint8_t opt_id[2];      \/* The first optional block, for key index information*\/$/;"	m	struct:__anon166	access:public
__anon166::opt_len	../inc/tr31_format.h	/^		uint8_t opt_len[2];		\/*optional block length*\/$/;"	m	struct:__anon166	access:public
__anon166::option_nr	../inc/tr31_format.h	/^        uint8_t option_nr[2];   \/* Numbers of optional blocks *\/$/;"	m	struct:__anon166	access:public
__anon166::reserv	../inc/tr31_format.h	/^        uint8_t reserv[2];      \/* Reserved for future use *\/$/;"	m	struct:__anon166	access:public
__anon166::usage	../inc/tr31_format.h	/^        uint8_t usage[2];       \/* Key Usage *\/$/;"	m	struct:__anon166	access:public
__anon166::ver_id	../inc/tr31_format.h	/^        uint8_t ver_id;         \/* Key Block Version ID --- 'A'(0x41) *\/$/;"	m	struct:__anon166	access:public
__anon166::ver_num	../inc/tr31_format.h	/^        uint8_t ver_num[2];     \/* Key Version Number *\/$/;"	m	struct:__anon166	access:public
__anon167::algorithm	../inc/tr31_format.h	/^    uint8_t algorithm;      	\/* The approved algorithm to be used by the protected key *\/$/;"	m	struct:__anon167	access:public
__anon167::export	../inc/tr31_format.h	/^    uint8_t export;         	\/* Defines the protected key's exportablility *\/$/;"	m	struct:__anon167	access:public
__anon167::fid	../inc/tr31_format.h	/^	uint8_t fid;				\/* filed ID*\/$/;"	m	struct:__anon167	access:public
__anon167::gid	../inc/tr31_format.h	/^	uint8_t gid;				\/* group ID*\/$/;"	m	struct:__anon167	access:public
__anon167::key	../inc/tr31_format.h	/^	uint8_t *key;			\/*  key pointer *\/$/;"	m	struct:__anon167	access:public
__anon167::keylen	../inc/tr31_format.h	/^	uint16_t keylen;			\/* keylen*\/$/;"	m	struct:__anon167	access:public
__anon167::ksn	../inc/tr31_format.h	/^	uint8_t ksn[10];			\/* Key Serial Number *\/$/;"	m	struct:__anon167	access:public
__anon167::mode	../inc/tr31_format.h	/^    uint8_t mode;           	\/* the operation the protected key can perform *\/$/;"	m	struct:__anon167	access:public
__anon167::reserv	../inc/tr31_format.h	/^	uint8_t reserv[3];      	\/* Reserved for future use *\/$/;"	m	struct:__anon167	access:public
__anon167::usage	../inc/tr31_format.h	/^	uint8_t usage[2];       	\/* Key Usage *\/$/;"	m	struct:__anon167	access:public
__anon167::ver_num	../inc/tr31_format.h	/^    uint8_t ver_num[2];     	\/* Key Version Number *\/$/;"	m	struct:__anon167	access:public
__anon176::cAux	../libapi/lposcard.h	/^	char cAux; 		       	\/**<外接读卡器所接串口(内置不用)*\/$/;"	m	struct:__anon176	access:public
__anon176::cCardType	../libapi/lposcard.h	/^	char cCardType;			\/**<需要读取的卡片类型ENM_CARDTYPE*\/$/;"	m	struct:__anon176	access:public
__anon176::cDefaultType	../libapi/lposcard.h	/^	char cDefaultType;     	\/**<默认外接读卡器类型(双频:RFIDREADER_ZX,RFIDREADER_SH,单频:ENM_RFREADERTYPE,RFIDREADER_ZX暂不支持2.4G M1操作)*\/$/;"	m	struct:__anon176	access:public
__anon176::cFirst	../libapi/lposcard.h	/^	char cFirst;				\/**<2.4G优先轮询，0:M1卡优先，其他:CPU卡优先*\/$/;"	m	struct:__anon176	access:public
__anon176::cIs829SupportM1	../libapi/lposcard.h	/^	char cIs829SupportM1;	\/**<829模块是否支持M1卡0:不支持，其他:支持*\/$/;"	m	struct:__anon176	access:public
__anon176::cOperFlag	../libapi/lposcard.h	/^	char cOperFlag;        		\/**<EM_RF_INSIDE表示使用内置，EM_RF_OUTSIDE表示使用外置,EM_RF_INSIDE|EM_RF_OUTSIDE表示使用内外置*\/$/;"	m	struct:__anon176	access:public
__anon176::cUsedDoubleRF	../libapi/lposcard.h	/^	char cUsedDoubleRF;    	\/**<是否使用读卡器的双频寻卡模式0:否，1是(外接读卡器专用)	(备注：读卡器需支持)*\/		$/;"	m	struct:__anon176	access:public
__anon176::pszM1AID	../libapi/lposcard.h	/^	char *pszM1AID;			\/**<对2.4G读头有效m1卡的应用AID,该值为NULL时采用电信集团默认AID*\/$/;"	m	struct:__anon176	access:public
__anon177::unFlag	../libapi/lposcard.h	/^    uint    unFlag; 	         		\/**<刷卡输入方式 EM_CARDINPUTMODE *\/$/;"	m	struct:__anon177	access:public
__anon177::unFunctionKeyFlag	../libapi/lposcard.h	/^	uint    unFunctionKeyFlag;	\/**<是否支持功能键,1支持，0不支持*\/$/;"	m	struct:__anon177	access:public
__anon177::unInputMaxLen	../libapi/lposcard.h	/^	uint    unInputMaxLen;	\/**<手工输入最大长度*\/$/;"	m	struct:__anon177	access:public
__anon177::unInputMinLen	../libapi/lposcard.h	/^    uint    unInputMinLen;		\/**<手工输入最小长度*\/$/;"	m	struct:__anon177	access:public
__anon177::unMaintk	../libapi/lposcard.h	/^    uint    unMaintk;			\/**<优先磁道 EM_MAINTK *\/$/;"	m	struct:__anon177	access:public
__anon177::unSleepTime	../libapi/lposcard.h	/^    uint    unSleepTime;		\/**<需要休眠的时间,单位s,为0的表示不休眠*\/$/;"	m	struct:__anon177	access:public
__anon177::unTimeout	../libapi/lposcard.h	/^    uint    unTimeout;			\/**<刷卡超时,单位s*\/$/;"	m	struct:__anon177	access:public
__anon190::action	../libapi/lui.h	/^	int	(*action)(void);				\/**<项目执行函数的指针*\/$/;"	m	struct:__anon190	access:public
__anon190::szContent	../libapi/lui.h	/^	char szContent[16];				\/**<项目内容         *\/$/;"	m	struct:__anon190	access:public
__anon191::szText	../libapi/lui.h	/^	char szText[21][16+1];				\/**< 菜单提示信息,最大菜单数21*\/$/;"	m	struct:__anon191	access:public
__anon191::ucDefaultFlag	../libapi/lui.h	/^	uchar ucDefaultFlag;				\/**<是否默认1是，0否*\/$/;"	m	struct:__anon191	access:public
__anon191::ucFlag	../libapi/lui.h	/^	uchar ucFlag;						\/**<菜单从0开始还是1开始*\/$/;"	m	struct:__anon191	access:public
__anon191::ucIndex	../libapi/lui.h	/^	uchar ucIndex;						\/**<菜单索引*\/$/;"	m	struct:__anon191	access:public
__anon191::ucSum	../libapi/lui.h	/^	uchar ucSum;						\/**<菜单总数*\/$/;"	m	struct:__anon191	access:public
__anon192::emMenu	../libapi/lui.h	/^	EM_MENU_TITLE emMenu;						\/**<EM_MENU_TITLE*\/$/;"	m	struct:__anon192	access:public
__anon192::szPageDown	../libapi/lui.h	/^	char szPageDown[4+1];						\/**<翻页标题提示信息*\/$/;"	m	struct:__anon192	access:public
__anon192::szPageUp	../libapi/lui.h	/^	char szPageUp[4+1];						\/**<翻页标题提示信息*\/$/;"	m	struct:__anon192	access:public
__anon19::nFontByte	../env/NDK.h	/^	int nFontByte;					   \/**<需要获取的字在字库中占字节数*\/$/;"	m	struct:__anon19	access:public
__anon19::nOffset	../env/NDK.h	/^	int nOffset;						\/**<需要获取的字在字库中的依移量*\/$/;"	m	struct:__anon19	access:public
__anon20::func	../env/NDK.h	/^	int  (*func)(char *, ST_PRN_RECMSG *);	\/**<获取依移地址和占用字节数的函数*\/$/;"	m	struct:__anon20	access:public
__anon20::h	../env/NDK.h	/^	int  h;							\/**<字体显示的高度*\/$/;"	m	struct:__anon20	access:public
__anon20::nDirection	../env/NDK.h	/^	int  nDirection;   				\/**<0:横向字体； 1:纵向字体*\/$/;"	m	struct:__anon20	access:public
__anon20::nIsHZ	../env/NDK.h	/^	int  nIsHZ;                     \/**<注册的字库是汉字字库还是ASCII字库，1:HZ  0:ZM*\/$/;"	m	struct:__anon20	access:public
__anon20::nNum	../env/NDK.h	/^	int  nNum;				    	\/**<注册号,支持0~7注册号*\/$/;"	m	struct:__anon20	access:public
__anon20::pszName	../env/NDK.h	/^	char *pszName;	    			\/**<字库名或字库所在路径*\/$/;"	m	struct:__anon20	access:public
__anon20::w	../env/NDK.h	/^	int  w;							\/**<字体显示的宽度*\/$/;"	m	struct:__anon20	access:public
__anon25::bits	../env/NDK.h	/^    ushort bits;       							\/**< 模位数 *\/$/;"	m	struct:__anon25	access:public
__anon25::coefficient	../env/NDK.h	/^    uchar coefficient[MAX_RSA_PRIME_LEN+1];  	 	\/**< 素数与素数除法值 *\/$/;"	m	struct:__anon25	access:public
__anon25::exponent	../env/NDK.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];     	\/**< 私钥指数 *\/$/;"	m	struct:__anon25	access:public
__anon25::modulus	../env/NDK.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];      	\/**< 模 *\/$/;"	m	struct:__anon25	access:public
__anon25::prime	../env/NDK.h	/^    uchar prime[2][MAX_RSA_PRIME_LEN+1];      	\/**< pq素数 *\/$/;"	m	struct:__anon25	access:public
__anon25::primeExponent	../env/NDK.h	/^    uchar primeExponent[2][MAX_RSA_PRIME_LEN+1]; 	\/**< 素数与指数除法值 *\/$/;"	m	struct:__anon25	access:public
__anon25::publicExponent	../env/NDK.h	/^	uchar publicExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< 公钥指数 *\/$/;"	m	struct:__anon25	access:public
__anon26::bits	../env/NDK.h	/^    ushort bits;                    			\/**< 模位数 *\/$/;"	m	struct:__anon26	access:public
__anon26::exponent	../env/NDK.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];		\/**< 指数 *\/$/;"	m	struct:__anon26	access:public
__anon26::modulus	../env/NDK.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];  		\/**< 模 *\/$/;"	m	struct:__anon26	access:public
__anon35::format	../env/NDK.h	/^	unsigned int format;		\/**< 扩展密钥安装包格式,目前仅支持TR-31格式 SEC_KEYBLOCK_FMT_TR31*\/$/;"	m	struct:__anon35	access:public
__anon35::len	../env/NDK.h	/^	unsigned int len;			\/**< 密钥安装包数据(pblock)长度*\/$/;"	m	struct:__anon35	access:public
__anon35::pblock	../env/NDK.h	/^	char *pblock;				\/**< 密钥数据指针*\/$/;"	m	struct:__anon35	access:public
__anon36::nDstKeyLen	../env/NDK.h	/^    int 	nDstKeyLen;			\/**< 目的密钥长度,8,16,24,或12=sizeof(ST_EXTEND_KEYBLOCK) *\/$/;"	m	struct:__anon36	access:public
__anon36::sDstKeyValue	../env/NDK.h	/^    uchar 	sDstKeyValue[24];	\/**< 写入密钥的内容，当密钥长度等于12时， 当做ST_EXTEND_KEYBLOCK结构使用*\/$/;"	m	struct:__anon36	access:public
__anon36::ucDstKeyIdx	../env/NDK.h	/^    uchar 	ucDstKeyIdx;		\/**< 目的密钥索引 *\/$/;"	m	struct:__anon36	access:public
__anon36::ucDstKeyType	../env/NDK.h	/^    uchar 	ucDstKeyType; 		\/**< 目的密钥的密钥类型，参考\\ref EM_SEC_KEY_TYPE "EM_SEC_KEY_TYPE" *\/$/;"	m	struct:__anon36	access:public
__anon36::ucScrKeyIdx	../env/NDK.h	/^    uchar 	ucScrKeyIdx;		\/**< 发散该密钥的源密钥索引,索引一般从1开始,如果该变量为0,则表示这个密钥的写入是明文形式 *\/$/;"	m	struct:__anon36	access:public
__anon36::ucScrKeyType	../env/NDK.h	/^    uchar 	ucScrKeyType; 		\/**< 发散该密钥的源密钥的密钥类型，参考\\ref EM_SEC_KEY_TYPE "EM_SEC_KEY_TYPE", 不得低于ucDstKeyType所在的密钥级别*\/$/;"	m	struct:__anon36	access:public
__anon37::nCheckMode	../env/NDK.h	/^    int 	nCheckMode; 		\/**< 校验模式 参考\\ref ST_SEC_KCV_INFO "ST_SEC_KCV_INFO"*\/$/;"	m	struct:__anon37	access:public
__anon37::nLen	../env/NDK.h	/^    int 	nLen;				\/**< 校验数据区长度 *\/$/;"	m	struct:__anon37	access:public
__anon37::sCheckBuf	../env/NDK.h	/^    uchar 	sCheckBuf[128];		\/**< 校验数据缓冲区 *\/$/;"	m	struct:__anon37	access:public
__anon38::sExp	../env/NDK.h	/^	uchar	sExp[4];       				\/**< 加密公钥指数,高字节在前,低字节在后,不足位前补0 *\/$/;"	m	struct:__anon38	access:public
__anon38::sIccRandom	../env/NDK.h	/^	uchar	sIccRandom[8];   			\/**< 从卡片取得的随机数  *\/$/;"	m	struct:__anon38	access:public
__anon38::sMod	../env/NDK.h	/^	uchar	sMod[MAX_RSA_MODULUS_LEN];  \/**< 加密公钥模数,高字节在前,低字节在后,不足位前补0 *\/$/;"	m	struct:__anon38	access:public
__anon38::ucIccRandomLen	../env/NDK.h	/^	uchar	ucIccRandomLen;   			\/**< 从卡片取得的随机数长  *\/$/;"	m	struct:__anon38	access:public
__anon38::unModlen	../env/NDK.h	/^	uint	unModlen;					\/**< 加密公钥模数长  *\/$/;"	m	struct:__anon38	access:public
__anon39::reverse	../env/NDK.h	/^    uchar reverse[4];							\/**< 补齐4字节，用于密钥存储*\/$/;"	m	struct:__anon39	access:public
__anon39::sExponent	../env/NDK.h	/^    uchar sExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< 指数 *\/$/;"	m	struct:__anon39	access:public
__anon39::sModulus	../env/NDK.h	/^    uchar sModulus[MAX_RSA_MODULUS_LEN+1];  	\/**< 模 *\/$/;"	m	struct:__anon39	access:public
__anon39::usBits	../env/NDK.h	/^    ushort usBits;                    			\/**< RSA密钥位数 *\/$/;"	m	struct:__anon39	access:public
__anon44::stMainStation	../env/NDK.h	/^	ST_STATION_INFO stMainStation;\/**<GPRS模块附着主基站*\/$/;"	m	struct:__anon44	access:public
__anon44::stNeighborStation	../env/NDK.h	/^	ST_STATION_INFO stNeighborStation[6];\/**<GPRS无线模块的临近基站*\/$/;"	m	struct:__anon44	access:public
__anon45::unBandClass	../env/NDK.h	/^	uint unBandClass;\/**<带宽类型*\/$/;"	m	struct:__anon45	access:public
__anon45::unBid	../env/NDK.h	/^	uint unBid;		\/**<系统识别码*\/$/;"	m	struct:__anon45	access:public
__anon45::unChannel	../env/NDK.h	/^	uint unChannel;		\/**<频道*\/$/;"	m	struct:__anon45	access:public
__anon45::unMCC	../env/NDK.h	/^	uint unMCC;		\/**<移动国家号*\/$/;"	m	struct:__anon45	access:public
__anon45::unMNC	../env/NDK.h	/^	uint unMNC;		\/**<移动网络号*\/$/;"	m	struct:__anon45	access:public
__anon45::unNid	../env/NDK.h	/^	uint unNid;		\/**<网络中的某一个小区*\/$/;"	m	struct:__anon45	access:public
__anon45::unSid	../env/NDK.h	/^	uint unSid;		\/**<网络识别码*\/$/;"	m	struct:__anon45	access:public
__anon46::CDMA_STATION	../env/NDK.h	/^	ST_CDMA_STATION_INFO CDMA_STATION;	\/**<CDMA基站*\/$/;"	m	union:__anon46	access:public
__anon46::GPRS_STATION	../env/NDK.h	/^	ST_GPRS_STATION_INFO GPRS_STATION;	\/**<GPRS基站*\/$/;"	m	union:__anon46	access:public
__anon48::ModuleStationInfo	../env/NDK.h	/^	MODULE_UNION_INFO ModuleStationInfo;\/**<模块基站信息*\/$/;"	m	struct:__anon48	access:public
__anon48::emModuleType	../env/NDK.h	/^	EM_MODULE_TYPE emModuleType;		\/**<模块类型*\/$/;"	m	struct:__anon48	access:public
__anon50::ModemDial	../env/NDK.h	/^    int (*ModemDial)(void);\/**<拨号函数*\/$/;"	m	struct:__anon50	access:public
__anon50::PPPIntervalTimeOut	../env/NDK.h	/^    unsigned int PPPIntervalTimeOut; \/**<维持长链接的数据包发送的时间间隔,<30S将不会进行长链接的维持*\/$/;"	m	struct:__anon50	access:public
__anon50::nDevType	../env/NDK.h	/^    int nDevType;			\/**<类型，区别是无线MODEM还是有线MODEM，0表示无线，1表示有线*\/$/;"	m	struct:__anon50	access:public
__anon50::nMinSQVal	../env/NDK.h	/^    unsigned char nMinSQVal;	\/**<初始化时，允许的最小的信号值*\/$/;"	m	struct:__anon50	access:public
__anon50::nPPPFlag	../env/NDK.h	/^    unsigned int nPPPFlag;	\/**<是否支持维持长连接标识，根据需要传入相对应的宏定义*\/$/;"	m	struct:__anon50	access:public
__anon50::nPPPHostIP	../env/NDK.h	/^    char nPPPHostIP[20];		\/**<维持长链接需要PIN的主机IP*\/$/;"	m	struct:__anon50	access:public
__anon50::szApn	../env/NDK.h	/^    char szApn[64];			\/**<APN设置*\/$/;"	m	struct:__anon50	access:public
__anon50::szDailNum	../env/NDK.h	/^    char szDailNum[32];		\/**<拨号号码,前面不带D*\/$/;"	m	struct:__anon50	access:public
__anon50::szPin	../env/NDK.h	/^    char szPin[31];				\/**<SIM卡PIN码*\/$/;"	m	struct:__anon50	access:public
__anon61::unFlickOff	../env/NDK.h	/^    uint unFlickOff;        \/\/闪烁持续灯灭时间，100MS为单位$/;"	m	struct:__anon61	access:public
__anon61::unFlickOn	../env/NDK.h	/^    uint unFlickOn;         \/\/闪烁持续灯亮时间，100MS为单位$/;"	m	struct:__anon61	access:public
__anon61::unRverse	../env/NDK.h	/^    uint unRverse[2];$/;"	m	struct:__anon61	access:public
__anon71::unFreeSpace	../env/NDK.h	/^	uint unFreeSpace;	\/**<可以用空间大小*\/$/;"	m	struct:__anon71	access:public
__anon71::unTotalSpace	../env/NDK.h	/^	uint unTotalSpace;	\/**<总空间大小*\/$/;"	m	struct:__anon71	access:public
__anon74::emKeyType	../env/NDK.h	/^    EM_WIFI_KEY_TYPE emKeyType; \/**<路由器的密码格式*\/$/;"	m	struct:__anon74	access:public
__anon74::emSecMode	../env/NDK.h	/^    EM_WIFI_NET_SEC emSecMode;  \/**<路由器的安全加密模式*\/$/;"	m	struct:__anon74	access:public
__anon74::psEthDnsPrimary	../env/NDK.h	/^    char *psEthDnsPrimary;      \/**<网络首DNS地址*\/$/;"	m	struct:__anon74	access:public
__anon74::psEthDnsSecondary	../env/NDK.h	/^    char *psEthDnsSecondary;    \/**<网络次DNS地址*\/$/;"	m	struct:__anon74	access:public
__anon74::psEthGateway	../env/NDK.h	/^    char *psEthGateway;         \/**<网络网关地址*\/$/;"	m	struct:__anon74	access:public
__anon74::psEthIp	../env/NDK.h	/^    char *psEthIp;              \/**<终端IP地址*\/$/;"	m	struct:__anon74	access:public
__anon74::psEthNetmask	../env/NDK.h	/^    char *psEthNetmask;         \/**<网络掩码地址*\/$/;"	m	struct:__anon74	access:public
__anon74::pszKey	../env/NDK.h	/^    char *pszKey;               \/**<路由器的密码*\/$/;"	m	struct:__anon74	access:public
__anon74::ucIfDHCP	../env/NDK.h	/^    uchar ucIfDHCP;             \/**<是否使用DHCP*\/$/;"	m	struct:__anon74	access:public
__anon76::nFrequency	../env/NDK.h	/^	int nFrequency;                             \/**<路由器的频率*\/$/;"	m	struct:__anon76	access:public
__anon76::sEssid	../env/NDK.h	/^	char sEssid[WIFI_IW_ESSID_MAX_SIZE + 1];    \/**<路由器名称*\/$/;"	m	struct:__anon76	access:public
__anon76::sKey	../env/NDK.h	/^	char sKey[WIFI_IW_ENCODING_TOKEN_MAX + 1];  \/**<路由器的密码*\/$/;"	m	struct:__anon76	access:public
__anon76::sKeyModeStr	../env/NDK.h	/^	char sKeyModeStr[128];                      \/**<路由器的安全加密模式*\/$/;"	m	struct:__anon76	access:public
__anon76::sSignal	../env/NDK.h	/^	char sSignal[16];                           \/**<路由器的信号值*\/$/;"	m	struct:__anon76	access:public
__anon80::bytes_per_pixel	../env/widget.h	/^	unsigned int bytes_per_pixel; \/**< 每个像素多少字节 *\/$/;"	m	struct:__anon80	access:public
__anon80::height	../env/widget.h	/^	unsigned int height; 			\/**< 图像高度（像素）*\/$/;"	m	struct:__anon80	access:public
__anon80::image_alpha	../env/widget.h	/^	void * image_alpha;		\/**< 图像alpha通道 *\/$/;"	m	struct:__anon80	access:public
__anon80::image_buf	../env/widget.h	/^	void * image_buf;		\/**< 图像色彩数据 *\/$/;"	m	struct:__anon80	access:public
__anon80::user	../env/widget.h	/^	int    user;			\/**< 图像被共享的次数 *\/$/;"	m	struct:__anon80	access:public
__anon80::width	../env/widget.h	/^	unsigned int width;  			\/**< 图像宽度（像素） *\/$/;"	m	struct:__anon80	access:public
__anon81::cDeleteFlag	../inc/key.h	/^	char cDeleteFlag;		\/*  '1'表示已删除*\/$/;"	m	struct:__anon81	access:public
__anon81::cType	../inc/key.h	/^	char cType;$/;"	m	struct:__anon81	access:public
__anon81::szCheckValue	../inc/key.h	/^	char szCheckValue[CHKVALUELEN+1];$/;"	m	struct:__anon81	access:public
__anon81::szKEK	../inc/key.h	/^	char szKEK[KEKINDEX+1];$/;"	m	struct:__anon81	access:public
__anon81::szKeyInfo	../inc/key.h	/^	char szKeyInfo[KEYINFOLEN+1];$/;"	m	struct:__anon81	access:public
__anon81::szShopId	../inc/key.h	/^	char szShopId[SHOPIDLEN+1];$/;"	m	struct:__anon81	access:public
__anon81::szTerminalId	../inc/key.h	/^	char szTerminalId[TERMINALIDLEN+1];$/;"	m	struct:__anon81	access:public
__anon82::szCheckValue	../inc/key.h	/^	char szCheckValue[CHKVALUELEN\/2];$/;"	m	struct:__anon82	access:public
__anon82::szKEK	../inc/key.h	/^	char szKEK[KEKINDEX\/2];$/;"	m	struct:__anon82	access:public
__anon82::szKeyInfo	../inc/key.h	/^	char szKeyInfo[KEYINFOLEN\/2];$/;"	m	struct:__anon82	access:public
__anon82::szShopId	../inc/key.h	/^	char szShopId[SHOPIDLEN];$/;"	m	struct:__anon82	access:public
__anon82::szTerminalId	../inc/key.h	/^	char szTerminalId[TERMINALIDLEN];$/;"	m	struct:__anon82	access:public
__anon83::cStatus	../inc/key.h	/^	char cStatus;$/;"	m	struct:__anon83	access:public
__anon83::nPosition	../inc/key.h	/^	int nPosition;$/;"	m	struct:__anon83	access:public
__anon83::szShopId	../inc/key.h	/^	char szShopId[SHOPIDLEN+1];$/;"	m	struct:__anon83	access:public
__anon83::szTerminalId	../inc/key.h	/^	char szTerminalId[TERMINALIDLEN+1];$/;"	m	struct:__anon83	access:public
__anon86::element	../inc/list.h	/^	void * element; \/**< 指向节点存放的数据项 *\/$/;"	m	struct:__anon86	access:public
__anon86::next	../inc/list.h	/^	void * next;    \/**< 指向下一个节点 *\/$/;"	m	struct:__anon86	access:public
__anon87::node	../inc/list.h	/^	list_node_t * node; \/**< 指向第一个结点 *\/$/;"	m	struct:__anon87	access:public
__anon87::num_elt	../inc/list.h	/^	int num_elt;		\/**< 节点总数 *\/$/;"	m	struct:__anon87	access:public
__libconfig_h	../inc/libconfig.h	24;"	d
__libconfig_h	../libapi/libconfig.h	24;"	d
__pad1	../src/PriKey_app.c	/^	unsigned long	__pad1;$/;"	m	struct:stat	file:	access:public
__pad2	../src/PriKey_app.c	/^	int		__pad2;$/;"	m	struct:stat	file:	access:public
__st_PADDATA	../env/NDK.h	/^typedef struct __st_PADDATA{$/;"	s
__st_PADDATA::emPadState	../env/NDK.h	/^        EM_PADSTATE emPadState;     \/**<坐标状态*\/$/;"	m	struct:__st_PADDATA	access:public
__st_PADDATA::unKeycode	../env/NDK.h	/^        uint unKeycode;\/**<按键值*\/$/;"	m	struct:__st_PADDATA	access:public
__st_PADDATA::unPadX	../env/NDK.h	/^        uint unPadX;    \/**<横坐标*\/$/;"	m	struct:__st_PADDATA	access:public
__st_PADDATA::unPadY	../env/NDK.h	/^        uint unPadY;    \/**<纵坐标*\/$/;"	m	struct:__st_PADDATA	access:public
__unused4	../src/PriKey_app.c	/^	unsigned int	__unused4;$/;"	m	struct:stat	file:	access:public
__unused5	../src/PriKey_app.c	/^	unsigned int	__unused5;$/;"	m	struct:stat	file:	access:public
_sumCHARFOR	../inc/PriKeyDownload.h	139;"	d
action	../libapi/lui.h	/^	int	(*action)(void);				\/**<项目执行函数的指针*\/$/;"	m	struct:__anon190	access:public
adminOperate	../src/main.c	/^static int adminOperate()$/;"	f	file:
adminOperate	../src/main.c	/^static int adminOperate(void);$/;"	p	file:	signature:(void)
algorithm	../inc/tr31_format.h	/^        uint8_t algorithm;      \/* The approved algorithm to be used by the protected key *\/$/;"	m	struct:__anon166	access:public
algorithm	../inc/tr31_format.h	/^    uint8_t algorithm;      	\/* The approved algorithm to be used by the protected key *\/$/;"	m	struct:__anon167	access:public
align	../libapi/ltool.h	/^    EM_ALIGN_TYPE           align;			\/**< 对齐类型 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
alloc_for_new_section	../src/parsecfg.c	/^static int alloc_for_new_section(cfgStruct cfg[], int *section)$/;"	f	file:	signature:(cfgStruct cfg[], int *section)
alloc_for_new_section	../src/parsecfg.c	/^static int alloc_for_new_section(cfgStruct cfg[], int *section);$/;"	p	file:	signature:(cfgStruct cfg[], int *section)
battery_adapter	../inc/theme.h	/^	image_t battery_adapter;$/;"	m	struct:__anon165	access:public
battery_charge	../inc/theme.h	/^	image_t battery_charge;$/;"	m	struct:__anon165	access:public
battery_empty	../inc/theme.h	/^	image_t battery_empty;$/;"	m	struct:__anon165	access:public
battery_green	../inc/theme.h	/^	image_t battery_green;$/;"	m	struct:__anon165	access:public
battery_red	../inc/theme.h	/^	image_t battery_red;$/;"	m	struct:__anon165	access:public
bindtextdomain	../inc/intl.h	43;"	d
bits	../env/NDK.h	/^    ushort bits;       							\/**< 模位数 *\/$/;"	m	struct:__anon25	access:public
bits	../env/NDK.h	/^    ushort bits;                    			\/**< 模位数 *\/$/;"	m	struct:__anon26	access:public
bits	../inc/NDK-bak.h	/^    ushort bits;       							\/**< modulus in bits *\/$/;"	m	struct:__anon108	access:public
bits	../inc/NDK-bak.h	/^    ushort bits;                    			\/**< modulus in bits *\/$/;"	m	struct:__anon109	access:public
btn	../inc/theme.h	/^    image_t btn[NUM_STA];$/;"	m	struct:__anon165	access:public
build_menu	../inc/PriKeyDownload.h	/^st_item_details * build_menu(st_item_details *list);$/;"	p	signature:(st_item_details *list)
build_menu	../src/PriKey_app.c	/^st_item_details * build_menu(st_item_details *list)$/;"	f	signature:(st_item_details *list)
button_attach_key	../env/widget.h	/^void button_attach_key(widget_t * widget, int ascii);$/;"	p	signature:(widget_t * widget, int ascii)
button_attach_onclick	../env/widget.h	/^void button_attach_onclick(widget_t * widget, void (*on_click)(void));$/;"	p	signature:(widget_t * widget, void (*on_click)(void))
button_new	../env/widget.h	/^widget_t * button_new(widget_t * parent, int x, int y, int w, char * string, char * icon);$/;"	p	signature:(widget_t * parent, int x, int y, int w, char * string, char * icon)
button_set_height	../env/widget.h	/^int button_set_height(int height);$/;"	p	signature:(int height)
bytes_per_pixel	../env/widget.h	/^	unsigned int bytes_per_pixel; \/**< 每个像素多少字节 *\/$/;"	m	struct:__anon80	access:public
cAux	../libapi/lposcard.h	/^	char cAux; 		       	\/**<外接读卡器所接串口(内置不用)*\/$/;"	m	struct:__anon176	access:public
cCardType	../libapi/lposcard.h	/^	char cCardType;			\/**<需要读取的卡片类型ENM_CARDTYPE*\/$/;"	m	struct:__anon176	access:public
cDefaultType	../libapi/lposcard.h	/^	char cDefaultType;     	\/**<默认外接读卡器类型(双频:RFIDREADER_ZX,RFIDREADER_SH,单频:ENM_RFREADERTYPE,RFIDREADER_ZX暂不支持2.4G M1操作)*\/$/;"	m	struct:__anon176	access:public
cDeleFlag	../inc/oper.h	/^	char cDeleFlag;$/;"	m	struct:__anon152	access:public
cDeleteFlag	../inc/key.h	/^	char cDeleteFlag;		\/*  '1'表示已删除*\/$/;"	m	struct:__anon81	access:public
cFirst	../libapi/lposcard.h	/^	char cFirst;				\/**<2.4G优先轮询，0:M1卡优先，其他:CPU卡优先*\/$/;"	m	struct:__anon176	access:public
cIs829SupportM1	../libapi/lposcard.h	/^	char cIs829SupportM1;	\/**<829模块是否支持M1卡0:不支持，其他:支持*\/$/;"	m	struct:__anon176	access:public
cIsIndex	../libapi/ltool.h	/^	char cIsIndex;					\/**<是否需要建立索引文件，0x00不建立，0x01建立*\/$/;"	m	struct:tagRecFile	access:public
cOperFlag	../libapi/lposcard.h	/^	char cOperFlag;        		\/**<EM_RF_INSIDE表示使用内置，EM_RF_OUTSIDE表示使用外置,EM_RF_INSIDE|EM_RF_OUTSIDE表示使用内外置*\/$/;"	m	struct:__anon176	access:public
cOperPwdLen	../inc/oper.h	/^	char cOperPwdLen;$/;"	m	struct:__anon152	access:public
cOperRole	../inc/oper.h	/^	char cOperRole;$/;"	m	struct:__anon152	access:public
cPadchar	../libapi/ltool.h	/^    char                    cPadchar;		\/**< 补齐字符 *\/	$/;"	m	struct:STISO_FIELD_DEF	access:public
cStatus	../inc/key.h	/^	char cStatus;$/;"	m	struct:__anon83	access:public
cType	../inc/key.h	/^	char cType;$/;"	m	struct:__anon81	access:public
cUsedDoubleRF	../libapi/lposcard.h	/^	char cUsedDoubleRF;    	\/**<是否使用读卡器的双频寻卡模式0:否，1是(外接读卡器专用)	(备注：读卡器需支持)*\/		$/;"	m	struct:__anon176	access:public
cfgAllocForNewSection	../inc/parsecfg.h	/^int cfgAllocForNewSection(cfgStruct cfg[], const char *name);$/;"	p	signature:(cfgStruct cfg[], const char *name)
cfgAllocForNewSection	../src/parsecfg.c	/^int cfgAllocForNewSection(cfgStruct cfg[], const char *name)$/;"	f	signature:(cfgStruct cfg[], const char *name)
cfgDump	../inc/parsecfg.h	/^int cfgDump(const char *file, cfgStruct cfg[], cfgFileType type, int max_section);$/;"	p	signature:(const char *file, cfgStruct cfg[], cfgFileType type, int max_section)
cfgDump	../src/parsecfg.c	/^int cfgDump(const char *file, cfgStruct cfg[], cfgFileType type, int max_section)$/;"	f	signature:(const char *file, cfgStruct cfg[], cfgFileType type, int max_section)
cfgErrorCode	../inc/parsecfg.h	/^} cfgErrorCode;$/;"	t	typeref:enum:__anon153
cfgFatal	../src/parsecfg.c	/^static void (*cfgFatal) (cfgErrorCode, const char *, int, const char *) = cfgFatalFunc;	\/* default error handler *\/$/;"	v	file:
cfgFatalFunc	../src/parsecfg.c	/^static void cfgFatalFunc(cfgErrorCode error_code, const char *file, int line, const char *str)$/;"	f	file:	signature:(cfgErrorCode error_code, const char *file, int line, const char *str)
cfgFatalFunc	../src/parsecfg.c	/^static void cfgFatalFunc(cfgErrorCode, const char *, int, const char *);$/;"	p	file:	signature:(cfgErrorCode, const char *, int, const char *)
cfgFileType	../inc/parsecfg.h	/^} cfgFileType;$/;"	t	typeref:enum:__anon154
cfgKeywordValue	../inc/parsecfg.h	/^} cfgKeywordValue;$/;"	t	typeref:enum:__anon156
cfgList	../inc/parsecfg.h	/^} cfgList;$/;"	t	typeref:struct:cfgList_tag
cfgList_tag	../inc/parsecfg.h	/^typedef struct cfgList_tag {$/;"	s
cfgList_tag::next	../inc/parsecfg.h	/^	struct cfgList_tag *next;$/;"	m	struct:cfgList_tag	typeref:struct:cfgList_tag::cfgList_tag	access:public
cfgList_tag::str	../inc/parsecfg.h	/^	char *str;$/;"	m	struct:cfgList_tag	access:public
cfgParse	../inc/parsecfg.h	/^int cfgParse(const char *file, cfgStruct cfg[], cfgFileType type);$/;"	p	signature:(const char *file, cfgStruct cfg[], cfgFileType type)
cfgParse	../src/parsecfg.c	/^int cfgParse(const char *file, cfgStruct cfg[], cfgFileType type)$/;"	f	signature:(const char *file, cfgStruct cfg[], cfgFileType type)
cfgQuote	../inc/parsecfg.h	/^} cfgQuote;$/;"	t	typeref:enum:__anon157
cfgSectionNameToNumber	../inc/parsecfg.h	/^int cfgSectionNameToNumber(const char *name);$/;"	p	signature:(const char *name)
cfgSectionNameToNumber	../src/parsecfg.c	/^int cfgSectionNameToNumber(const char *name)$/;"	f	signature:(const char *name)
cfgSectionNumberToName	../inc/parsecfg.h	/^char *cfgSectionNumberToName(int num);$/;"	p	signature:(int num)
cfgSectionNumberToName	../src/parsecfg.c	/^char *cfgSectionNumberToName(int num)$/;"	f	signature:(int num)
cfgSetFatalFunc	../inc/parsecfg.h	/^void cfgSetFatalFunc(void (*f) (cfgErrorCode, const char *, int, const char *));$/;"	p	signature:(void (*f) (cfgErrorCode, const char *, int, const char *))
cfgSetFatalFunc	../src/parsecfg.c	/^void cfgSetFatalFunc(void (*f) (cfgErrorCode, const char *, int, const char *))$/;"	f	signature:(void (*f) (cfgErrorCode, const char *, int, const char *))
cfgStoreValue	../inc/parsecfg.h	/^int cfgStoreValue(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section);$/;"	p	signature:(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section)
cfgStoreValue	../src/parsecfg.c	/^int cfgStoreValue(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section)$/;"	f	signature:(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section)
cfgStruct	../inc/parsecfg.h	/^} cfgStruct;$/;"	t	typeref:struct:__anon158
cfgStructSys	../inc/parsecfg.h	/^} cfgStructSys;$/;"	t	typeref:struct:__anon159
cfgValueType	../inc/parsecfg.h	/^} cfgValueType;$/;"	t	typeref:enum:__anon155
checkbox_attach_key	../env/widget.h	/^void checkbox_attach_key(widget_t * widget, int ascii);$/;"	p	signature:(widget_t * widget, int ascii)
checkbox_attach_oncheck	../env/widget.h	/^void checkbox_attach_oncheck(widget_t * widget, void (*on_check)(int check));$/;"	p	signature:(widget_t * widget, void (*on_check)(int check))
checkbox_destroy	../env/widget.h	/^void checkbox_destroy(widget_t * widget);$/;"	p	signature:(widget_t * widget)
checkbox_get_check	../env/widget.h	/^int checkbox_get_check(widget_t * widget);$/;"	p	signature:(widget_t * widget)
checkbox_new	../env/widget.h	/^widget_t * checkbox_new(widget_t * parent, int x, int y, int w, char * string, int check);$/;"	p	signature:(widget_t * parent, int x, int y, int w, char * string, int check)
checkbox_set_check	../env/widget.h	/^int checkbox_set_check(widget_t * widget, int check, int draw);$/;"	p	signature:(widget_t * widget, int check, int draw)
chk_off	../inc/theme.h	/^    image_t chk_off[NUM_STA];$/;"	m	struct:__anon165	access:public
chk_on	../inc/theme.h	/^    image_t chk_on[NUM_STA];$/;"	m	struct:__anon165	access:public
coefficient	../env/NDK.h	/^    uchar coefficient[MAX_RSA_PRIME_LEN+1];  	 	\/**< 素数与素数除法值 *\/$/;"	m	struct:__anon25	access:public
coefficient	../inc/NDK-bak.h	/^    uchar coefficient[MAX_RSA_PRIME_LEN+1];  	 	\/**< division value of prime number and prime number *\/$/;"	m	struct:__anon108	access:public
color_rgb	../env/widget.h	/^void color_rgb(color_t c, int *r, int *g, int *b);$/;"	p	signature:(color_t c, int *r, int *g, int *b)
color_t	../env/NDK.h	/^typedef unsigned int color_t;\/**<RGB色彩数值,0(黑色) - 0xFFFF(白色)*\/$/;"	t
color_t	../inc/NDK-bak.h	/^typedef unsigned int color_t;\/**<RGB color value, 0 (black) - 0xFFFF (white)*\/$/;"	t
combobox	../inc/theme.h	/^	image_t combobox;$/;"	m	struct:__anon165	access:public
combobox_attach_onclick	../env/widget.h	/^int combobox_attach_onclick(widget_t * widget,void (*on_click)(void));$/;"	p	signature:(widget_t * widget,void (*on_click)(void))
combobox_clean	../env/widget.h	/^int combobox_clean(widget_t * widget);$/;"	p	signature:(widget_t * widget)
combobox_destroy	../env/widget.h	/^int combobox_destroy(widget_t * widget);$/;"	p	signature:(widget_t * widget)
combobox_getvalue	../env/widget.h	/^int combobox_getvalue(widget_t * widget,char * value);$/;"	p	signature:(widget_t * widget,char * value)
combobox_insert	../env/widget.h	/^int combobox_insert(widget_t * widget,int row, char * string, int dfvalue);$/;"	p	signature:(widget_t * widget,int row, char * string, int dfvalue)
combobox_new	../env/widget.h	/^widget_t * combobox_new(widget_t * parent, int x, int y, int w,char * title);$/;"	p	signature:(widget_t * parent, int x, int y, int w,char * title)
comm_handshake_cmd	../src/Pri_DownloadTool.c	/^int comm_handshake_cmd(char opcode)$/;"	f	signature:(char opcode)
config	../inc/libconfig.h	/^  struct config_t *config;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_t	access:public
config	../libapi/libconfig.h	/^  struct config_t *config;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_t	access:public
config_destroy	../inc/libconfig.h	/^extern LIBCONFIG_API void config_destroy(config_t *config);$/;"	p	signature:(config_t *config)
config_destroy	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_destroy(config_t *config);$/;"	p	signature:(config_t *config)
config_error_file	../inc/libconfig.h	300;"	d
config_error_file	../libapi/libconfig.h	300;"	d
config_error_line	../inc/libconfig.h	303;"	d
config_error_line	../libapi/libconfig.h	303;"	d
config_error_t	../inc/libconfig.h	/^} config_error_t;$/;"	t	typeref:enum:__anon84
config_error_t	../libapi/libconfig.h	/^} config_error_t;$/;"	t	typeref:enum:__anon168
config_error_text	../inc/libconfig.h	297;"	d
config_error_text	../libapi/libconfig.h	297;"	d
config_error_type	../inc/libconfig.h	306;"	d
config_error_type	../libapi/libconfig.h	306;"	d
config_get_auto_convert	../inc/libconfig.h	/^extern LIBCONFIG_API int config_get_auto_convert(const config_t *config);$/;"	p	signature:(const config_t *config)
config_get_auto_convert	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_get_auto_convert(const config_t *config);$/;"	p	signature:(const config_t *config)
config_get_include_dir	../inc/libconfig.h	200;"	d
config_get_include_dir	../libapi/libconfig.h	200;"	d
config_get_tab_width	../inc/libconfig.h	286;"	d
config_get_tab_width	../libapi/libconfig.h	286;"	d
config_init	../inc/libconfig.h	/^extern LIBCONFIG_API void config_init(config_t *config);$/;"	p	signature:(config_t *config)
config_init	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_init(config_t *config);$/;"	p	signature:(config_t *config)
config_list_t	../inc/libconfig.h	/^typedef struct config_list_t$/;"	s
config_list_t	../inc/libconfig.h	/^} config_list_t;$/;"	t	typeref:struct:config_list_t
config_list_t	../libapi/libconfig.h	/^typedef struct config_list_t$/;"	s
config_list_t	../libapi/libconfig.h	/^} config_list_t;$/;"	t	typeref:struct:config_list_t
config_list_t::elements	../inc/libconfig.h	/^  config_setting_t **elements;$/;"	m	struct:config_list_t	access:public
config_list_t::elements	../libapi/libconfig.h	/^  config_setting_t **elements;$/;"	m	struct:config_list_t	access:public
config_list_t::length	../inc/libconfig.h	/^  unsigned int length;$/;"	m	struct:config_list_t	access:public
config_list_t::length	../libapi/libconfig.h	/^  unsigned int length;$/;"	m	struct:config_list_t	access:public
config_lookup	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_lookup(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path)
config_lookup	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_lookup(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path)
config_lookup_bool	../inc/libconfig.h	/^extern LIBCONFIG_API int config_lookup_bool(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, int *value)
config_lookup_bool	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_lookup_bool(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, int *value)
config_lookup_float	../inc/libconfig.h	/^extern LIBCONFIG_API int config_lookup_float(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, double *value)
config_lookup_float	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_lookup_float(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, double *value)
config_lookup_from	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_lookup_from($/;"	p	signature:( config_setting_t *setting, const char *path)
config_lookup_from	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_lookup_from($/;"	p	signature:( config_setting_t *setting, const char *path)
config_lookup_int	../inc/libconfig.h	/^extern LIBCONFIG_API int config_lookup_int(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, int *value)
config_lookup_int	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_lookup_int(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, int *value)
config_lookup_int64	../inc/libconfig.h	/^extern LIBCONFIG_API int config_lookup_int64(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, long long *value)
config_lookup_int64	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_lookup_int64(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, long long *value)
config_lookup_string	../inc/libconfig.h	/^extern LIBCONFIG_API int config_lookup_string(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, const char **value)
config_lookup_string	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_lookup_string(const config_t *config,$/;"	p	signature:(const config_t *config, const char *path, const char **value)
config_read	../inc/libconfig.h	/^extern LIBCONFIG_API int config_read(config_t *config, FILE *stream);$/;"	p	signature:(config_t *config, FILE *stream)
config_read	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_read(config_t *config, FILE *stream);$/;"	p	signature:(config_t *config, FILE *stream)
config_read_file	../inc/libconfig.h	/^extern LIBCONFIG_API int config_read_file(config_t *config,$/;"	p	signature:(config_t *config, const char *filename)
config_read_file	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_read_file(config_t *config,$/;"	p	signature:(config_t *config, const char *filename)
config_read_string	../inc/libconfig.h	/^extern LIBCONFIG_API int config_read_string(config_t *config, const char *str);$/;"	p	signature:(config_t *config, const char *str)
config_read_string	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_read_string(config_t *config, const char *str);$/;"	p	signature:(config_t *config, const char *str)
config_root_setting	../inc/libconfig.h	278;"	d
config_root_setting	../libapi/libconfig.h	278;"	d
config_set_auto_convert	../inc/libconfig.h	/^extern LIBCONFIG_API void config_set_auto_convert(config_t *config, int flag);$/;"	p	signature:(config_t *config, int flag)
config_set_auto_convert	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_set_auto_convert(config_t *config, int flag);$/;"	p	signature:(config_t *config, int flag)
config_set_destructor	../inc/libconfig.h	/^extern LIBCONFIG_API void config_set_destructor(config_t *config,$/;"	p	signature:(config_t *config, void (*destructor)(void *))
config_set_destructor	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_set_destructor(config_t *config,$/;"	p	signature:(config_t *config, void (*destructor)(void *))
config_set_include_dir	../inc/libconfig.h	/^extern LIBCONFIG_API void config_set_include_dir(config_t *config,$/;"	p	signature:(config_t *config, const char *include_dir)
config_set_include_dir	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_set_include_dir(config_t *config,$/;"	p	signature:(config_t *config, const char *include_dir)
config_set_tab_width	../inc/libconfig.h	282;"	d
config_set_tab_width	../libapi/libconfig.h	282;"	d
config_setting_add	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_add($/;"	p	signature:( config_setting_t *parent, const char *name, int type)
config_setting_add	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_add($/;"	p	signature:( config_setting_t *parent, const char *name, int type)
config_setting_get_bool	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_bool($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_bool	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_bool($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_bool_elem	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_bool_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_bool_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_bool_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_elem	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_get_elem($/;"	p	signature:( const config_setting_t *setting, unsigned int idx)
config_setting_get_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_get_elem($/;"	p	signature:( const config_setting_t *setting, unsigned int idx)
config_setting_get_float	../inc/libconfig.h	/^extern LIBCONFIG_API double config_setting_get_float($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_float	../libapi/libconfig.h	/^extern LIBCONFIG_API double config_setting_get_float($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_float_elem	../inc/libconfig.h	/^extern LIBCONFIG_API double config_setting_get_float_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_float_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API double config_setting_get_float_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_format	../inc/libconfig.h	/^extern LIBCONFIG_API short config_setting_get_format(config_setting_t *setting);$/;"	p	signature:(config_setting_t *setting)
config_setting_get_format	../libapi/libconfig.h	/^extern LIBCONFIG_API short config_setting_get_format(config_setting_t *setting);$/;"	p	signature:(config_setting_t *setting)
config_setting_get_hook	../inc/libconfig.h	258;"	d
config_setting_get_hook	../libapi/libconfig.h	258;"	d
config_setting_get_int	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_int($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_int	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_int($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_int64	../inc/libconfig.h	/^extern LIBCONFIG_API long long config_setting_get_int64($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_int64	../libapi/libconfig.h	/^extern LIBCONFIG_API long long config_setting_get_int64($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_int64_elem	../inc/libconfig.h	/^extern LIBCONFIG_API long long config_setting_get_int64_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_int64_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API long long config_setting_get_int64_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_int_elem	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_int_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_int_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_get_int_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_member	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_get_member($/;"	p	signature:( const config_setting_t *setting, const char *name)
config_setting_get_member	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_get_member($/;"	p	signature:( const config_setting_t *setting, const char *name)
config_setting_get_string	../inc/libconfig.h	/^extern LIBCONFIG_API const char *config_setting_get_string($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_string	../libapi/libconfig.h	/^extern LIBCONFIG_API const char *config_setting_get_string($/;"	p	signature:( const config_setting_t *setting)
config_setting_get_string_elem	../inc/libconfig.h	/^extern LIBCONFIG_API const char *config_setting_get_string_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_get_string_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API const char *config_setting_get_string_elem($/;"	p	signature:( const config_setting_t *setting, int idx)
config_setting_index	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_index(const config_setting_t *setting);$/;"	p	signature:(const config_setting_t *setting)
config_setting_index	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_index(const config_setting_t *setting);$/;"	p	signature:(const config_setting_t *setting)
config_setting_is_aggregate	../inc/libconfig.h	213;"	d
config_setting_is_aggregate	../libapi/libconfig.h	213;"	d
config_setting_is_array	../inc/libconfig.h	208;"	d
config_setting_is_array	../libapi/libconfig.h	208;"	d
config_setting_is_group	../inc/libconfig.h	206;"	d
config_setting_is_group	../libapi/libconfig.h	206;"	d
config_setting_is_list	../inc/libconfig.h	210;"	d
config_setting_is_list	../libapi/libconfig.h	210;"	d
config_setting_is_number	../inc/libconfig.h	218;"	d
config_setting_is_number	../libapi/libconfig.h	218;"	d
config_setting_is_root	../inc/libconfig.h	235;"	d
config_setting_is_root	../libapi/libconfig.h	235;"	d
config_setting_is_scalar	../inc/libconfig.h	223;"	d
config_setting_is_scalar	../libapi/libconfig.h	223;"	d
config_setting_length	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_length($/;"	p	signature:( const config_setting_t *setting)
config_setting_length	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_length($/;"	p	signature:( const config_setting_t *setting)
config_setting_lookup_bool	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_bool($/;"	p	signature:( const config_setting_t *setting, const char *name, int *value)
config_setting_lookup_bool	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_bool($/;"	p	signature:( const config_setting_t *setting, const char *name, int *value)
config_setting_lookup_float	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_float($/;"	p	signature:( const config_setting_t *setting, const char *name, double *value)
config_setting_lookup_float	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_float($/;"	p	signature:( const config_setting_t *setting, const char *name, double *value)
config_setting_lookup_int	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_int($/;"	p	signature:( const config_setting_t *setting, const char *name, int *value)
config_setting_lookup_int	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_int($/;"	p	signature:( const config_setting_t *setting, const char *name, int *value)
config_setting_lookup_int64	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_int64($/;"	p	signature:( const config_setting_t *setting, const char *name, long long *value)
config_setting_lookup_int64	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_int64($/;"	p	signature:( const config_setting_t *setting, const char *name, long long *value)
config_setting_lookup_string	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_string($/;"	p	signature:( const config_setting_t *setting, const char *name, const char **value)
config_setting_lookup_string	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_lookup_string($/;"	p	signature:( const config_setting_t *setting, const char *name, const char **value)
config_setting_name	../inc/libconfig.h	227;"	d
config_setting_name	../libapi/libconfig.h	227;"	d
config_setting_parent	../inc/libconfig.h	231;"	d
config_setting_parent	../libapi/libconfig.h	231;"	d
config_setting_remove	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_remove(config_setting_t *parent,$/;"	p	signature:(config_setting_t *parent, const char *name)
config_setting_remove	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_remove(config_setting_t *parent,$/;"	p	signature:(config_setting_t *parent, const char *name)
config_setting_remove_elem	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_remove_elem(config_setting_t *parent,$/;"	p	signature:(config_setting_t *parent, unsigned int idx)
config_setting_remove_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_remove_elem(config_setting_t *parent,$/;"	p	signature:(config_setting_t *parent, unsigned int idx)
config_setting_set_bool	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_bool(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, int value)
config_setting_set_bool	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_bool(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, int value)
config_setting_set_bool_elem	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_bool_elem($/;"	p	signature:( config_setting_t *setting, int idx, int value)
config_setting_set_bool_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_bool_elem($/;"	p	signature:( config_setting_t *setting, int idx, int value)
config_setting_set_float	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_float(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, double value)
config_setting_set_float	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_float(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, double value)
config_setting_set_float_elem	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_float_elem($/;"	p	signature:( config_setting_t *setting, int idx, double value)
config_setting_set_float_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_float_elem($/;"	p	signature:( config_setting_t *setting, int idx, double value)
config_setting_set_format	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_format(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, short format)
config_setting_set_format	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_format(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, short format)
config_setting_set_hook	../inc/libconfig.h	/^extern LIBCONFIG_API void config_setting_set_hook(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, void *hook)
config_setting_set_hook	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_setting_set_hook(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, void *hook)
config_setting_set_int	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_int(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, int value)
config_setting_set_int	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_int(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, int value)
config_setting_set_int64	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_int64(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, long long value)
config_setting_set_int64	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_int64(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, long long value)
config_setting_set_int64_elem	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_int64_elem($/;"	p	signature:( config_setting_t *setting, int idx, long long value)
config_setting_set_int64_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_int64_elem($/;"	p	signature:( config_setting_t *setting, int idx, long long value)
config_setting_set_int_elem	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_int_elem($/;"	p	signature:( config_setting_t *setting, int idx, int value)
config_setting_set_int_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_int_elem($/;"	p	signature:( config_setting_t *setting, int idx, int value)
config_setting_set_string	../inc/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_string(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, const char *value)
config_setting_set_string	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_setting_set_string(config_setting_t *setting,$/;"	p	signature:(config_setting_t *setting, const char *value)
config_setting_set_string_elem	../inc/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_string_elem($/;"	p	signature:( config_setting_t *setting, int idx, const char *value)
config_setting_set_string_elem	../libapi/libconfig.h	/^extern LIBCONFIG_API config_setting_t *config_setting_set_string_elem($/;"	p	signature:( config_setting_t *setting, int idx, const char *value)
config_setting_source_file	../inc/libconfig.h	293;"	d
config_setting_source_file	../libapi/libconfig.h	293;"	d
config_setting_source_line	../inc/libconfig.h	289;"	d
config_setting_source_line	../libapi/libconfig.h	289;"	d
config_setting_t	../inc/libconfig.h	/^typedef struct config_setting_t$/;"	s
config_setting_t	../inc/libconfig.h	/^} config_setting_t;$/;"	t	typeref:struct:config_setting_t
config_setting_t	../libapi/libconfig.h	/^typedef struct config_setting_t$/;"	s
config_setting_t	../libapi/libconfig.h	/^} config_setting_t;$/;"	t	typeref:struct:config_setting_t
config_setting_t::config	../inc/libconfig.h	/^  struct config_t *config;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_t	access:public
config_setting_t::config	../libapi/libconfig.h	/^  struct config_t *config;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_t	access:public
config_setting_t::file	../inc/libconfig.h	/^  const char *file;$/;"	m	struct:config_setting_t	access:public
config_setting_t::file	../libapi/libconfig.h	/^  const char *file;$/;"	m	struct:config_setting_t	access:public
config_setting_t::format	../inc/libconfig.h	/^  short format;$/;"	m	struct:config_setting_t	access:public
config_setting_t::format	../libapi/libconfig.h	/^  short format;$/;"	m	struct:config_setting_t	access:public
config_setting_t::hook	../inc/libconfig.h	/^  void *hook;$/;"	m	struct:config_setting_t	access:public
config_setting_t::hook	../libapi/libconfig.h	/^  void *hook;$/;"	m	struct:config_setting_t	access:public
config_setting_t::line	../inc/libconfig.h	/^  unsigned int line;$/;"	m	struct:config_setting_t	access:public
config_setting_t::line	../libapi/libconfig.h	/^  unsigned int line;$/;"	m	struct:config_setting_t	access:public
config_setting_t::name	../inc/libconfig.h	/^  char *name;$/;"	m	struct:config_setting_t	access:public
config_setting_t::name	../libapi/libconfig.h	/^  char *name;$/;"	m	struct:config_setting_t	access:public
config_setting_t::parent	../inc/libconfig.h	/^  struct config_setting_t *parent;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_setting_t	access:public
config_setting_t::parent	../libapi/libconfig.h	/^  struct config_setting_t *parent;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_setting_t	access:public
config_setting_t::type	../inc/libconfig.h	/^  short type;$/;"	m	struct:config_setting_t	access:public
config_setting_t::type	../libapi/libconfig.h	/^  short type;$/;"	m	struct:config_setting_t	access:public
config_setting_t::value	../inc/libconfig.h	/^  config_value_t value;$/;"	m	struct:config_setting_t	access:public
config_setting_t::value	../libapi/libconfig.h	/^  config_value_t value;$/;"	m	struct:config_setting_t	access:public
config_setting_type	../inc/libconfig.h	203;"	d
config_setting_type	../libapi/libconfig.h	203;"	d
config_t	../inc/libconfig.h	/^typedef struct config_t$/;"	s
config_t	../inc/libconfig.h	/^} config_t;$/;"	t	typeref:struct:config_t
config_t	../libapi/libconfig.h	/^typedef struct config_t$/;"	s
config_t	../libapi/libconfig.h	/^} config_t;$/;"	t	typeref:struct:config_t
config_t::destructor	../inc/libconfig.h	/^  void (*destructor)(void *);$/;"	m	struct:config_t	access:public
config_t::destructor	../libapi/libconfig.h	/^  void (*destructor)(void *);$/;"	m	struct:config_t	access:public
config_t::error_file	../inc/libconfig.h	/^  const char *error_file;$/;"	m	struct:config_t	access:public
config_t::error_file	../libapi/libconfig.h	/^  const char *error_file;$/;"	m	struct:config_t	access:public
config_t::error_line	../inc/libconfig.h	/^  int error_line;$/;"	m	struct:config_t	access:public
config_t::error_line	../libapi/libconfig.h	/^  int error_line;$/;"	m	struct:config_t	access:public
config_t::error_text	../inc/libconfig.h	/^  const char *error_text;$/;"	m	struct:config_t	access:public
config_t::error_text	../libapi/libconfig.h	/^  const char *error_text;$/;"	m	struct:config_t	access:public
config_t::error_type	../inc/libconfig.h	/^  config_error_t error_type;$/;"	m	struct:config_t	access:public
config_t::error_type	../libapi/libconfig.h	/^  config_error_t error_type;$/;"	m	struct:config_t	access:public
config_t::filenames	../inc/libconfig.h	/^  const char **filenames;$/;"	m	struct:config_t	access:public
config_t::filenames	../libapi/libconfig.h	/^  const char **filenames;$/;"	m	struct:config_t	access:public
config_t::flags	../inc/libconfig.h	/^  unsigned short flags;$/;"	m	struct:config_t	access:public
config_t::flags	../libapi/libconfig.h	/^  unsigned short flags;$/;"	m	struct:config_t	access:public
config_t::include_dir	../inc/libconfig.h	/^  const char *include_dir;$/;"	m	struct:config_t	access:public
config_t::include_dir	../libapi/libconfig.h	/^  const char *include_dir;$/;"	m	struct:config_t	access:public
config_t::num_filenames	../inc/libconfig.h	/^  unsigned int num_filenames;$/;"	m	struct:config_t	access:public
config_t::num_filenames	../libapi/libconfig.h	/^  unsigned int num_filenames;$/;"	m	struct:config_t	access:public
config_t::root	../inc/libconfig.h	/^  config_setting_t *root;$/;"	m	struct:config_t	access:public
config_t::root	../libapi/libconfig.h	/^  config_setting_t *root;$/;"	m	struct:config_t	access:public
config_t::tab_width	../inc/libconfig.h	/^  unsigned short tab_width;$/;"	m	struct:config_t	access:public
config_t::tab_width	../libapi/libconfig.h	/^  unsigned short tab_width;$/;"	m	struct:config_t	access:public
config_type	../inc/libconfig.h	/^} config_type;$/;"	t	typeref:enum:__anon85
config_type	../libapi/libconfig.h	/^} config_type;$/;"	t	typeref:enum:__anon169
config_value_t	../inc/libconfig.h	/^typedef union config_value_t$/;"	u
config_value_t	../inc/libconfig.h	/^} config_value_t;$/;"	t	typeref:union:config_value_t
config_value_t	../libapi/libconfig.h	/^typedef union config_value_t$/;"	u
config_value_t	../libapi/libconfig.h	/^} config_value_t;$/;"	t	typeref:union:config_value_t
config_value_t::fval	../inc/libconfig.h	/^  double fval;$/;"	m	union:config_value_t	access:public
config_value_t::fval	../libapi/libconfig.h	/^  double fval;$/;"	m	union:config_value_t	access:public
config_value_t::ival	../inc/libconfig.h	/^  int ival;$/;"	m	union:config_value_t	access:public
config_value_t::ival	../libapi/libconfig.h	/^  int ival;$/;"	m	union:config_value_t	access:public
config_value_t::list	../inc/libconfig.h	/^  struct config_list_t *list;$/;"	m	union:config_value_t	typeref:struct:config_value_t::config_list_t	access:public
config_value_t::list	../libapi/libconfig.h	/^  struct config_list_t *list;$/;"	m	union:config_value_t	typeref:struct:config_value_t::config_list_t	access:public
config_value_t::llval	../inc/libconfig.h	/^  long long llval;$/;"	m	union:config_value_t	access:public
config_value_t::llval	../libapi/libconfig.h	/^  long long llval;$/;"	m	union:config_value_t	access:public
config_value_t::sval	../inc/libconfig.h	/^  char *sval;$/;"	m	union:config_value_t	access:public
config_value_t::sval	../libapi/libconfig.h	/^  char *sval;$/;"	m	union:config_value_t	access:public
config_write	../inc/libconfig.h	/^extern LIBCONFIG_API void config_write(const config_t *config, FILE *stream);$/;"	p	signature:(const config_t *config, FILE *stream)
config_write	../libapi/libconfig.h	/^extern LIBCONFIG_API void config_write(const config_t *config, FILE *stream);$/;"	p	signature:(const config_t *config, FILE *stream)
config_write_file	../inc/libconfig.h	/^extern LIBCONFIG_API int config_write_file(config_t *config,$/;"	p	signature:(config_t *config, const char *filename)
config_write_file	../libapi/libconfig.h	/^extern LIBCONFIG_API int config_write_file(config_t *config,$/;"	p	signature:(config_t *config, const char *filename)
ctrl_status_t	../inc/theme.h	/^}ctrl_status_t;$/;"	t	typeref:enum:__anon164
dInited_len	../inc/posdef.h	25;"	d
dInited_off	../inc/posdef.h	24;"	d
dKekGroupNo_len	../inc/posdef.h	43;"	d
dKekGroupNo_off	../inc/posdef.h	42;"	d
dKekSerialNo_len	../inc/posdef.h	45;"	d
dKekSerialNo_off	../inc/posdef.h	44;"	d
dNvrAdder_End	../inc/posdef.h	48;"	d
dNvrAdder_Start	../inc/posdef.h	22;"	d
dRecNum_len	../inc/posdef.h	40;"	d
dRecNum_off	../inc/posdef.h	39;"	d
dTek1_len	../inc/posdef.h	31;"	d
dTek1_off	../inc/posdef.h	30;"	d
dTek2_len	../inc/posdef.h	34;"	d
dTek2_off	../inc/posdef.h	33;"	d
dTekflag_len	../inc/posdef.h	37;"	d
dTekflag_off	../inc/posdef.h	36;"	d
dTermtype_len	../inc/posdef.h	28;"	d
dTermtype_off	../inc/posdef.h	27;"	d
dcgettext	../inc/intl.h	42;"	d
debug	../inc/debug.h	/^extern int debug(const int nRes);$/;"	p	signature:(const int nRes)
debug	../src/debug.c	/^int debug(const int nRes)$/;"	f	signature:(const int nRes)
default_bg	../inc/theme.h	/^    color_t default_bg;$/;"	m	struct:__anon165	access:public
default_fg	../inc/theme.h	/^    color_t default_fg;$/;"	m	struct:__anon165	access:public
destructor	../inc/libconfig.h	/^  void (*destructor)(void *);$/;"	m	struct:config_t	access:public
destructor	../libapi/libconfig.h	/^  void (*destructor)(void *);$/;"	m	struct:config_t	access:public
detect_colorscreen	../env/widget.h	/^int detect_colorscreen(void);$/;"	p	signature:(void)
dgettext	../inc/intl.h	41;"	d
disable_fg	../inc/theme.h	/^    color_t disable_fg;$/;"	m	struct:__anon165	access:public
dl_clrportbuf	../inc/Pri_DownloadTool.h	/^int dl_clrportbuf(int rxtx);$/;"	p	signature:(int rxtx)
dl_clrportbuf	../src/Pri_DownloadTool.c	/^int dl_clrportbuf(int rxtx)$/;"	f	signature:(int rxtx)
dl_initdownloadport	../inc/Pri_DownloadTool.h	/^int dl_initdownloadport(void);$/;"	p	signature:(void)
dl_initdownloadport	../src/Pri_DownloadTool.c	/^int dl_initdownloadport(void)$/;"	f	signature:(void)
dl_portexit	../inc/Pri_DownloadTool.h	/^void dl_portexit(void);$/;"	p	signature:(void)
dl_portexit	../src/Pri_DownloadTool.c	/^void dl_portexit(void)$/;"	f	signature:(void)
dl_portread	../inc/Pri_DownloadTool.h	/^int dl_portread(int len,char *OutBuf,int seconds);$/;"	p	signature:(int len,char *OutBuf,int seconds)
dl_portread	../src/Pri_DownloadTool.c	/^int dl_portread(int len,char *OutBuf,int seconds)$/;"	f	signature:(int len,char *OutBuf,int seconds)
dl_portwrite	../inc/Pri_DownloadTool.h	/^int dl_portwrite(int len,const char *InBuf);$/;"	p	signature:(int len,const char *InBuf)
dl_portwrite	../src/Pri_DownloadTool.c	/^int dl_portwrite(int len,const char *InBuf)$/;"	f	signature:(int len,const char *InBuf)
dock_add	../env/widget.h	/^int dock_add(widget_t * dock, char * img, void * data);$/;"	p	signature:(widget_t * dock, char * img, void * data)
dock_attach_select	../env/widget.h	/^void dock_attach_select(widget_t * dock, void (*dock_on_select)(int sel, void * data));$/;"	p	signature:(widget_t * dock, void (*dock_on_select)(int sel, void * data))
dock_new	../env/widget.h	/^widget_t * dock_new(widget_t * parent, int x, int y, int w, int h,$/;"	p	signature:(widget_t * parent, int x, int y, int w, int h, char * defimg, char * preimg, position_t dockpos)
dump_ini	../src/parsecfg.c	/^static int dump_ini(FILE *fp, cfgStruct cfg[], cfgFileType type, int max)$/;"	f	file:	signature:(FILE *fp, cfgStruct cfg[], cfgFileType type, int max)
dump_ini	../src/parsecfg.c	/^static int dump_ini(FILE *fp, cfgStruct cfg[], cfgFileType type, int max);$/;"	p	file:	signature:(FILE *fp, cfgStruct cfg[], cfgFileType type, int max)
dump_simple	../src/parsecfg.c	/^static int dump_simple(FILE *fp, cfgStruct cfg[], cfgFileType type)$/;"	f	file:	signature:(FILE *fp, cfgStruct cfg[], cfgFileType type)
dump_simple	../src/parsecfg.c	/^static int dump_simple(FILE *fp, cfgStruct cfg[], cfgFileType type);$/;"	p	file:	signature:(FILE *fp, cfgStruct cfg[], cfgFileType type)
dynamic_fgets	../src/parsecfg.c	/^static char *dynamic_fgets(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
dynamic_fgets	../src/parsecfg.c	/^static char *dynamic_fgets(FILE *fp);$/;"	p	file:	signature:(FILE *fp)
edit_ca_ini	../src/signcert.c	/^int edit_ca_ini()$/;"	f
edit_csr_ini	../src/genreq.c	/^int edit_csr_ini()$/;"	f
editbox	../inc/theme.h	/^	image_t editbox;$/;"	m	struct:__anon165	access:public
editbox_alpha_enable	../env/widget.h	/^int editbox_alpha_enable(widget_t * widget,int flag);$/;"	p	signature:(widget_t * widget,int flag)
editbox_attach_input_rule	../env/widget.h	/^int editbox_attach_input_rule(widget_t * widget,int (*ValidateFuncInterface)(char *pszOldInput, $/;"	p	signature:(widget_t * widget,int (*ValidateFuncInterface)(char *pszOldInput, int OldinputLen,const char *pszNewInput, int NewinputLen,int OutLen,void *pAdditionParam))
editbox_attach_keypressd	../env/widget.h	/^void editbox_attach_keypressd(widget_t * widget, void (*select)(widget_t *,int));$/;"	p	signature:(widget_t * widget, void (*select)(widget_t *,int))
editbox_attach_onenter	../env/widget.h	/^void editbox_attach_onenter(widget_t * widget, void (*onenter)(void));$/;"	p	signature:(widget_t * widget, void (*onenter)(void))
editbox_change_inputmode	../env/widget.h	/^int editbox_change_inputmode(widget_t * widget,int mode);$/;"	p	signature:(widget_t * widget,int mode)
editbox_getmaxlen	../env/widget.h	/^int editbox_getmaxlen(widget_t * widget);$/;"	p	signature:(widget_t * widget)
editbox_getvalue	../env/widget.h	/^int editbox_getvalue(widget_t * widget,char * value);$/;"	p	signature:(widget_t * widget,char * value)
editbox_new	../env/widget.h	/^widget_t * editbox_new(widget_t * parent, int x, int y, int w,int h,int input,char * title,unsigned int maxlen);$/;"	p	signature:(widget_t * parent, int x, int y, int w,int h,int input,char * title,unsigned int maxlen)
editbox_select_mode	../env/widget.h	/^int editbox_select_mode(widget_t * widget,int mode);$/;"	p	signature:(widget_t * widget,int mode)
editbox_setvalue	../env/widget.h	/^int editbox_setvalue(widget_t * widget,char * value);$/;"	p	signature:(widget_t * widget,char * value)
element	../inc/list.h	/^	void * element; \/**< 指向节点存放的数据项 *\/$/;"	m	struct:__anon86	access:public
elements	../inc/libconfig.h	/^  config_setting_t **elements;$/;"	m	struct:config_list_t	access:public
elements	../libapi/libconfig.h	/^  config_setting_t **elements;$/;"	m	struct:config_list_t	access:public
emKeyType	../env/NDK.h	/^    EM_WIFI_KEY_TYPE emKeyType; \/**<路由器的密码格式*\/$/;"	m	struct:__anon74	access:public
emKeyType	../inc/NDK-bak.h	/^    EM_WIFI_KEY_TYPE emKeyType; \/**<The router's password format*\/$/;"	m	struct:__anon149	access:public
emMenu	../libapi/lui.h	/^	EM_MENU_TITLE emMenu;						\/**<EM_MENU_TITLE*\/$/;"	m	struct:__anon192	access:public
emModuleType	../env/NDK.h	/^	EM_MODULE_TYPE emModuleType;		\/**<模块类型*\/$/;"	m	struct:__anon48	access:public
emPadState	../env/NDK.h	/^        EM_PADSTATE emPadState;     \/**<坐标状态*\/$/;"	m	struct:__st_PADDATA	access:public
emSecMode	../env/NDK.h	/^    EM_WIFI_NET_SEC emSecMode;  \/**<路由器的安全加密模式*\/$/;"	m	struct:__anon74	access:public
emSecMode	../inc/NDK-bak.h	/^    EM_WIFI_NET_SEC emSecMode;  \/**<The router's security encryption mode*\/$/;"	m	struct:__anon149	access:public
error_file	../inc/libconfig.h	/^  const char *error_file;$/;"	m	struct:config_t	access:public
error_file	../libapi/libconfig.h	/^  const char *error_file;$/;"	m	struct:config_t	access:public
error_line	../inc/libconfig.h	/^  int error_line;$/;"	m	struct:config_t	access:public
error_line	../libapi/libconfig.h	/^  int error_line;$/;"	m	struct:config_t	access:public
error_text	../inc/libconfig.h	/^  const char *error_text;$/;"	m	struct:config_t	access:public
error_text	../libapi/libconfig.h	/^  const char *error_text;$/;"	m	struct:config_t	access:public
error_type	../inc/libconfig.h	/^  config_error_t error_type;$/;"	m	struct:config_t	access:public
error_type	../libapi/libconfig.h	/^  config_error_t error_type;$/;"	m	struct:config_t	access:public
exist_other_value	../inc/oper.h	/^extern int exist_other_value(char * psw, int pswlen);$/;"	p	signature:(char * psw, int pswlen)
exist_other_value	../src/oper.c	/^int exist_other_value(char *psw, int pswlen)$/;"	f	signature:(char *psw, int pswlen)
exp_bits	../inc/PriKeyDownload.h	/^    unsigned int exp_bits;                    \/*指数bit位数 *\/$/;"	m	struct:__anon161	access:public
exponent	../env/NDK.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];		\/**< 指数 *\/$/;"	m	struct:__anon26	access:public
exponent	../env/NDK.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];     	\/**< 私钥指数 *\/$/;"	m	struct:__anon25	access:public
exponent	../inc/NDK-bak.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];		\/**< exponent *\/$/;"	m	struct:__anon109	access:public
exponent	../inc/NDK-bak.h	/^    uchar exponent[MAX_RSA_MODULUS_LEN+1];     	\/**< private key exponent *\/$/;"	m	struct:__anon108	access:public
exponent	../inc/PriKeyDownload.h	/^    unsigned char exponent[MAX_RSA_MODULUS_LEN];      \/* 指数 *\/$/;"	m	struct:__anon161	access:public
export	../inc/tr31_format.h	/^        uint8_t export;         \/* Defines the protected key's exportablility *\/$/;"	m	struct:__anon166	access:public
export	../inc/tr31_format.h	/^    uint8_t export;         	\/* Defines the protected key's exportablility *\/$/;"	m	struct:__anon167	access:public
fMAX_FRAM_SIZE	../inc/posdef.h	50;"	d
fclose	../src/Pri_DownloadTool.c	522;"	d	file:
fetchVarFromCfgFile	../inc/parsecfg.h	/^int fetchVarFromCfgFile(const char *file, char *parameter_name, void *result_value, cfgValueType value_type, cfgFileType file_type, int section_num, const char *section_name);$/;"	p	signature:(const char *file, char *parameter_name, void *result_value, cfgValueType value_type, cfgFileType file_type, int section_num, const char *section_name)
fetchVarFromCfgFile	../src/parsecfg.c	/^int fetchVarFromCfgFile(const char *file, char *parameter_name, void *result_value, cfgValueType value_type, cfgFileType file_type, int section_num, const char *section_name)$/;"	f	signature:(const char *file, char *parameter_name, void *result_value, cfgValueType value_type, cfgFileType file_type, int section_num, const char *section_name)
fetch_ini	../src/parsecfg.c	/^static int fetch_ini(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type, int section_num, const char *section_name)$/;"	f	file:	signature:(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type, int section_num, const char *section_name)
fetch_ini	../src/parsecfg.c	/^static int fetch_ini(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type, int section_num, const char *section_name);$/;"	p	file:	signature:(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type, int section_num, const char *section_name)
fetch_simple	../src/parsecfg.c	/^static int fetch_simple(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type)$/;"	f	file:	signature:(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type)
fetch_simple	../src/parsecfg.c	/^static int fetch_simple(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type);$/;"	p	file:	signature:(const char *file, FILE *fp, char *parameter_name, void *result_value, cfgValueType value_type)
fetch_value	../src/parsecfg.c	/^static int fetch_value(const char *file, int *line, char *line_buf, FILE *fp, int *store_flag, char *ptr, cfgStruct *fetch_cfg)$/;"	f	file:	signature:(const char *file, int *line, char *line_buf, FILE *fp, int *store_flag, char *ptr, cfgStruct *fetch_cfg)
fetch_value	../src/parsecfg.c	/^static int fetch_value(const char *file, int *line, char *line_buf, FILE *fp, int *store_flag, char *ptr, cfgStruct *fetch_cfg);$/;"	p	file:	signature:(const char *file, int *line, char *line_buf, FILE *fp, int *store_flag, char *ptr, cfgStruct *fetch_cfg)
fid	../inc/tr31_format.h	/^		uint8_t fid;			\/*key field*\/$/;"	m	struct:__anon166	access:public
fid	../inc/tr31_format.h	/^	uint8_t fid;				\/* filed ID*\/$/;"	m	struct:__anon167	access:public
file	../inc/libconfig.h	/^  const char *file;$/;"	m	struct:config_setting_t	access:public
file	../libapi/libconfig.h	/^  const char *file;$/;"	m	struct:config_setting_t	access:public
filenames	../inc/libconfig.h	/^  const char **filenames;$/;"	m	struct:config_t	access:public
filenames	../libapi/libconfig.h	/^  const char **filenames;$/;"	m	struct:config_t	access:public
flags	../inc/libconfig.h	/^  unsigned short flags;$/;"	m	struct:config_t	access:public
flags	../libapi/libconfig.h	/^  unsigned short flags;$/;"	m	struct:config_t	access:public
fld	../libapi/ltool.h	/^    STISO_FIELD		fld[256];$/;"	m	struct:STISODataStru	access:public
fopen	../src/Pri_DownloadTool.c	519;"	d	file:
format	../env/NDK.h	/^	unsigned int format;		\/**< 扩展密钥安装包格式,目前仅支持TR-31格式 SEC_KEYBLOCK_FMT_TR31*\/$/;"	m	struct:__anon35	access:public
format	../inc/NDK-bak.h	/^	unsigned int format;		\/**< Extend key installation package format, currently only support SEC_KEYBLOCK_FMT_TR31 TR - 31 format*\/$/;"	m	struct:__anon118	access:public
format	../inc/libconfig.h	/^  short format;$/;"	m	struct:config_setting_t	access:public
format	../libapi/libconfig.h	/^  short format;$/;"	m	struct:config_setting_t	access:public
func	../env/NDK.h	/^	int  (*func)(char *, ST_PRN_RECMSG *);	\/**<获取依移地址和占用字节数的函数*\/$/;"	m	struct:__anon20	access:public
func	../inc/NDK-bak.h	/^	int  (*func)(char *, ST_PRN_RECMSG *);	\/**<function that obtains offset address and number of bytes occupied*\/$/;"	m	struct:__anon104	access:public
func	../inc/PriKeyDownload.h	/^	int (*func)(char *);$/;"	m	struct:st_item_details	access:public
func	../inc/selftest.h	/^	int (*func)(char *);$/;"	m	struct:st_item_details	access:public
funckey	../inc/selftest.h	/^	int funckey[FUNCKEY_CNT];$/;"	m	struct:ST_Funtion_key	access:public
fval	../inc/libconfig.h	/^  double fval;$/;"	m	union:config_value_t	access:public
fval	../libapi/libconfig.h	/^  double fval;$/;"	m	union:config_value_t	access:public
gDownlaodPort	../src/Pri_DownloadTool.c	/^static int gDownlaodPort = PORT_AUX;    \/\/默认下载使用物理串口$/;"	v	file:
gKEK_GroupNo	../src/main.c	/^int gKEK_GroupNo;$/;"	v
gKEK_SerialNo	../src/main.c	/^int gKEK_SerialNo;$/;"	v
gTEK_changeflag	../src/main.c	/^int gTEK_changeflag;$/;"	v
gUsbOpenFlag	../src/Pri_DownloadTool.c	/^static int gUsbOpenFlag = 0;        \/\/USB串口句柄，以打开则为1,未打开则为0$/;"	v	file:
g_Language	../inc/PriKeyDownload.h	/^int g_Language; \/* 1 english, 0 chinese *\/$/;"	v
g_Sam	../src/PriKey_app.c	/^EM_ICTYPE g_Sam=ICTYPE_SAM1;$/;"	v
g_TypeIC	../src/PriKey_app.c	/^int g_TypeSam=0,g_TypeIC=0;$/;"	v
g_TypeSam	../src/PriKey_app.c	/^int g_TypeSam=0,g_TypeIC=0;$/;"	v
g_passBuf	../src/PriKey_app.c	/^uchar g_passBuf[8];$/;"	v
g_rdir	../src/PriKey_app.c	/^char g_rdir[3][16]= {{0},{0},{0}};$/;"	v
get_lcdtype	../env/widget.h	/^int get_lcdtype(char * type);$/;"	p	signature:(char * type)
get_screensize	../env/widget.h	/^int get_screensize(unsigned int * width,unsigned int * height);$/;"	p	signature:(unsigned int * width,unsigned int * height)
get_single_line_without_first_spaces	../src/parsecfg.c	/^static char *get_single_line_without_first_spaces(FILE *fp, char **gotstr, int *line)$/;"	f	file:	signature:(FILE *fp, char **gotstr, int *line)
get_single_line_without_first_spaces	../src/parsecfg.c	/^static char *get_single_line_without_first_spaces(FILE *fp, char **gotstr, int *line);$/;"	p	file:	signature:(FILE *fp, char **gotstr, int *line)
gettext	../inc/intl.h	40;"	d
gid	../inc/tr31_format.h	/^		uint8_t gid[3];			\/*Group ID, ASCII Numeric Digits*\/$/;"	m	struct:__anon166	access:public
gid	../inc/tr31_format.h	/^	uint8_t gid;				\/* group ID*\/$/;"	m	struct:__anon167	access:public
h	../env/NDK.h	/^	int  h;							\/**<字体显示的高度*\/$/;"	m	struct:__anon20	access:public
h	../inc/NDK-bak.h	/^	int  h;							\/**<height of font displayed*\/$/;"	m	struct:__anon104	access:public
height	../env/widget.h	/^	unsigned int height; 			\/**< 图像高度（像素）*\/$/;"	m	struct:__anon80	access:public
hook	../inc/libconfig.h	/^  void *hook;$/;"	m	struct:config_setting_t	access:public
hook	../libapi/libconfig.h	/^  void *hook;$/;"	m	struct:config_setting_t	access:public
image_alpha	../env/widget.h	/^	void * image_alpha;		\/**< 图像alpha通道 *\/$/;"	m	struct:__anon80	access:public
image_buf	../env/widget.h	/^	void * image_buf;		\/**< 图像色彩数据 *\/$/;"	m	struct:__anon80	access:public
image_decode	../env/widget.h	/^image_t * image_decode(char * filepath);$/;"	p	signature:(char * filepath)
image_destroy	../env/widget.h	/^void image_destroy(image_t * pimage);$/;"	p	signature:(image_t * pimage)
image_encode	../env/widget.h	/^int image_encode(image_t * pimage, char * filepath, char * type);$/;"	p	signature:(image_t * pimage, char * filepath, char * type)
image_share	../env/widget.h	/^image_t * image_share(image_t * pimage);$/;"	p	signature:(image_t * pimage)
image_t	../env/widget.h	/^}image_t;$/;"	t	typeref:struct:__anon80
image_zoom	../env/widget.h	/^image_t * image_zoom(int width,int height,image_t * img);$/;"	p	signature:(int width,int height,image_t * img)
include_dir	../inc/libconfig.h	/^  const char *include_dir;$/;"	m	struct:config_t	access:public
include_dir	../libapi/libconfig.h	/^  const char *include_dir;$/;"	m	struct:config_t	access:public
info_reserved	../inc/PriKeyDownload.h	/^    unsigned char info_reserved[16];$/;"	m	struct:__anon161	access:public
init	../inc/PriKeyDownload.h	/^int init(void);$/;"	p	signature:(void)
init	../src/PriKey_app.c	/^int init(void)$/;"	f	signature:(void)
init_gui	../env/widget.h	/^int init_gui(void);$/;"	p	signature:(void)
init_guiforapp	../env/widget.h	/^int init_guiforapp(unsigned char*appname);$/;"	p	signature:(unsigned char*appname)
insertprotocol	../inc/Pri_DownloadTool.h	/^int insertprotocol(unsigned char *pbuf, unsigned long len);$/;"	p	signature:(unsigned char *pbuf, unsigned long len)
insertprotocol	../src/Pri_DownloadTool.c	/^int insertprotocol(unsigned char *pbuf, unsigned long len)$/;"	f	signature:(unsigned char *pbuf, unsigned long len)
item_func	../inc/selftest.h	/^extern int item_func(char * str);$/;"	p	signature:(char * str)
ival	../inc/libconfig.h	/^  int ival;$/;"	m	union:config_value_t	access:public
ival	../libapi/libconfig.h	/^  int ival;$/;"	m	union:config_value_t	access:public
key	../inc/tr31_format.h	/^	uint8_t *key;			\/*  key pointer *\/$/;"	m	struct:__anon167	access:public
keylen	../inc/tr31_format.h	/^	uint16_t keylen;			\/* keylen*\/$/;"	m	struct:__anon167	access:public
keytype	../inc/selftest.h	/^	int keytype;$/;"	m	struct:ST_Funtion_key	access:public
ksn	../inc/tr31_format.h	/^		uint8_t ksn[20];		\/*ASCII-encoded KSN for dukpt*\/$/;"	m	struct:__anon166	access:public
ksn	../inc/tr31_format.h	/^	uint8_t ksn[10];			\/* Key Serial Number *\/$/;"	m	struct:__anon167	access:public
len	../env/NDK.h	/^	unsigned int len;			\/**< 密钥安装包数据(pblock)长度*\/$/;"	m	struct:__anon35	access:public
len	../inc/NDK-bak.h	/^	unsigned int len;			\/**< Key installation package data (pblock) length*\/$/;"	m	struct:__anon118	access:public
length	../inc/libconfig.h	/^  unsigned int length;$/;"	m	struct:config_list_t	access:public
length	../inc/tr31_format.h	/^        uint8_t length[4];      \/* Key Block Length, including Header + DATA + MAC *\/$/;"	m	struct:__anon166	access:public
length	../libapi/libconfig.h	/^  unsigned int length;$/;"	m	struct:config_list_t	access:public
lentype	../libapi/ltool.h	/^    EM_LENGTH_TYPE		    lentype;		\/**< 数据域长度类型: 1--LLVAR型 2--LLLVAR型 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
line	../inc/libconfig.h	/^  unsigned int line;$/;"	m	struct:config_setting_t	access:public
line	../libapi/libconfig.h	/^  unsigned int line;$/;"	m	struct:config_setting_t	access:public
list	../inc/libconfig.h	/^  struct config_list_t *list;$/;"	m	union:config_value_t	typeref:struct:config_value_t::config_list_t	access:public
list	../libapi/libconfig.h	/^  struct config_list_t *list;$/;"	m	union:config_value_t	typeref:struct:config_value_t::config_list_t	access:public
list_add	../inc/list.h	/^int list_add(list_t * li, void * element, int pos);$/;"	p	signature:(list_t * li, void * element, int pos)
list_add	../src/list.c	/^int list_add(list_t * li, void * element, int pos)$/;"	f	signature:(list_t * li, void * element, int pos)
list_cleanup	../inc/list.h	/^int list_cleanup(list_t * li, void (*callback)(void * data, void * element), void * data, int freehead);$/;"	p	signature:(list_t * li, void (*callback)(void * data, void * element), void * data, int freehead)
list_cleanup	../src/list.c	/^int list_cleanup(list_t * li, void (*callback)(void * data, void * element), void * data, int freehead)$/;"	f	signature:(list_t * li, void (*callback)(void * data, void * element), void * data, int freehead)
list_eol	../inc/list.h	/^int list_eol(list_t * li, int i);$/;"	p	signature:(list_t * li, int i)
list_eol	../src/list.c	/^int list_eol(list_t * li, int i)$/;"	f	signature:(list_t * li, int i)
list_find	../inc/list.h	/^void * list_find(list_t * li, int (*cmp_func) (void * data, void * node), void * data);$/;"	p	signature:(list_t * li, int (*cmp_func) (void * data, void * node), void * data)
list_find	../src/list.c	/^void * list_find(list_t * li, int (*cmp_func) (void * data, void * node), void * data)$/;"	f	signature:(list_t * li, int (*cmp_func) (void * data, void * node), void * data)
list_for_each	../inc/list.h	/^int list_for_each(list_t * li, void (*call)(void * data, void * element), void * data);$/;"	p	signature:(list_t * li, void (*call)(void * data, void * element), void * data)
list_for_each	../src/list.c	/^int list_for_each(list_t * li, void (*call)(void * data, void * element), void * data)$/;"	f	signature:(list_t * li, void (*call)(void * data, void * element), void * data)
list_for_each_breakoff	../src/list.c	/^int list_for_each_breakoff(list_t * li, int (*call)(void * data, void * element), void * data)$/;"	f	signature:(list_t * li, int (*call)(void * data, void * element), void * data)
list_get	../inc/list.h	/^void * list_get(list_t * li, int pos);$/;"	p	signature:(list_t * li, int pos)
list_get	../src/list.c	/^void * list_get(list_t * li, int pos)$/;"	f	signature:(list_t * li, int pos)
list_get_node	../inc/list.h	/^list_node_t * list_get_node(list_t * li, int pos);$/;"	p	signature:(list_t * li, int pos)
list_get_node	../src/list.c	/^list_node_t * list_get_node(list_t * li, int pos)$/;"	f	signature:(list_t * li, int pos)
list_get_pos	../inc/list.h	/^int list_get_pos(list_t * li, void * node);$/;"	p	signature:(list_t * li, void * node)
list_get_pos	../src/list.c	/^int list_get_pos(list_t * li, void * node)$/;"	f	signature:(list_t * li, void * node)
list_init	../inc/list.h	/^int list_init(list_t ** li);$/;"	p	signature:(list_t ** li)
list_init	../src/list.c	/^int list_init(list_t ** li)$/;"	f	signature:(list_t ** li)
list_node_t	../inc/list.h	/^}list_node_t;$/;"	t	typeref:struct:__anon86
list_remove	../inc/list.h	/^void * list_remove(list_t * li, int pos);$/;"	p	signature:(list_t * li, int pos)
list_remove	../src/list.c	/^void* list_remove(list_t * li, int pos)$/;"	f	signature:(list_t * li, int pos)
list_t	../inc/list.h	/^}list_t;$/;"	t	typeref:struct:__anon87
list_uninit	../inc/list.h	/^int list_uninit(list_t * li);$/;"	p	signature:(list_t * li)
list_uninit	../src/list.c	/^int list_uninit(list_t * li)$/;"	f	signature:(list_t * li)
llval	../inc/libconfig.h	/^  long long llval;$/;"	m	union:config_value_t	access:public
llval	../libapi/libconfig.h	/^  long long llval;$/;"	m	union:config_value_t	access:public
loadfont_bdf	../env/widget.h	/^int loadfont_bdf(int fontid,char *path);$/;"	p	signature:(int fontid,char *path)
lst	../inc/theme.h	/^    image_t lst[NUM_STA];$/;"	m	struct:__anon165	access:public
main	../src/main.c	/^int main(void)$/;"	f	signature:(void)
make_csr	../src/genreq.c	/^int make_csr(void)$/;"	f	signature:(void)
make_csr_sign	../src/signcert.c	/^int make_csr_sign()$/;"	f
messagebox	../inc/theme.h	/^	image_t messagebox;$/;"	m	struct:__anon165	access:public
messagebox_destroy	../env/widget.h	/^void messagebox_destroy(widget_t * message);$/;"	p	signature:(widget_t * message)
messagebox_new	../env/widget.h	/^widget_t * messagebox_new (widget_t * window, int w,int h);$/;"	p	signature:(widget_t * window, int w,int h)
messagebox_select	../env/widget.h	/^widget_t* messagebox_select(widget_t * widget);$/;"	p	signature:(widget_t * widget)
mod_bits	../inc/PriKeyDownload.h	/^    unsigned int mod_bits;                    \/*模长bit位数 *\/$/;"	m	struct:__anon161	access:public
mode	../inc/tr31_format.h	/^        uint8_t mode;           \/* the operation the protected key can perform *\/$/;"	m	struct:__anon166	access:public
mode	../inc/tr31_format.h	/^    uint8_t mode;           	\/* the operation the protected key can perform *\/$/;"	m	struct:__anon167	access:public
modify_flag	../inc/parsecfg.h	/^	int modify_flag;$/;"	m	struct:__anon159	access:public
modulus	../env/NDK.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];  		\/**< 模 *\/$/;"	m	struct:__anon26	access:public
modulus	../env/NDK.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];      	\/**< 模 *\/$/;"	m	struct:__anon25	access:public
modulus	../inc/NDK-bak.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];  		\/**< modulus length *\/$/;"	m	struct:__anon109	access:public
modulus	../inc/NDK-bak.h	/^    uchar modulus[MAX_RSA_MODULUS_LEN+1];      	\/**<modulus length *\/$/;"	m	struct:__anon108	access:public
modulus	../inc/PriKeyDownload.h	/^    unsigned char modulus[MAX_RSA_MODULUS_LEN];      \/*模 *\/$/;"	m	struct:__anon161	access:public
nCheckMode	../env/NDK.h	/^    int 	nCheckMode; 		\/**< 校验模式 参考\\ref ST_SEC_KCV_INFO "ST_SEC_KCV_INFO"*\/$/;"	m	struct:__anon37	access:public
nCheckMode	../inc/NDK-bak.h	/^    int 	nCheckMode; 		\/**< check mode *\/$/;"	m	struct:__anon120	access:public
nDevMainID	../inc/NDK-bak.h	/^	int nDevMainID;      \/**<Equipment main ID*\/$/;"	m	struct:st_ss_output	access:public
nDevMinorID	../inc/NDK-bak.h	/^	int nDevMinorID;    \/**<Device time ID*\/$/;"	m	struct:st_ss_output	access:public
nDevType	../env/NDK.h	/^    int nDevType;			\/**<类型，区别是无线MODEM还是有线MODEM，0表示无线，1表示有线*\/$/;"	m	struct:__anon50	access:public
nDevType	../inc/NDK-bak.h	/^    int nDevType;			\/**<type, to tell if it is a wireless MODEM or wired MODEM￡?0 ¨C wireless, 1 - wired*\/$/;"	m	struct:__anon127	access:public
nDirection	../env/NDK.h	/^	int  nDirection;   				\/**<0:横向字体； 1:纵向字体*\/$/;"	m	struct:__anon20	access:public
nDirection	../inc/NDK-bak.h	/^	int  nDirection;   				\/**<0: horizontal font; 1: vertical font*\/$/;"	m	struct:__anon104	access:public
nDstKeyLen	../env/NDK.h	/^    int 	nDstKeyLen;			\/**< 目的密钥长度,8,16,24,或12=sizeof(ST_EXTEND_KEYBLOCK) *\/$/;"	m	struct:__anon36	access:public
nDstKeyLen	../inc/NDK-bak.h	/^    int 	nDstKeyLen;			\/**< length of destination key:8, 16, 24 *\/$/;"	m	struct:__anon119	access:public
nFontByte	../env/NDK.h	/^	int nFontByte;					   \/**<需要获取的字在字库中占字节数*\/$/;"	m	struct:__anon19	access:public
nFontByte	../inc/NDK-bak.h	/^	int nFontByte;					   \/**<the number of bytes of desired character occupies in font library*\/$/;"	m	struct:__anon103	access:public
nFrequency	../env/NDK.h	/^	int nFrequency;                             \/**<路由器的频率*\/$/;"	m	struct:__anon76	access:public
nFrequency	../inc/NDK-bak.h	/^	int nFrequency;                             \/**<The frequency of the router*\/$/;"	m	struct:__anon151	access:public
nIsHZ	../env/NDK.h	/^	int  nIsHZ;                     \/**<注册的字库是汉字字库还是ASCII字库，1:HZ  0:ZM*\/$/;"	m	struct:__anon20	access:public
nIsHZ	../inc/NDK-bak.h	/^	int  nIsHZ;                     \/**<is the font library registered a Chinese font lib or ASCII character lib. 1: HZ  0: ZM*\/$/;"	m	struct:__anon104	access:public
nIsMaster	../env/NDK.h	/^    int		nIsMaster;									\/**<主控标志 *\/$/;"	m	struct:APPINFO	access:public
nIsMaster	../inc/NDK-bak.h	/^    int		nIsMaster;									\/**<master control symbol*\/$/;"	m	struct:APPINFO	access:public
nLen	../env/NDK.h	/^    int 	nLen;				\/**< 校验数据区长度 *\/$/;"	m	struct:__anon37	access:public
nLen	../inc/NDK-bak.h	/^    int 	nLen;				\/**< check data area length *\/$/;"	m	struct:__anon120	access:public
nLen	../libapi/ltool.h	/^    int                     nLen;			\/**< 数据域最大长度 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
nLen	../libapi/ltool.h	/^    int    nLen;$/;"	m	struct:STISO_FIELD	access:public
nMinSQVal	../env/NDK.h	/^    unsigned char nMinSQVal;	\/**<初始化时，允许的最小的信号值*\/$/;"	m	struct:__anon50	access:public
nMinSQVal	../inc/NDK-bak.h	/^    unsigned char nMinSQVal;	\/**<minimum signal value allowed during initialization*\/$/;"	m	struct:__anon127	access:public
nNum	../env/NDK.h	/^	int  nNum;				    	\/**<注册号,支持0~7注册号*\/$/;"	m	struct:__anon20	access:public
nNum	../inc/NDK-bak.h	/^	int  nNum;				    	\/**<Register No, support 0~7 register No.*\/$/;"	m	struct:__anon104	access:public
nOff	../libapi/ltool.h	/^    int    nOff;					\/**< 指向iso->databuf缓冲区的偏移，数据中不含长度类型的几个字节 *\/$/;"	m	struct:STISO_FIELD	access:public
nOffset	../env/NDK.h	/^	int nOffset;						\/**<需要获取的字在字库中的依移量*\/$/;"	m	struct:__anon19	access:public
nOffset	../inc/NDK-bak.h	/^	int nOffset;						\/**<the offset of desired character in font library*\/$/;"	m	struct:__anon103	access:public
nPPPFlag	../env/NDK.h	/^    unsigned int nPPPFlag;	\/**<是否支持维持长连接标识，根据需要传入相对应的宏定义*\/$/;"	m	struct:__anon50	access:public
nPPPFlag	../inc/NDK-bak.h	/^    unsigned int nPPPFlag;	\/**<flag that indicates if long-polling maintenance is supported; assign proper macro definition if necessary *\/$/;"	m	struct:__anon127	access:public
nPPPHostIP	../env/NDK.h	/^    char nPPPHostIP[20];		\/**<维持长链接需要PIN的主机IP*\/$/;"	m	struct:__anon50	access:public
nPPPHostIP	../inc/NDK-bak.h	/^    char nPPPHostIP[20];		\/**<host IP that long-polling requires to PIN*\/$/;"	m	struct:__anon127	access:public
nPosition	../inc/key.h	/^	int nPosition;$/;"	m	struct:__anon83	access:public
nSeriNo	../env/NDK.h	/^    int		nSeriNo;									\/**<编号,V2版保留,但意义不同	*\/$/;"	m	struct:APPINFO	access:public
nSeriNo	../inc/NDK-bak.h	/^    int		nSeriNo;									\/**<Serial No. V2 reserves it, but the meaning differs	*\/$/;"	m	struct:APPINFO	access:public
nUsed	../libapi/ltool.h	/^    int        		nUsed;$/;"	m	struct:STISODataStru	access:public
nValue	../inc/NDK-bak.h	/^	int nValue;			\/**<statistic*\/$/;"	m	struct:st_ss_output	access:public
name	../inc/PriKeyDownload.h	/^	char name[2][MAX_MENU_NAME];$/;"	m	struct:st_item_details	access:public
name	../inc/libconfig.h	/^  char *name;$/;"	m	struct:config_setting_t	access:public
name	../inc/selftest.h	/^	char name[2][MAX_MENU_NAME];$/;"	m	struct:st_item_details	access:public
name	../libapi/libconfig.h	/^  char *name;$/;"	m	struct:config_setting_t	access:public
ndbm	../env/NDK.h	/^	int ndbm;\/**<信号强度*\/$/;"	m	struct:station_info	access:public
ndk_thread_state	../env/NDK.h	/^typedef enum ndk_thread_state$/;"	g
ndk_thread_state	../inc/NDK-bak.h	/^typedef enum ndk_thread_state$/;"	g
nettype	../inc/theme.h	/^	image_t nettype[3];$/;"	m	struct:__anon165	access:public
next	../inc/list.h	/^	void * next;    \/**< 指向下一个节点 *\/$/;"	m	struct:__anon86	access:public
next	../inc/parsecfg.h	/^	struct cfgList_tag *next;$/;"	m	struct:cfgList_tag	typeref:struct:cfgList_tag::cfgList_tag	access:public
node	../inc/list.h	/^	list_node_t * node; \/**< 指向第一个结点 *\/$/;"	m	struct:__anon87	access:public
notifier_add	../env/widget.h	/^void notifier_add(widget_t * notify);$/;"	p	signature:(widget_t * notify)
notifier_free	../env/widget.h	/^void notifier_free(void);$/;"	p	signature:(void)
notifier_new	../env/widget.h	/^int notifier_new(int timeoutsec);$/;"	p	signature:(int timeoutsec)
notifier_remove	../env/widget.h	/^void notifier_remove(widget_t * notify);$/;"	p	signature:(widget_t * notify)
notifier_start	../env/widget.h	/^void notifier_start(void);$/;"	p	signature:(void)
notifier_stop	../env/widget.h	/^void notifier_stop(void);$/;"	p	signature:(void)
notify_attach_update	../env/widget.h	/^void notify_attach_update(widget_t * noti, void (*update)(widget_t *), int (*need_update)(widget_t *));$/;"	p	signature:(widget_t * noti, void (*update)(widget_t *), int (*need_update)(widget_t *))
notify_destroy	../env/widget.h	/^void notify_destroy(widget_t * noti);$/;"	p	signature:(widget_t * noti)
notify_new	../env/widget.h	/^widget_t * notify_new(widget_t * parent, int x, int y, int w, int h, int req_inter);$/;"	p	signature:(widget_t * parent, int x, int y, int w, int h, int req_inter)
notify_set_inter	../env/widget.h	/^int notify_set_inter(widget_t * noti, int newinter);$/;"	p	signature:(widget_t * noti, int newinter)
num_elt	../inc/list.h	/^	int num_elt;		\/**< 节点总数 *\/$/;"	m	struct:__anon87	access:public
num_filenames	../inc/libconfig.h	/^  unsigned int num_filenames;$/;"	m	struct:config_t	access:public
num_filenames	../libapi/libconfig.h	/^  unsigned int num_filenames;$/;"	m	struct:config_t	access:public
operlog	../inc/oper.h	/^extern int operlog(int operlevel);$/;"	p	signature:(int operlevel)
operlog	../src/oper.c	/^int operlog(int operlevel)$/;"	f	signature:(int operlevel)
opt2_id	../inc/tr31_format.h	/^		uint8_t opt2_id[2];		\/* The second optional block, for DUKPT KSN value*\/$/;"	m	struct:__anon166	access:public
opt2_len	../inc/tr31_format.h	/^		uint8_t opt2_len[2];	\/*optional block length*\/$/;"	m	struct:__anon166	access:public
opt_id	../inc/tr31_format.h	/^		uint8_t opt_id[2];      \/* The first optional block, for key index information*\/$/;"	m	struct:__anon166	access:public
opt_len	../inc/tr31_format.h	/^		uint8_t opt_len[2];		\/*optional block length*\/$/;"	m	struct:__anon166	access:public
option_nr	../inc/tr31_format.h	/^        uint8_t option_nr[2];   \/* Numbers of optional blocks *\/$/;"	m	struct:__anon166	access:public
owner	../inc/PriKeyDownload.h	/^    unsigned char owner[32];            \/*私钥所有方*\/$/;"	m	struct:__anon161	access:public
pGet	../libapi/ltool.h	/^    FIELD_LENGTH_GET	pGet;		\/**< 取出长度时调用的函数 *\/$/;"	m	struct:STISO_FIELD_LENGTH_CALC	access:public
pPack	../libapi/ltool.h	/^    FIELD_PACKAGER_PACK		pPack;			\/**< 打包函数指针 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
pSet	../libapi/ltool.h	/^    FIELD_LENGTH_SET	pSet;		\/**< 设置长度时调用的函数 *\/$/;"	m	struct:STISO_FIELD_LENGTH_CALC	access:public
pUnpack	../libapi/ltool.h	/^    FIELD_PACKAGER_UNPACK	pUnpack;		\/**< 解包函数指针 *\/$/;"	m	struct:STISO_FIELD_DEF	access:public
panel_attach_key_press	../env/widget.h	/^void panel_attach_key_press(widget_t * panel, void (*on_click)(int ascii));$/;"	p	signature:(widget_t * panel, void (*on_click)(int ascii))
panel_attach_key_with_return	../env/widget.h	/^void panel_attach_key_with_return(widget_t * panel, int (*on_click)(int ascii));$/;"	p	signature:(widget_t * panel, int (*on_click)(int ascii))
panel_new	../env/widget.h	/^widget_t * panel_new (widget_t * window, char * bgicon);$/;"	p	signature:(widget_t * window, char * bgicon)
panel_select	../env/widget.h	/^widget_t* panel_select(widget_t * panel);$/;"	p	signature:(widget_t * panel)
parameterName	../inc/parsecfg.h	/^	char *parameterName;$/;"	m	struct:__anon158	access:public
parent	../inc/libconfig.h	/^  struct config_setting_t *parent;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_setting_t	access:public
parent	../libapi/libconfig.h	/^  struct config_setting_t *parent;$/;"	m	struct:config_setting_t	typeref:struct:config_setting_t::config_setting_t	access:public
parse_ini	../src/parsecfg.c	/^static int parse_ini(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line, int *section)$/;"	f	file:	signature:(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line, int *section)
parse_ini	../src/parsecfg.c	/^static int parse_ini(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line, int *section);$/;"	p	file:	signature:(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line, int *section)
parse_simple	../src/parsecfg.c	/^static int parse_simple(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line)$/;"	f	file:	signature:(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line)
parse_simple	../src/parsecfg.c	/^static int parse_simple(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line);$/;"	p	file:	signature:(const char *file, FILE *fp, char *ptr, cfgStruct cfg[], int *line)
parse_values_between_braces	../src/parsecfg.c	/^static int parse_values_between_braces(const char *file, FILE *fp, const char *parameter, cfgStruct cfg[], int *line, cfgFileType type, int section, const char *parameter_buf, int parameter_line)$/;"	f	file:	signature:(const char *file, FILE *fp, const char *parameter, cfgStruct cfg[], int *line, cfgFileType type, int section, const char *parameter_buf, int parameter_line)
parse_values_between_braces	../src/parsecfg.c	/^static int parse_values_between_braces(const char *file, FILE *fp, const char *parameter, cfgStruct cfg[], int *line, cfgFileType type, int section, const char *parameter_buf, int parameter_line);$/;"	p	file:	signature:(const char *file, FILE *fp, const char *parameter, cfgStruct cfg[], int *line, cfgFileType type, int section, const char *parameter_buf, int parameter_line)
parse_word	../src/parsecfg.c	/^static char *parse_word(char *ptr, char **word, cfgKeywordValue word_type)$/;"	f	file:	signature:(char *ptr, char **word, cfgKeywordValue word_type)
parse_word	../src/parsecfg.c	/^static char *parse_word(char *ptr, char **word, cfgKeywordValue word_type);$/;"	p	file:	signature:(char *ptr, char **word, cfgKeywordValue word_type)
parsecfg_maximum_section	../src/parsecfg.c	/^static int parsecfg_maximum_section;$/;"	v	file:
parsecfg_section_name	../src/parsecfg.c	/^static char **parsecfg_section_name = NULL;$/;"	v	file:
pblock	../env/NDK.h	/^	char *pblock;				\/**< 密钥数据指针*\/$/;"	m	struct:__anon35	access:public
pblock	../inc/NDK-bak.h	/^	char *pblock;				\/**< The key data pointer*\/$/;"	m	struct:__anon118	access:public
pcAddParam	../env/NDK.h	/^		char *pcAddParam;		\/**<附加参数*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
pcAddParam	../inc/NDK-bak.h	/^		char *pcAddParam;		\/**<additional parameters*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
pcAtCmd	../env/NDK.h	/^		char *pcAtCmd;			\/**<命令字串*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
pcAtCmd	../inc/NDK-bak.h	/^		char *pcAtCmd;			\/**<command string*\/$/;"	m	struct:NDK_WL_ATCMD	access:public
pcFUNC	../env/NDK.h	/^typedef const pvFUNC       pcFUNC;$/;"	t
pcFUNC	../inc/NDK-bak.h	/^typedef const pvFUNC       pcFUNC;$/;"	t
picture_attach_mouse_down	../env/widget.h	/^void picture_attach_mouse_down(widget_t* picture, void (*on_mouse_down)(int x, int y));$/;"	p	signature:(widget_t* picture, void (*on_mouse_down)(int x, int y))
picture_attach_mouse_up	../env/widget.h	/^void picture_attach_mouse_up(widget_t* picture, void (*on_mouse_up)(int x, int y));$/;"	p	signature:(widget_t* picture, void (*on_mouse_up)(int x, int y))
picture_change_bg	../env/widget.h	/^int picture_change_bg(widget_t * picture,char* bgicon,int type,int draw);$/;"	p	signature:(widget_t * picture,char* bgicon,int type,int draw)
picture_destroy	../env/widget.h	/^void picture_destroy(widget_t * pic);$/;"	p	signature:(widget_t * pic)
picture_new	../env/widget.h	/^widget_t * picture_new(widget_t * parent, char * bgicon, int x, int y, int w, int h);$/;"	p	signature:(widget_t * parent, char * bgicon, int x, int y, int w, int h)
picture_set_position	../env/widget.h	/^void picture_set_position(widget_t * picture, position_t imagepos, int draw);$/;"	p	signature:(widget_t * picture, position_t imagepos, int draw)
position_t	../env/widget.h	/^}position_t;$/;"	t	typeref:enum:__anon79
prime	../env/NDK.h	/^    uchar prime[2][MAX_RSA_PRIME_LEN+1];      	\/**< pq素数 *\/$/;"	m	struct:__anon25	access:public
prime	../inc/NDK-bak.h	/^    uchar prime[2][MAX_RSA_PRIME_LEN+1];      	\/**< pq prime number *\/$/;"	m	struct:__anon108	access:public
primeExponent	../env/NDK.h	/^    uchar primeExponent[2][MAX_RSA_PRIME_LEN+1]; 	\/**< 素数与指数除法值 *\/$/;"	m	struct:__anon25	access:public
primeExponent	../inc/NDK-bak.h	/^    uchar primeExponent[2][MAX_RSA_PRIME_LEN+1]; 	\/**< division value of prime number and exponent *\/$/;"	m	struct:__anon108	access:public
progress_bar	../inc/theme.h	/^	image_t progress_bar[2];$/;"	m	struct:__anon165	access:public
progress_bar_new	../env/widget.h	/^widget_t *progress_bar_new(widget_t *parent,int x,int y,int w,int h,unsigned int max);$/;"	p	signature:(widget_t *parent,int x,int y,int w,int h,unsigned int max)
progress_bar_reset	../env/widget.h	/^void progress_bar_reset(widget_t* widget);$/;"	p	signature:(widget_t* widget)
progress_bar_step	../env/widget.h	/^void progress_bar_step(widget_t* pg);$/;"	p	signature:(widget_t* pg)
psAddr	../env/NDK.h	/^	char *psAddr;					      \/\/\/< IP 地址（ASCIIz）.$/;"	m	struct:st_socket_addr	access:public
psAddr	../inc/NDK-bak.h	/^	char *psAddr;					      \/\/\/< IP address（ASCIIz）.$/;"	m	struct:st_socket_addr	access:public
psEthDnsPrimary	../env/NDK.h	/^    char *psEthDnsPrimary;      \/**<网络首DNS地址*\/$/;"	m	struct:__anon74	access:public
psEthDnsPrimary	../inc/NDK-bak.h	/^    char *psEthDnsPrimary;      \/**<Network first DNS address*\/$/;"	m	struct:__anon149	access:public
psEthDnsSecondary	../env/NDK.h	/^    char *psEthDnsSecondary;    \/**<网络次DNS地址*\/$/;"	m	struct:__anon74	access:public
psEthDnsSecondary	../inc/NDK-bak.h	/^    char *psEthDnsSecondary;    \/**<Network times DNS address*\/$/;"	m	struct:__anon149	access:public
psEthGateway	../env/NDK.h	/^    char *psEthGateway;         \/**<网络网关地址*\/$/;"	m	struct:__anon74	access:public
psEthGateway	../inc/NDK-bak.h	/^    char *psEthGateway;         \/**<Network gateway address*\/$/;"	m	struct:__anon149	access:public
psEthIp	../env/NDK.h	/^    char *psEthIp;              \/**<终端IP地址*\/$/;"	m	struct:__anon74	access:public
psEthIp	../inc/NDK-bak.h	/^    char *psEthIp;              \/**<The terminal IP address*\/$/;"	m	struct:__anon149	access:public
psEthNetmask	../env/NDK.h	/^    char *psEthNetmask;         \/**<网络掩码地址*\/$/;"	m	struct:__anon74	access:public
psEthNetmask	../inc/NDK-bak.h	/^    char *psEthNetmask;         \/**<Netmask address*\/$/;"	m	struct:__anon149	access:public
pszKey	../env/NDK.h	/^    char *pszKey;               \/**<路由器的密码*\/$/;"	m	struct:__anon74	access:public
pszKey	../inc/NDK-bak.h	/^    char *pszKey;               \/**<The router's password*\/$/;"	m	struct:__anon149	access:public
pszM1AID	../libapi/lposcard.h	/^	char *pszM1AID;			\/**<对2.4G读头有效m1卡的应用AID,该值为NULL时采用电信集团默认AID*\/$/;"	m	struct:__anon176	access:public
pszName	../env/NDK.h	/^	char *pszName;	    			\/**<字库名或字库所在路径*\/$/;"	m	struct:__anon20	access:public
pszName	../inc/NDK-bak.h	/^	char *pszName;	    			\/**<font library name or its path*\/$/;"	m	struct:__anon104	access:public
publicExponent	../env/NDK.h	/^	uchar publicExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< 公钥指数 *\/$/;"	m	struct:__anon25	access:public
publicExponent	../inc/NDK-bak.h	/^	uchar publicExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< public key exponent *\/$/;"	m	struct:__anon108	access:public
pvFUNC	../env/NDK.h	/^typedef void        ( *pvFUNC )( void );$/;"	t
pvFUNC	../inc/NDK-bak.h	/^typedef void        ( *pvFUNC )( void );$/;"	t
radiobox_attach_key	../env/widget.h	/^void radiobox_attach_key(widget_t * widget, int ascii);$/;"	p	signature:(widget_t * widget, int ascii)
radiobox_attach_oncheck	../env/widget.h	/^void radiobox_attach_oncheck(widget_t * widget, void (*on_check)(void));$/;"	p	signature:(widget_t * widget, void (*on_check)(void))
radiobox_destroy	../env/widget.h	/^void radiobox_destroy(widget_t * widget);$/;"	p	signature:(widget_t * widget)
radiobox_get_check	../env/widget.h	/^int radiobox_get_check(widget_t * widget);$/;"	p	signature:(widget_t * widget)
radiobox_group	../env/widget.h	/^int radiobox_group(widget_t * wida, widget_t * widb);$/;"	p	signature:(widget_t * wida, widget_t * widb)
radiobox_new	../env/widget.h	/^widget_t * radiobox_new(widget_t * parent, int x, int y, int w, char * string);$/;"	p	signature:(widget_t * parent, int x, int y, int w, char * string)
radiobox_set_check	../env/widget.h	/^int radiobox_set_check(widget_t * widget, int draw);$/;"	p	signature:(widget_t * widget, int draw)
rdi_off	../inc/theme.h	/^    image_t rdi_off[NUM_STA];$/;"	m	struct:__anon165	access:public
rdi_on	../inc/theme.h	/^    image_t rdi_on[NUM_STA];$/;"	m	struct:__anon165	access:public
recv_csr	../src/signcert.c	/^int recv_csr()$/;"	f
reserv	../inc/tr31_format.h	/^	uint8_t reserv[3];      	\/* Reserved for future use *\/$/;"	m	struct:__anon167	access:public
reserv	../inc/tr31_format.h	/^        uint8_t reserv[2];      \/* Reserved for future use *\/$/;"	m	struct:__anon166	access:public
reverse	../env/NDK.h	/^    uchar reverse[4];							\/**< 补齐4字节，用于密钥存储*\/$/;"	m	struct:__anon39	access:public
reverse	../inc/NDK-bak.h	/^    uchar reverse[4];							\/**< Swallow the 4 bytes, used in the key store*\/$/;"	m	struct:__anon122	access:public
rgb_color	../env/widget.h	/^color_t rgb_color(int r, int g, int b);$/;"	p	signature:(int r, int g, int b)
rm_first_spaces	../src/parsecfg.c	/^static char *rm_first_spaces(char *ptr)$/;"	f	file:	signature:(char *ptr)
rm_first_spaces	../src/parsecfg.c	/^static char *rm_first_spaces(char *ptr);$/;"	p	file:	signature:(char *ptr)
root	../inc/libconfig.h	/^  config_setting_t *root;$/;"	m	struct:config_t	access:public
root	../libapi/libconfig.h	/^  config_setting_t *root;$/;"	m	struct:config_t	access:public
s	../libapi/ltool.h	/^	char s[2];$/;"	m	struct:tagRecFile	access:public
sBitmap	../libapi/ltool.h	/^    char			sBitmap[256];$/;"	m	struct:STISODataStru	access:public
sCheckBuf	../env/NDK.h	/^    uchar 	sCheckBuf[128];		\/**< 校验数据缓冲区 *\/$/;"	m	struct:__anon37	access:public
sCheckBuf	../inc/NDK-bak.h	/^    uchar 	sCheckBuf[128];		\/**< check data buffer *\/$/;"	m	struct:__anon120	access:public
sDstKeyValue	../env/NDK.h	/^    uchar 	sDstKeyValue[24];	\/**< 写入密钥的内容，当密钥长度等于12时， 当做ST_EXTEND_KEYBLOCK结构使用*\/$/;"	m	struct:__anon36	access:public
sDstKeyValue	../inc/NDK-bak.h	/^    uchar 	sDstKeyValue[24];	\/**< content to write to key *\/$/;"	m	struct:__anon119	access:public
sEssid	../env/NDK.h	/^	char sEssid[WIFI_IW_ESSID_MAX_SIZE + 1];    \/**<路由器名称*\/$/;"	m	struct:__anon76	access:public
sEssid	../inc/NDK-bak.h	/^	char sEssid[WIFI_IW_ESSID_MAX_SIZE + 1];    \/**<Router Name *\/$/;"	m	struct:__anon151	access:public
sExp	../env/NDK.h	/^	uchar	sExp[4];       				\/**< 加密公钥指数,高字节在前,低字节在后,不足位前补0 *\/$/;"	m	struct:__anon38	access:public
sExp	../inc/NDK-bak.h	/^	uchar	sExp[4];       				\/**< modulus for public key for encryption; big-endian, fill in with 0 if vacancy*\/$/;"	m	struct:__anon121	access:public
sExponent	../env/NDK.h	/^    uchar sExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< 指数 *\/$/;"	m	struct:__anon39	access:public
sExponent	../inc/NDK-bak.h	/^    uchar sExponent[MAX_RSA_MODULUS_LEN+1]; 	\/**< exponent *\/$/;"	m	struct:__anon122	access:public
sIccRandom	../env/NDK.h	/^	uchar	sIccRandom[8];   			\/**< 从卡片取得的随机数  *\/$/;"	m	struct:__anon38	access:public
sIccRandom	../inc/NDK-bak.h	/^	uchar	sIccRandom[8];   			\/**< random number obtained from card  *\/$/;"	m	struct:__anon121	access:public
sKey	../env/NDK.h	/^	char sKey[WIFI_IW_ENCODING_TOKEN_MAX + 1];  \/**<路由器的密码*\/$/;"	m	struct:__anon76	access:public
sKey	../inc/NDK-bak.h	/^	char sKey[WIFI_IW_ENCODING_TOKEN_MAX + 1];  \/**<The router's password*\/$/;"	m	struct:__anon151	access:public
sKeyModeStr	../env/NDK.h	/^	char sKeyModeStr[128];                      \/**<路由器的安全加密模式*\/$/;"	m	struct:__anon76	access:public
sKeyModeStr	../inc/NDK-bak.h	/^	char sKeyModeStr[128];                      \/**<The router's security encryption mode*\/$/;"	m	struct:__anon151	access:public
sMod	../env/NDK.h	/^	uchar	sMod[MAX_RSA_MODULUS_LEN];  \/**< 加密公钥模数,高字节在前,低字节在后,不足位前补0 *\/$/;"	m	struct:__anon38	access:public
sMod	../inc/NDK-bak.h	/^	uchar	sMod[MAX_RSA_MODULUS_LEN];  \/**< modulus for public key for encryption; big-endian, fill in with 0 if vacancy*\/$/;"	m	struct:__anon121	access:public
sModulus	../env/NDK.h	/^    uchar sModulus[MAX_RSA_MODULUS_LEN+1];  	\/**< 模 *\/$/;"	m	struct:__anon39	access:public
sModulus	../inc/NDK-bak.h	/^    uchar sModulus[MAX_RSA_MODULUS_LEN+1];  	\/**< modulus *\/$/;"	m	struct:__anon122	access:public
sSignal	../env/NDK.h	/^	char sSignal[16];                           \/**<路由器的信号值*\/$/;"	m	struct:__anon76	access:public
sSignal	../inc/NDK-bak.h	/^	char sSignal[16];                           \/**<The router signal values*\/$/;"	m	struct:__anon151	access:public
s_nAuxPort	../src/Pri_DownloadTool.c	/^static int s_nAuxPort=PORT_NUM_COM2;\/\/PORT_NUM_USB;\/\/$/;"	v	file:
scrollbar_bg_h	../inc/theme.h	/^	image_t scrollbar_bg_h;$/;"	m	struct:__anon165	access:public
scrollbar_bg_v	../inc/theme.h	/^	image_t scrollbar_bg_v;$/;"	m	struct:__anon165	access:public
scrollbar_h	../inc/theme.h	/^	image_t scrollbar_h;$/;"	m	struct:__anon165	access:public
scrollbar_v	../inc/theme.h	/^	image_t scrollbar_v;$/;"	m	struct:__anon165	access:public
sec_key_arch	../inc/key.h	/^enum sec_key_arch {$/;"	g
send_csr	../src/genreq.c	/^int send_csr(void)$/;"	f	signature:(void)
show_csr	../src/signcert.c	/^int show_csr()$/;"	f
single_or_double_quote	../src/parsecfg.c	/^static void single_or_double_quote(const char *str, char *ret)$/;"	f	file:	signature:(const char *str, char *ret)
single_or_double_quote	../src/parsecfg.c	/^static void single_or_double_quote(const char *str, char *ret);$/;"	p	file:	signature:(const char *str, char *ret)
sp_disp_update	../env/widget.h	/^void sp_disp_update(int x,int y,int w,int h,int lcdbuf);$/;"	p	signature:(int x,int y,int w,int h,int lcdbuf)
sp_draw_hline	../env/widget.h	/^void sp_draw_hline(int x1,int x2,int y,color_t color,int lcdbuf);$/;"	p	signature:(int x1,int x2,int y,color_t color,int lcdbuf)
sp_draw_vline	../env/widget.h	/^void sp_draw_vline(int x,int y1,int y2,color_t color,int lcdbuf);$/;"	p	signature:(int x,int y1,int y2,color_t color,int lcdbuf)
sp_fill_rect	../env/widget.h	/^void sp_fill_rect(int x,int y,int w,int h,color_t color,int lcdbuf);$/;"	p	signature:(int x,int y,int w,int h,color_t color,int lcdbuf)
sp_image_draw	../env/widget.h	/^void sp_image_draw(int x,int y,int w,int h,image_t * img,int lcdbuf);$/;"	p	signature:(int x,int y,int w,int h,image_t * img,int lcdbuf)
sp_set_pixel	../env/widget.h	/^void sp_set_pixel(int x,int y,color_t color,int lcdbuf);$/;"	p	signature:(int x,int y,color_t color,int lcdbuf)
stLANGUE	../inc/selftest.h	/^} stLANGUE;$/;"	t	typeref:enum:__anon162
stMainStation	../env/NDK.h	/^	ST_STATION_INFO stMainStation;\/**<GPRS模块附着主基站*\/$/;"	m	struct:__anon44	access:public
stNeighborStation	../env/NDK.h	/^	ST_STATION_INFO stNeighborStation[6];\/**<GPRS无线模块的临近基站*\/$/;"	m	struct:__anon44	access:public
st_atime	../src/PriKey_app.c	/^	long		st_atime;	\/* Time of last access.  *\/$/;"	m	struct:stat	file:	access:public
st_atime_nsec	../src/PriKey_app.c	/^	unsigned long	st_atime_nsec;$/;"	m	struct:stat	file:	access:public
st_blksize	../src/PriKey_app.c	/^	int		st_blksize;	\/* Optimal block size for I\/O.  *\/$/;"	m	struct:stat	file:	access:public
st_blocks	../src/PriKey_app.c	/^	long		st_blocks;	\/* Number 512-byte blocks allocated. *\/$/;"	m	struct:stat	file:	access:public
st_ctime	../src/PriKey_app.c	/^	long		st_ctime;	\/* Time of last status change.  *\/$/;"	m	struct:stat	file:	access:public
st_ctime_nsec	../src/PriKey_app.c	/^	unsigned long	st_ctime_nsec;$/;"	m	struct:stat	file:	access:public
st_dev	../src/PriKey_app.c	/^	unsigned long	st_dev;		\/* Device.  *\/$/;"	m	struct:stat	file:	access:public
st_gid	../src/PriKey_app.c	/^	unsigned int	st_gid;		\/* Group ID of the file's group. *\/$/;"	m	struct:stat	file:	access:public
st_ino	../src/PriKey_app.c	/^	unsigned long	st_ino;		\/* File serial number.  *\/$/;"	m	struct:stat	file:	access:public
st_item_details	../inc/PriKeyDownload.h	/^typedef struct st_item_details{$/;"	s
st_item_details	../inc/PriKeyDownload.h	/^}st_item_details;$/;"	t	typeref:struct:st_item_details
st_item_details	../inc/selftest.h	/^typedef struct st_item_details{$/;"	s
st_item_details	../inc/selftest.h	/^}st_item_details;$/;"	t	typeref:struct:st_item_details
st_item_details::func	../inc/PriKeyDownload.h	/^	int (*func)(char *);$/;"	m	struct:st_item_details	access:public
st_item_details::func	../inc/selftest.h	/^	int (*func)(char *);$/;"	m	struct:st_item_details	access:public
st_item_details::name	../inc/PriKeyDownload.h	/^	char name[2][MAX_MENU_NAME];$/;"	m	struct:st_item_details	access:public
st_item_details::name	../inc/selftest.h	/^	char name[2][MAX_MENU_NAME];$/;"	m	struct:st_item_details	access:public
st_mode	../src/PriKey_app.c	/^	unsigned int	st_mode;	\/* File mode.  *\/$/;"	m	struct:stat	file:	access:public
st_mtime	../src/PriKey_app.c	/^	long		st_mtime;	\/* Time of last modification.  *\/$/;"	m	struct:stat	file:	access:public
st_mtime_nsec	../src/PriKey_app.c	/^	unsigned long	st_mtime_nsec;$/;"	m	struct:stat	file:	access:public
st_nlink	../src/PriKey_app.c	/^	unsigned int	st_nlink;	\/* Link count.  *\/$/;"	m	struct:stat	file:	access:public
st_rdev	../src/PriKey_app.c	/^	unsigned long	st_rdev;	\/* Device number, if device.  *\/$/;"	m	struct:stat	file:	access:public
st_size	../src/PriKey_app.c	/^	long		st_size;	\/* Size of file, in bytes.  *\/$/;"	m	struct:stat	file:	access:public
st_socket_addr	../env/NDK.h	/^typedef struct st_socket_addr$/;"	s
st_socket_addr	../inc/NDK-bak.h	/^typedef struct st_socket_addr$/;"	s
st_socket_addr::psAddr	../env/NDK.h	/^	char *psAddr;					      \/\/\/< IP 地址（ASCIIz）.$/;"	m	struct:st_socket_addr	access:public
st_socket_addr::psAddr	../inc/NDK-bak.h	/^	char *psAddr;					      \/\/\/< IP address（ASCIIz）.$/;"	m	struct:st_socket_addr	access:public
st_socket_addr::unAddrType	../env/NDK.h	/^	uint  unAddrType;	\/\/\/< 地址类型$/;"	m	struct:st_socket_addr	access:public
st_socket_addr::unAddrType	../inc/NDK-bak.h	/^	uint  unAddrType;	\/\/\/< address type$/;"	m	struct:st_socket_addr	access:public
st_socket_addr::usPort	../env/NDK.h	/^	ushort usPort;					      \/\/\/< IP 端口.$/;"	m	struct:st_socket_addr	access:public
st_socket_addr::usPort	../inc/NDK-bak.h	/^	ushort usPort;					      \/\/\/< IP port.$/;"	m	struct:st_socket_addr	access:public
st_ss_output	../inc/NDK-bak.h	/^typedef struct st_ss_output$/;"	s
st_ss_output::nDevMainID	../inc/NDK-bak.h	/^	int nDevMainID;      \/**<Equipment main ID*\/$/;"	m	struct:st_ss_output	access:public
st_ss_output::nDevMinorID	../inc/NDK-bak.h	/^	int nDevMinorID;    \/**<Device time ID*\/$/;"	m	struct:st_ss_output	access:public
st_ss_output::nValue	../inc/NDK-bak.h	/^	int nValue;			\/**<statistic*\/$/;"	m	struct:st_ss_output	access:public
st_uid	../src/PriKey_app.c	/^	unsigned int	st_uid;		\/* User ID of the file's owner.  *\/$/;"	m	struct:stat	file:	access:public
stat	../src/PriKey_app.c	/^struct stat {$/;"	s	file:
stat::__pad1	../src/PriKey_app.c	/^	unsigned long	__pad1;$/;"	m	struct:stat	file:	access:public
stat::__pad2	../src/PriKey_app.c	/^	int		__pad2;$/;"	m	struct:stat	file:	access:public
stat::__unused4	../src/PriKey_app.c	/^	unsigned int	__unused4;$/;"	m	struct:stat	file:	access:public
stat::__unused5	../src/PriKey_app.c	/^	unsigned int	__unused5;$/;"	m	struct:stat	file:	access:public
stat::st_atime	../src/PriKey_app.c	/^	long		st_atime;	\/* Time of last access.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_atime_nsec	../src/PriKey_app.c	/^	unsigned long	st_atime_nsec;$/;"	m	struct:stat	file:	access:public
stat::st_blksize	../src/PriKey_app.c	/^	int		st_blksize;	\/* Optimal block size for I\/O.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_blocks	../src/PriKey_app.c	/^	long		st_blocks;	\/* Number 512-byte blocks allocated. *\/$/;"	m	struct:stat	file:	access:public
stat::st_ctime	../src/PriKey_app.c	/^	long		st_ctime;	\/* Time of last status change.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_ctime_nsec	../src/PriKey_app.c	/^	unsigned long	st_ctime_nsec;$/;"	m	struct:stat	file:	access:public
stat::st_dev	../src/PriKey_app.c	/^	unsigned long	st_dev;		\/* Device.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_gid	../src/PriKey_app.c	/^	unsigned int	st_gid;		\/* Group ID of the file's group. *\/$/;"	m	struct:stat	file:	access:public
stat::st_ino	../src/PriKey_app.c	/^	unsigned long	st_ino;		\/* File serial number.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_mode	../src/PriKey_app.c	/^	unsigned int	st_mode;	\/* File mode.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_mtime	../src/PriKey_app.c	/^	long		st_mtime;	\/* Time of last modification.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_mtime_nsec	../src/PriKey_app.c	/^	unsigned long	st_mtime_nsec;$/;"	m	struct:stat	file:	access:public
stat::st_nlink	../src/PriKey_app.c	/^	unsigned int	st_nlink;	\/* Link count.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_rdev	../src/PriKey_app.c	/^	unsigned long	st_rdev;	\/* Device number, if device.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_size	../src/PriKey_app.c	/^	long		st_size;	\/* Size of file, in bytes.  *\/$/;"	m	struct:stat	file:	access:public
stat::st_uid	../src/PriKey_app.c	/^	unsigned int	st_uid;		\/* User ID of the file's owner.  *\/$/;"	m	struct:stat	file:	access:public
station_info	../env/NDK.h	/^typedef struct station_info$/;"	s
station_info::ndbm	../env/NDK.h	/^	int ndbm;\/**<信号强度*\/$/;"	m	struct:station_info	access:public
station_info::unCi	../env/NDK.h	/^	uint unCi;\/**<小区号码*\/$/;"	m	struct:station_info	access:public
station_info::unLac	../env/NDK.h	/^	uint unLac;\/**<位置区号码*\/$/;"	m	struct:station_info	access:public
station_info::unMCC	../env/NDK.h	/^	uint unMCC;  \/**<移动国家号*\/$/;"	m	struct:station_info	access:public
station_info::unMNC	../env/NDK.h	/^	uint unMNC;	\/**<移动网络号*\/$/;"	m	struct:station_info	access:public
statusbar_attach_key	../env/widget.h	/^void statusbar_attach_key(int ascii);$/;"	p	signature:(int ascii)
statusbar_disp	../env/widget.h	/^void statusbar_disp(int flag,int draw);$/;"	p	signature:(int flag,int draw)
statusbar_position	../env/widget.h	/^void statusbar_position(char position);$/;"	p	signature:(char position)
store_value	../src/parsecfg.c	/^static int store_value(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section)$/;"	f	file:	signature:(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section)
store_value	../src/parsecfg.c	/^static int store_value(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section);$/;"	p	file:	signature:(cfgStruct cfg[], const char *parameter, const char *value, cfgFileType type, int section)
str	../inc/parsecfg.h	/^	char *str;$/;"	m	struct:cfgList_tag	access:public
string_get_value	../env/widget.h	/^int string_get_value(widget_t * widget,char *value);$/;"	p	signature:(widget_t * widget,char *value)
string_new	../env/widget.h	/^widget_t * string_new(widget_t * parent, int x, int y,int w,int h,char * string);$/;"	p	signature:(widget_t * parent, int x, int y,int w,int h,char * string)
string_set_value	../env/widget.h	/^int string_set_value(widget_t * widget,char *value);$/;"	p	signature:(widget_t * widget,char *value)
strtobcd	../inc/PriKeyDownload.h	/^int strtobcd(char *pFilename,R_RSA_PRIVATE_KEY *prikey);$/;"	p	signature:(char *pFilename,R_RSA_PRIVATE_KEY *prikey)
strtobcd	../src/PriKey_app.c	/^int strtobcd(char *pFilename,R_RSA_PRIVATE_KEY *prikey)$/;"	f	signature:(char *pFilename,R_RSA_PRIVATE_KEY *prikey)
sunReverse	../env/NDK.h	/^    uint	sunReverse[3];\/**<sunReverse[0]值为非0值表示该应用为测试版本*\/$/;"	m	struct:APPINFO	access:public
sunReverse	../inc/NDK-bak.h	/^    uint	sunReverse[3];$/;"	m	struct:APPINFO	access:public
sval	../inc/libconfig.h	/^  char *sval;$/;"	m	union:config_value_t	access:public
sval	../libapi/libconfig.h	/^  char *sval;$/;"	m	union:config_value_t	access:public
sys_initconfig	../inc/PriKeyDownload.h	/^int sys_initconfig(char *path,config_t *cfg_file);$/;"	p	signature:(char *path,config_t *cfg_file)
sys_initconfig	../src/PriKey_app.c	/^int sys_initconfig(char *path,config_t *cfg_file)$/;"	f	signature:(char *path,config_t *cfg_file)
szApn	../env/NDK.h	/^    char szApn[64];			\/**<APN设置*\/$/;"	m	struct:__anon50	access:public
szApn	../inc/NDK-bak.h	/^    char szApn[64];			\/**<APN setting*\/$/;"	m	struct:__anon127	access:public
szAppName	../env/NDK.h	/^    uchar 	szAppName[NDK_APP_NAME_MAX_LEN + 1];		\/**<用户程序名称*\/$/;"	m	struct:APPINFO	access:public
szAppName	../inc/NDK-bak.h	/^    uchar 	szAppName[NDK_APP_NAME_MAX_LEN + 1];		\/**<user program name*\/$/;"	m	struct:APPINFO	access:public
szBuildTime	../env/NDK.h	/^    uchar	szBuildTime[NDK_APP_BUILD_TIME_LEN + 1];	\/**<文件编译时间*\/$/;"	m	struct:APPINFO	access:public
szBuildTime	../inc/NDK-bak.h	/^    uchar	szBuildTime[NDK_APP_BUILD_TIME_LEN + 1];	\/**<when file is compiled*\/$/;"	m	struct:APPINFO	access:public
szCheckValue	../inc/key.h	/^	char szCheckValue[CHKVALUELEN+1];$/;"	m	struct:__anon81	access:public
szCheckValue	../inc/key.h	/^	char szCheckValue[CHKVALUELEN\/2];$/;"	m	struct:__anon82	access:public
szContent	../libapi/lui.h	/^	char szContent[16];				\/**<项目内容         *\/$/;"	m	struct:__anon190	access:public
szDailNum	../env/NDK.h	/^    char szDailNum[32];		\/**<拨号号码,前面不带D*\/$/;"	m	struct:__anon50	access:public
szDailNum	../inc/NDK-bak.h	/^    char szDailNum[32];		\/**<dial number*\/$/;"	m	struct:__anon127	access:public
szDatabuf	../libapi/ltool.h	/^    unsigned char 	szDatabuf[MAX_MSG_LEN + MAX_FIELD_LEN];		\/**< 多留一个域的长度，防止溢出 *\/$/;"	m	struct:STISODataStru	access:public
szFileName	../libapi/ltool.h	/^	char szFileName[128];			\/**<记录文件名,有效的记录文件名长度为128*\/$/;"	m	struct:tagRecFile	access:public
szKEK	../inc/key.h	/^	char szKEK[KEKINDEX+1];$/;"	m	struct:__anon81	access:public
szKEK	../inc/key.h	/^	char szKEK[KEKINDEX\/2];$/;"	m	struct:__anon82	access:public
szKeyInfo	../inc/key.h	/^	char szKeyInfo[KEYINFOLEN+1];$/;"	m	struct:__anon81	access:public
szKeyInfo	../inc/key.h	/^	char szKeyInfo[KEYINFOLEN\/2];$/;"	m	struct:__anon82	access:public
szOperNo	../inc/oper.h	/^	char szOperNo[OPERCODELEN+1];$/;"	m	struct:__anon152	access:public
szPageDown	../libapi/lui.h	/^	char szPageDown[4+1];						\/**<翻页标题提示信息*\/$/;"	m	struct:__anon192	access:public
szPageUp	../libapi/lui.h	/^	char szPageUp[4+1];						\/**<翻页标题提示信息*\/$/;"	m	struct:__anon192	access:public
szPasswd	../inc/oper.h	/^	char szPasswd[12+1];$/;"	m	struct:__anon152	access:public
szPin	../env/NDK.h	/^    char szPin[31];				\/**<SIM卡PIN码*\/$/;"	m	struct:__anon50	access:public
szPin	../inc/NDK-bak.h	/^    char szPin[31];				\/**<SIM card PIN code*\/$/;"	m	struct:__anon127	access:public
szShopId	../inc/key.h	/^	char szShopId[SHOPIDLEN+1];$/;"	m	struct:__anon81	access:public
szShopId	../inc/key.h	/^	char szShopId[SHOPIDLEN+1];$/;"	m	struct:__anon83	access:public
szShopId	../inc/key.h	/^	char szShopId[SHOPIDLEN];$/;"	m	struct:__anon82	access:public
szTerminalId	../inc/key.h	/^	char szTerminalId[TERMINALIDLEN+1];$/;"	m	struct:__anon81	access:public
szTerminalId	../inc/key.h	/^	char szTerminalId[TERMINALIDLEN+1];$/;"	m	struct:__anon83	access:public
szTerminalId	../inc/key.h	/^	char szTerminalId[TERMINALIDLEN];$/;"	m	struct:__anon82	access:public
szText	../libapi/lui.h	/^	char szText[21][16+1];				\/**< 菜单提示信息,最大菜单数21*\/$/;"	m	struct:__anon191	access:public
szVerBuf	../env/NDK.h	/^    uchar	szVerBuf[NDK_APP_VER_MAX_LEN + 1];			\/**<用户程序版本信息*\/$/;"	m	struct:APPINFO	access:public
szVerBuf	../inc/NDK-bak.h	/^    uchar	szVerBuf[NDK_APP_VER_MAX_LEN + 1];			\/**<user program version info*\/$/;"	m	struct:APPINFO	access:public
tab_width	../inc/libconfig.h	/^  unsigned short tab_width;$/;"	m	struct:config_t	access:public
tab_width	../libapi/libconfig.h	/^  unsigned short tab_width;$/;"	m	struct:config_t	access:public
table_attach_destroy	../env/widget.h	/^void table_attach_destroy(widget_t * table, void (*destroy)(widget_t *));$/;"	p	signature:(widget_t * table, void (*destroy)(widget_t *))
table_attach_keypress	../env/widget.h	/^void table_attach_keypress(widget_t * _table, void (*on_click)(widget_t *tb,int ascii));$/;"	p	signature:(widget_t * _table, void (*on_click)(widget_t *tb,int ascii))
table_attach_mouse_release	../env/widget.h	/^void table_attach_mouse_release(widget_t * table, void (*_on_release)(widget_t *tb));$/;"	p	signature:(widget_t * table, void (*_on_release)(widget_t *tb))
table_attach_select	../env/widget.h	/^void table_attach_select(widget_t * table, void (*select)(int, int, void *));$/;"	p	signature:(widget_t * table, void (*select)(int, int, void *))
table_destroy	../env/widget.h	/^void table_destroy(widget_t * table);$/;"	p	signature:(widget_t * table)
table_focus_select	../env/widget.h	/^int table_focus_select(widget_t * table,int col,int row);$/;"	p	signature:(widget_t * table,int col,int row)
table_get_data	../env/widget.h	/^void * table_get_data(widget_t * table, int col, int row);$/;"	p	signature:(widget_t * table, int col, int row)
table_get_focus	../env/widget.h	/^int table_get_focus(widget_t * table,int *col,int *row);$/;"	p	signature:(widget_t * table,int *col,int *row)
table_get_string	../env/widget.h	/^int table_get_string(widget_t * table,int col,int row,char * str);$/;"	p	signature:(widget_t * table,int col,int row,char * str)
table_insert	../env/widget.h	/^int table_insert(widget_t * table, int col, int row, char * string, char * image, void * data);$/;"	p	signature:(widget_t * table, int col, int row, char * string, char * image, void * data)
table_new	../env/widget.h	/^widget_t * table_new(widget_t * parent, int x, int y, int w, int h,$/;"	p	signature:(widget_t * parent, int x, int y, int w, int h, int col_width, int row_width, position_t strpos, int autoalign)
table_remove	../env/widget.h	/^void table_remove(widget_t * table, int col, int row);$/;"	p	signature:(widget_t * table, int col, int row)
table_remove_color	../env/widget.h	/^int table_remove_color(widget_t * table,int col,int row);$/;"	p	signature:(widget_t * table,int col,int row)
table_set_color	../env/widget.h	/^int table_set_color(widget_t * table,int col,int row,color_t bg,color_t fg);$/;"	p	signature:(widget_t * table,int col,int row,color_t bg,color_t fg)
table_set_data	../env/widget.h	/^int table_set_data(widget_t * _table, int col, int row,char * data);$/;"	p	signature:(widget_t * _table, int col, int row,char * data)
table_set_focus	../env/widget.h	/^int table_set_focus(widget_t * table, int col, int row);$/;"	p	signature:(widget_t * table, int col, int row)
table_set_rim	../env/widget.h	/^void table_set_rim(widget_t * table,int rim);$/;"	p	signature:(widget_t * table,int rim)
table_set_scrollbar	../env/widget.h	/^void table_set_scrollbar(widget_t * _table,int scrollbar);$/;"	p	signature:(widget_t * _table,int scrollbar)
table_set_string	../env/widget.h	/^int table_set_string(widget_t * table,int col,int row,char * str);$/;"	p	signature:(widget_t * table,int col,int row,char * str)
table_set_target	../env/widget.h	/^void table_set_target(widget_t * table, int col, int row);$/;"	p	signature:(widget_t * table, int col, int row)
tagRecFile	../libapi/ltool.h	/^typedef struct tagRecFile$/;"	s
tagRecFile::cIsIndex	../libapi/ltool.h	/^	char cIsIndex;					\/**<是否需要建立索引文件，0x00不建立，0x01建立*\/$/;"	m	struct:tagRecFile	access:public
tagRecFile::s	../libapi/ltool.h	/^	char s[2];$/;"	m	struct:tagRecFile	access:public
tagRecFile::szFileName	../libapi/ltool.h	/^	char szFileName[128];			\/**<记录文件名,有效的记录文件名长度为128*\/$/;"	m	struct:tagRecFile	access:public
tagRecFile::unIndex1Len	../libapi/ltool.h	/^	unsigned int unIndex1Len;		\/**<索引字段1的长度    *\/$/;"	m	struct:tagRecFile	access:public
tagRecFile::unIndex1Start	../libapi/ltool.h	/^	unsigned int unIndex1Start;		\/**<索引字段1的起始位置*\/$/;"	m	struct:tagRecFile	access:public
tagRecFile::unIndex2Len	../libapi/ltool.h	/^	unsigned int unIndex2Len;		\/**<索引字段2的长度    *\/$/;"	m	struct:tagRecFile	access:public
tagRecFile::unIndex2Start	../libapi/ltool.h	/^	unsigned int unIndex2Start; 	\/**<索引字段2的起始位置*\/$/;"	m	struct:tagRecFile	access:public
tagRecFile::unMaxOneRecLen	../libapi/ltool.h	/^	unsigned int unMaxOneRecLen;	\/**<最大的单条记录长度 *\/  $/;"	m	struct:tagRecFile	access:public
test_send_csr	../src/genreq.c	/^int test_send_csr(void)$/;"	f	signature:(void)
text_attach_exit	../env/widget.h	/^void text_attach_exit(widget_t * text, void (*text_exit)(void* data,int yoffset));$/;"	p	signature:(widget_t * text, void (*text_exit)(void* data,int yoffset))
text_attach_key	../env/widget.h	/^void text_attach_key(widget_t * text,int pageup_key,int pagedown_key,int exit_key);$/;"	p	signature:(widget_t * text,int pageup_key,int pagedown_key,int exit_key)
text_attach_onclick	../env/widget.h	/^void text_attach_onclick(widget_t * text,void (*text_onclick)(void));$/;"	p	signature:(widget_t * text,void (*text_onclick)(void))
text_def	../inc/theme.h	/^	image_t text_def;$/;"	m	struct:__anon165	access:public
text_get_line	../env/widget.h	/^int text_get_line(widget_t *text);$/;"	p	signature:(widget_t *text)
text_new	../env/widget.h	/^widget_t * text_new(widget_t * parent, int x, int y, int w, int h);$/;"	p	signature:(widget_t * parent, int x, int y, int w, int h)
text_set_bg_color	../env/widget.h	/^void text_set_bg_color(widget_t * text, color_t bg, int draw);$/;"	p	signature:(widget_t * text, color_t bg, int draw)
text_set_bookmarks	../env/widget.h	/^void text_set_bookmarks(widget_t * text,int yoffset);$/;"	p	signature:(widget_t * text,int yoffset)
text_set_content	../env/widget.h	/^void text_set_content(widget_t * text, char * string, int draw);$/;"	p	signature:(widget_t * text, char * string, int draw)
text_set_fg_color	../env/widget.h	/^void text_set_fg_color(widget_t * text, color_t fg, int draw);$/;"	p	signature:(widget_t * text, color_t fg, int draw)
text_set_file	../env/widget.h	/^void text_set_file(widget_t * text, char * file, int draw);$/;"	p	signature:(widget_t * text, char * file, int draw)
text_set_line	../env/widget.h	/^int text_set_line(widget_t *text,int line,int draw);$/;"	p	signature:(widget_t *text,int line,int draw)
text_set_linewidth	../env/widget.h	/^void text_set_linewidth(widget_t * text, int linewidth, int draw);$/;"	p	signature:(widget_t * text, int linewidth, int draw)
textdomain	../inc/intl.h	39;"	d
theme_t	../inc/theme.h	/^}theme_t;$/;"	t	typeref:struct:__anon165
tit_bar	../inc/theme.h	/^    image_t tit_bar;$/;"	m	struct:__anon165	access:public
tit_cls	../inc/theme.h	/^    image_t tit_cls[NUM_STA];$/;"	m	struct:__anon165	access:public
tmp_entry	../src/PriKey_app.c	/^int tmp_entry(void)$/;"	f	signature:(void)
tr31_kbh_t	../inc/tr31_format.h	/^}tr31_kbh_t;$/;"	t	typeref:struct:__anon166
tr31_key_t	../inc/tr31_format.h	/^}tr31_key_t;$/;"	t	typeref:struct:__anon167
tr31block_format	../inc/tr31_format.h	/^extern int tr31block_format(uint8_t * out, uint32_t *outlen,$/;"	p	signature:(uint8_t * out, uint32_t *outlen, uint8_t * kek, int keklen, tr31_key_t * keyst )
type	../inc/libconfig.h	/^  short type;$/;"	m	struct:config_setting_t	access:public
type	../inc/parsecfg.h	/^	cfgValueType type;$/;"	m	struct:__anon158	access:public
type	../libapi/libconfig.h	/^  short type;$/;"	m	struct:config_setting_t	access:public
ucDefaultFlag	../libapi/lui.h	/^	uchar ucDefaultFlag;				\/**<是否默认1是，0否*\/$/;"	m	struct:__anon191	access:public
ucDstKeyIdx	../env/NDK.h	/^    uchar 	ucDstKeyIdx;		\/**< 目的密钥索引 *\/$/;"	m	struct:__anon36	access:public
ucDstKeyIdx	../inc/NDK-bak.h	/^    uchar 	ucDstKeyIdx;		\/**< index of destination key *\/$/;"	m	struct:__anon119	access:public
ucDstKeyType	../env/NDK.h	/^    uchar 	ucDstKeyType; 		\/**< 目的密钥的密钥类型，参考\\ref EM_SEC_KEY_TYPE "EM_SEC_KEY_TYPE" *\/$/;"	m	struct:__anon36	access:public
ucDstKeyType	../inc/NDK-bak.h	/^    uchar 	ucDstKeyType; 		\/**< type of destination key, refer to KEY_TYPE *\/$/;"	m	struct:__anon119	access:public
ucFlag	../libapi/lui.h	/^	uchar ucFlag;						\/**<菜单从0开始还是1开始*\/$/;"	m	struct:__anon191	access:public
ucIccRandomLen	../env/NDK.h	/^	uchar	ucIccRandomLen;   			\/**< 从卡片取得的随机数长  *\/$/;"	m	struct:__anon38	access:public
ucIccRandomLen	../inc/NDK-bak.h	/^	uchar	ucIccRandomLen;   			\/**< length of random number obtained from card  *\/$/;"	m	struct:__anon121	access:public
ucIfDHCP	../env/NDK.h	/^    uchar ucIfDHCP;             \/**<是否使用DHCP*\/$/;"	m	struct:__anon74	access:public
ucIfDHCP	../inc/NDK-bak.h	/^    uchar ucIfDHCP;             \/**<enable DHCP or not*\/$/;"	m	struct:__anon149	access:public
ucIndex	../libapi/lui.h	/^	uchar ucIndex;						\/**<菜单索引*\/$/;"	m	struct:__anon191	access:public
ucScrKeyIdx	../env/NDK.h	/^    uchar 	ucScrKeyIdx;		\/**< 发散该密钥的源密钥索引,索引一般从1开始,如果该变量为0,则表示这个密钥的写入是明文形式 *\/$/;"	m	struct:__anon36	access:public
ucScrKeyIdx	../inc/NDK-bak.h	/^    uchar 	ucScrKeyIdx;		\/**< index of source key that diffused this key; typically index starts from 1; if this variable equals 0, then this key is written in plaintext *\/$/;"	m	struct:__anon119	access:public
ucScrKeyType	../env/NDK.h	/^    uchar 	ucScrKeyType; 		\/**< 发散该密钥的源密钥的密钥类型，参考\\ref EM_SEC_KEY_TYPE "EM_SEC_KEY_TYPE", 不得低于ucDstKeyType所在的密钥级别*\/$/;"	m	struct:__anon36	access:public
ucScrKeyType	../inc/NDK-bak.h	/^    uchar 	ucScrKeyType; 		\/**< type of source key that diffused this key, refer to KEY_TYPE, it shall not be lower than key level ucDstKeyType is at*\/$/;"	m	struct:__anon119	access:public
ucSum	../libapi/lui.h	/^	uchar ucSum;						\/**<菜单总数*\/$/;"	m	struct:__anon191	access:public
uchar	../env/NDK.h	/^typedef unsigned char 	uchar;$/;"	t
uchar	../inc/NDK-bak.h	/^typedef unsigned char uchar;$/;"	t
uint	../env/NDK.h	/^typedef unsigned int 	uint;$/;"	t
uint	../inc/NDK-bak.h	/^typedef unsigned int uint;$/;"	t
ulong	../env/NDK.h	/^typedef unsigned long 	ulong;$/;"	t
ulong	../inc/NDK-bak.h	/^typedef unsigned long ulong;$/;"	t
unAddrType	../env/NDK.h	/^	uint  unAddrType;	\/\/\/< 地址类型$/;"	m	struct:st_socket_addr	access:public
unAddrType	../inc/NDK-bak.h	/^	uint  unAddrType;	\/\/\/< address type$/;"	m	struct:st_socket_addr	access:public
unBandClass	../env/NDK.h	/^	uint unBandClass;\/**<带宽类型*\/$/;"	m	struct:__anon45	access:public
unBattryPercent	../env/NDK.h	/^    uchar unBattryPercent;\/*电池电量百分比（插电源时电压百分比为0，0xff表示未知）*\/$/;"	m	struct:__POWERINFO	access:public
unBid	../env/NDK.h	/^	uint unBid;		\/**<系统识别码*\/$/;"	m	struct:__anon45	access:public
unChannel	../env/NDK.h	/^	uint unChannel;		\/**<频道*\/$/;"	m	struct:__anon45	access:public
unCi	../env/NDK.h	/^	uint unCi;\/**<小区号码*\/$/;"	m	struct:station_info	access:public
unFlag	../libapi/lposcard.h	/^    uint    unFlag; 	         		\/**<刷卡输入方式 EM_CARDINPUTMODE *\/$/;"	m	struct:__anon177	access:public
unFlickOff	../env/NDK.h	/^    uint unFlickOff;        \/\/闪烁持续灯灭时间，100MS为单位$/;"	m	struct:__anon61	access:public
unFlickOn	../env/NDK.h	/^    uint unFlickOn;         \/\/闪烁持续灯亮时间，100MS为单位$/;"	m	struct:__anon61	access:public
unFreeSpace	../env/NDK.h	/^	uint unFreeSpace;	\/**<可以用空间大小*\/$/;"	m	struct:__anon71	access:public
unFreeSpace	../inc/NDK-bak.h	/^	uint unFreeSpace;	\/**<Can use the space size*\/$/;"	m	struct:__anon146	access:public
unFunctionKeyFlag	../libapi/lposcard.h	/^	uint    unFunctionKeyFlag;	\/**<是否支持功能键,1支持，0不支持*\/$/;"	m	struct:__anon177	access:public
unIndex1Len	../libapi/ltool.h	/^	unsigned int unIndex1Len;		\/**<索引字段1的长度    *\/$/;"	m	struct:tagRecFile	access:public
unIndex1Start	../libapi/ltool.h	/^	unsigned int unIndex1Start;		\/**<索引字段1的起始位置*\/$/;"	m	struct:tagRecFile	access:public
unIndex2Len	../libapi/ltool.h	/^	unsigned int unIndex2Len;		\/**<索引字段2的长度    *\/$/;"	m	struct:tagRecFile	access:public
unIndex2Start	../libapi/ltool.h	/^	unsigned int unIndex2Start; 	\/**<索引字段2的起始位置*\/$/;"	m	struct:tagRecFile	access:public
unInputMaxLen	../libapi/lposcard.h	/^	uint    unInputMaxLen;	\/**<手工输入最大长度*\/$/;"	m	struct:__anon177	access:public
unInputMinLen	../libapi/lposcard.h	/^    uint    unInputMinLen;		\/**<手工输入最小长度*\/$/;"	m	struct:__anon177	access:public
unIsCharging	../env/NDK.h	/^    uchar unIsCharging;     \/*是否在充电(0表示不在充电，1表示充电中,0xff表示未知) *\/$/;"	m	struct:__POWERINFO	access:public
unKeycode	../env/NDK.h	/^        uint unKeycode;\/**<按键值*\/$/;"	m	struct:__st_PADDATA	access:public
unLac	../env/NDK.h	/^	uint unLac;\/**<位置区号码*\/$/;"	m	struct:station_info	access:public
unMCC	../env/NDK.h	/^	uint unMCC;		\/**<移动国家号*\/$/;"	m	struct:__anon45	access:public
unMCC	../env/NDK.h	/^	uint unMCC;  \/**<移动国家号*\/$/;"	m	struct:station_info	access:public
unMNC	../env/NDK.h	/^	uint unMNC;		\/**<移动网络号*\/$/;"	m	struct:__anon45	access:public
unMNC	../env/NDK.h	/^	uint unMNC;	\/**<移动网络号*\/$/;"	m	struct:station_info	access:public
unMaintk	../libapi/lposcard.h	/^    uint    unMaintk;			\/**<优先磁道 EM_MAINTK *\/$/;"	m	struct:__anon177	access:public
unMaxOneRecLen	../libapi/ltool.h	/^	unsigned int unMaxOneRecLen;	\/**<最大的单条记录长度 *\/  $/;"	m	struct:tagRecFile	access:public
unModlen	../env/NDK.h	/^	uint	unModlen;					\/**< 加密公钥模数长  *\/$/;"	m	struct:__anon38	access:public
unModlen	../inc/NDK-bak.h	/^	uint	unModlen;					\/**< length of modulus for public encrytion key  *\/$/;"	m	struct:__anon121	access:public
unNid	../env/NDK.h	/^	uint unNid;		\/**<网络中的某一个小区*\/$/;"	m	struct:__anon45	access:public
unPadX	../env/NDK.h	/^        uint unPadX;    \/**<横坐标*\/$/;"	m	struct:__st_PADDATA	access:public
unPadY	../env/NDK.h	/^        uint unPadY;    \/**<纵坐标*\/$/;"	m	struct:__st_PADDATA	access:public
unPowerType	../env/NDK.h	/^    int unPowerType;  \/*电源类型$/;"	m	struct:__POWERINFO	access:public
unRverse	../env/NDK.h	/^    uint unRverse[2];$/;"	m	struct:__anon61	access:public
unSid	../env/NDK.h	/^	uint unSid;		\/**<网络识别码*\/$/;"	m	struct:__anon45	access:public
unSleepTime	../libapi/lposcard.h	/^    uint    unSleepTime;		\/**<需要休眠的时间,单位s,为0的表示不休眠*\/$/;"	m	struct:__anon177	access:public
unTimeout	../libapi/lposcard.h	/^    uint    unTimeout;			\/**<刷卡超时,单位s*\/$/;"	m	struct:__anon177	access:public
unTotalSpace	../env/NDK.h	/^	uint unTotalSpace;	\/**<总空间大小*\/$/;"	m	struct:__anon71	access:public
unTotalSpace	../inc/NDK-bak.h	/^	uint unTotalSpace;	\/**<The total size*\/$/;"	m	struct:__anon146	access:public
uninit_gui	../env/widget.h	/^void uninit_gui(void);$/;"	p	signature:(void)
usBits	../env/NDK.h	/^    ushort usBits;                    			\/**< RSA密钥位数 *\/$/;"	m	struct:__anon39	access:public
usBits	../inc/NDK-bak.h	/^    ushort usBits;                    		\/**< RSA key, number of bits *\/$/;"	m	struct:__anon122	access:public
usPort	../env/NDK.h	/^	ushort usPort;					      \/\/\/< IP 端口.$/;"	m	struct:st_socket_addr	access:public
usPort	../inc/NDK-bak.h	/^	ushort usPort;					      \/\/\/< IP port.$/;"	m	struct:st_socket_addr	access:public
usage	../inc/tr31_format.h	/^	uint8_t usage[2];       	\/* Key Usage *\/$/;"	m	struct:__anon167	access:public
usage	../inc/tr31_format.h	/^        uint8_t usage[2];       \/* Key Usage *\/$/;"	m	struct:__anon166	access:public
user	../env/widget.h	/^	int    user;			\/**< 图像被共享的次数 *\/$/;"	m	struct:__anon80	access:public
user	../inc/parsecfg.h	/^	cfgStruct *user;$/;"	m	struct:__anon159	access:public
ushort	../env/NDK.h	/^typedef unsigned short 	ushort;$/;"	t
ushort	../inc/NDK-bak.h	/^typedef unsigned short ushort;$/;"	t
value	../inc/libconfig.h	/^  config_value_t value;$/;"	m	struct:config_setting_t	access:public
value	../inc/parsecfg.h	/^	void *value;$/;"	m	struct:__anon158	access:public
value	../libapi/libconfig.h	/^  config_value_t value;$/;"	m	struct:config_setting_t	access:public
ver	../inc/PriKeyDownload.h	/^    unsigned char ver[16];               \/*私钥版本*\/$/;"	m	struct:__anon161	access:public
ver_id	../inc/tr31_format.h	/^        uint8_t ver_id;         \/* Key Block Version ID --- 'A'(0x41) *\/$/;"	m	struct:__anon166	access:public
ver_num	../inc/tr31_format.h	/^        uint8_t ver_num[2];     \/* Key Version Number *\/$/;"	m	struct:__anon166	access:public
ver_num	../inc/tr31_format.h	/^    uint8_t ver_num[2];     	\/* Key Version Number *\/$/;"	m	struct:__anon167	access:public
version	../inc/theme.h	/^    char version[20];$/;"	m	struct:__anon165	access:public
w	../env/NDK.h	/^	int  w;							\/**<字体显示的宽度*\/$/;"	m	struct:__anon20	access:public
w	../inc/NDK-bak.h	/^	int  w;							\/**<width of font displayed*\/$/;"	m	struct:__anon104	access:public
wait_connect	../src/genreq.c	/^int wait_connect()$/;"	f
wait_respond	../src/genreq.c	/^int wait_respond()$/;"	f
widget_clean_input	../env/widget.h	/^void widget_clean_input(void);$/;"	p	signature:(void)
widget_disable	../env/widget.h	/^void widget_disable(widget_t * widget, int draw);$/;"	p	signature:(widget_t * widget, int draw)
widget_draw	../env/widget.h	/^void widget_draw(widget_t * widget, int x, int y, image_t * img, int xoff, int yoff, int draw);$/;"	p	signature:(widget_t * widget, int x, int y, image_t * img, int xoff, int yoff, int draw)
widget_enable	../env/widget.h	/^void widget_enable(widget_t * widget, int draw);$/;"	p	signature:(widget_t * widget, int draw)
widget_fill	../env/widget.h	/^void widget_fill(widget_t * widget, color_t cr, int draw);$/;"	p	signature:(widget_t * widget, color_t cr, int draw)
widget_hide	../env/widget.h	/^void widget_hide(widget_t * widget, int draw);$/;"	p	signature:(widget_t * widget, int draw)
widget_image_zoom	../env/widget.h	/^int widget_image_zoom(char *imgout,int width,int height,char * imgin);$/;"	p	signature:(char *imgout,int width,int height,char * imgin)
widget_line	../env/widget.h	/^void widget_line(widget_t * widget, int x1, int y1, int x2, int y2, color_t cr, int draw);$/;"	p	signature:(widget_t * widget, int x1, int y1, int x2, int y2, color_t cr, int draw)
widget_rect	../env/widget.h	/^void widget_rect(widget_t * wid, int *x, int *y, int *w, int *h);$/;"	p	signature:(widget_t * wid, int *x, int *y, int *w, int *h)
widget_refresh	../env/widget.h	/^void widget_refresh(widget_t * widget, int x, int y, int w, int h);$/;"	p	signature:(widget_t * widget, int x, int y, int w, int h)
widget_release_focus	../env/widget.h	/^void widget_release_focus(widget_t * widget);$/;"	p	signature:(widget_t * widget)
widget_restore	../env/widget.h	/^void widget_restore(widget_t * widget, int draw);$/;"	p	signature:(widget_t * widget, int draw)
widget_set_focus	../env/widget.h	/^void widget_set_focus(widget_t *widget);$/;"	p	signature:(widget_t *widget)
widget_set_focus_from	../env/widget.h	/^void widget_set_focus_from(widget_t *widget);$/;"	p	signature:(widget_t *widget)
widget_show	../env/widget.h	/^void widget_show(widget_t * widget, int draw);$/;"	p	signature:(widget_t * widget, int draw)
widget_t	../env/widget.h	/^typedef void widget_t;$/;"	t
widget_textout	../env/widget.h	/^void widget_textout(widget_t * widget, int x, int y, char * text, color_t cr, int draw);$/;"	p	signature:(widget_t * widget, int x, int y, char * text, color_t cr, int draw)
widget_to_image	../env/widget.h	/^image_t * widget_to_image(widget_t * wid);$/;"	p	signature:(widget_t * wid)
width	../env/widget.h	/^	unsigned int width;  			\/**< 图像宽度（像素） *\/$/;"	m	struct:__anon80	access:public
wifisignal	../inc/theme.h	/^	image_t wifisignal[4];$/;"	m	struct:__anon165	access:public
window_attach_loop	../env/widget.h	/^int window_attach_loop(widget_t * win,int (*on_loop)(widget_t * win));$/;"	p	signature:(widget_t * win,int (*on_loop)(widget_t * win))
window_close_disable	../env/widget.h	/^void window_close_disable(widget_t * win, int draw);$/;"	p	signature:(widget_t * win, int draw)
window_close_enable	../env/widget.h	/^void window_close_enable(widget_t * win, int draw);$/;"	p	signature:(widget_t * win, int draw)
window_destroy	../env/widget.h	/^void window_destroy(widget_t * win);$/;"	p	signature:(widget_t * win)
window_direction_key_disable	../env/widget.h	/^int window_direction_key_disable(widget_t * win);$/;"	p	signature:(widget_t * win)
window_direction_key_enable	../env/widget.h	/^int window_direction_key_enable(widget_t * win);$/;"	p	signature:(widget_t * win)
window_exit	../env/widget.h	/^void window_exit(widget_t * win);$/;"	p	signature:(widget_t * win)
window_loop	../env/widget.h	/^int window_loop(widget_t * win);$/;"	p	signature:(widget_t * win)
window_new	../env/widget.h	/^widget_t * window_new(int flags, char * title, char * iconpath);$/;"	p	signature:(int flags, char * title, char * iconpath)
window_pause	../env/widget.h	/^void window_pause(widget_t * win, int clearevent);$/;"	p	signature:(widget_t * win, int clearevent)
window_set_icon	../env/widget.h	/^void window_set_icon(widget_t * win, char * iconpath, int draw);$/;"	p	signature:(widget_t * win, char * iconpath, int draw)
window_set_title	../env/widget.h	/^void window_set_title(widget_t * win, char * title, int draw);$/;"	p	signature:(widget_t * win, char * title, int draw)
window_show	../env/widget.h	/^void window_show(widget_t * win);$/;"	p	signature:(widget_t * win)
wlsignal	../inc/theme.h	/^	image_t wlsignal[6];$/;"	m	struct:__anon165	access:public
xauth_private_encryption	../src/PriKey_app.c	/^int xauth_private_encryption(char *keyfile, int inlen, char *in, char *out, int mode)$/;"	f	signature:(char *keyfile, int inlen, char *in, char *out, int mode)
